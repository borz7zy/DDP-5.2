//#snippet new_cmd CMD:cmd_name(playerid) {\n\treturn 1;\n}
//#snippet new_cmd_p CMD:cmd_name(playerid, const params[]) {\n\treturn 1;\n}
//#snippet new_fpub fpub:func_name(){\n\treturn 1;\n}

#define MIXED_SPELLINGS

#include <open.mp>
#include <Pawn.RakNet>
#tryinclude <rakcheat>
#include <sscanf2>
//#tryinclude <nex-ac>
#include <streamer>
#include <foreach>
//#tryinclude <weapon-config>
#include <a_mysql>
#include <Pawn.CMD>
#include <mxdate>
#include <mapandreas>
#include <YSI\YSI_Visual\y_dialog>

// #pragma dynamic 50484

#define MAX_GANGS 1000

enum( <<= 1)
{
    CMD_LOGGED = 1,
    CMD_SPAWNED,
    CMD_GANG,
    CMD_VIP,
    CMD_ADMIN
};

enum gang_info
{
    gID,
    bool:gCreated,
    gName[31],
    gSkins[6],
    gColor[11],
    Float:gSpawns[3],
    gSpawnInt,
    gCDate,
    gPlayers,
    gGlawa[MAX_PLAYER_NAME],
    bool:gVerifyCapt,
    gLastOneCapt,
    gLastTwoCapt
}
new GangInfo[MAX_GANGS][gang_info];

enum
{
    g_NonePage = 0,
    g_SetNamePage,
    g_SetSkinPage,
    g_SetSpawnPage,
    g_SetPlayerLevelPage,
    g_InvitePage,
    g_UnInvitePage,
    g_SetColorPage,
    g_ExitPlayerPage,
    g_DestroyGangPage,
    g_cSetColorPage,
    g_SetSkinTwoPage,
    g_SetPlayerLevelTwoPage
}

#define NS "DDP«"
#define MNS "«"
#define IP_S "45.84.1.51:1818"
#define GEN_D "dzh1nb0y"
#define DEVONE "dzh1nb0y"
#define VK_G "vk.com/rds.energy"
#define VK_GEN_D "vk.com/id2518601"
#define VK_DEV "vk.com/p_i_g"
#define COLOR_SERVER "{8F30E4}"

enum
{
    DIALOG_ZERO = 2
};

#define fpub:%0(%1) forward %0(%1); public %0(%1)

new MySQL:ServerDB;

//==========================Money Bag========================
enum mbinfo
{
    Float:XPOS,
    Float:YPOS,
    Float:ZPOS,
    Position[50]
};

new Float:MBSPAWN[][mbinfo] =
{
    //{Float:X, Float:Y, Float:Z, String:Location}
    {713.073852, 912.842224, -19.096578, "The Quarry"},
    {688.145507, 844.974914, -28.631895, "The Quarry"},
    {586.370788, 913.020202, -34.194843, "The Quarry"},
    {503.419708, 970.914550, -24.997589, "The Quarry"},
    {499.296356, 971.732788, -25.047336, "The Quarry"},
    {458.502136, 891.120666, -27.374114, "The Quarry"},
    {628.248901, 735.500732, -0.903092, "The Quarry"},
    {627.924438, 1046.961303, 25.122577, "The Quarry"},
    {792.460510, 915.044189, 20.112213, "The Quarry"},
    {320.508636, 848.626281, 19.967500, "The Quarry"},
    {361.191741, 829.137329, 21.289638, "The Quarry"},
    {462.726348, 973.174621, 5.403401, "The Quarry"},
    {484.878112, 962.291137, 5.981633, "The Quarry"},
    {591.441650, 706.663513, 9.760972, "The Quarry"},
    {770.800415, 746.815368, 27.704566, "The Quarry"},
    {434.217102, 898.344543, 2.117520, "The Quarry"},
    {488.367218, 810.184814, 1.804343, "The Quarry"},
    {528.185913, 816.695800, -11.858360, "The Quarry"},
    {568.221130, 824.427429, -22.127143, "The Quarry"},
    {575.399353, 872.569091, -35.329307, "The Quarry"},
    {623.156188, 892.809875, -41.102825, "The Quarry"},
    {418.428070, 1409.390625, 8.565642, "The Petroleum"},
    {475.849548, 1325.585083, 11.321235, "The Petroleum"},
    {541.844848, 1556.681152, 0.482253, "The Petroleum"},
    {597.308898, 1535.999389, 3.586513, "The Petroleum"},
    {669.860534, 1422.952880, 10.887602, "The Petroleum"},
    {559.382812, 1371.361328, 16.322978, "The Petroleum"},
    {438.514587, 1268.192016, 9.017544, "The Petroleum"},
    {585.843322, 1485.281738, 12.073791, "The Petroleum"},
    {229.331573, 1478.390502, 10.151371, "Green Palms"},
    {152.056015, 1447.338256, 10.156622, "Green Palms"},
    {133.937881, 1377.117065, 10.158605, "Green Palms"},
    {205.768768, 1352.408081, 10.151306, "Green Palms"},
    {210.495468, 1395.340332, 10.151283, "Green Palms"},
    {215.108322, 1467.936157, 14.921875, "Green Palms"},
    {215.115737, 1467.059326, 23.734375, "Green Palms"},
    {187.969940, 1371.305786, 23.734375, "Green Palms"},
    {246.766662, 1360.596679, 10.707500, "Green Palms"},
    {246.478836, 1362.749633, 23.370285, "Green Palms"},
    {222.136520, 1424.068847, 10.585937, "Green Palms"},
    {95.363838, 1831.129028, 17.205287, "Area 69"},
    {189.325698, 1940.272949, 17.213102, "Area 69"},
    {193.302978, 1940.295654, 17.212646, "Area 69"},
    {261.569244, 1807.425537, 25.498508, "Area 69"},
    {201.875762, 1873.929809, 12.774854, "Area 69"},
    {238.924987, 1863.955078, 11.460937, "Area 69"},
    {221.148391, 1822.212890, 7.531250, "Area 69"},
    {245.811523, 1813.676025, 4.710937, "Area 69"},
    {257.617523, 1819.045043, 1.007812, "Area 69"},
    {280.195648, 1840.170532, 11.534780, "Area 69"},
    {282.369171, 1874.492065, 8.757812, "Area 69"},
    {266.978424, 1858.773071, 8.757812, "Area 69"},
    {262.194854, 1886.633789, -30.390625, "Area 69"},
    {268.940002, 1883.556152, -30.093750, "Area 69"},
    {268.277374, 1891.600708, -12.862023, "Area 69"},
    {268.972656, 1876.503906, -3.470956, "Area 69"},
    {275.735778, 1892.228881, 8.437500, "Area 69"},
    {246.438491, 1830.403930, 12.210659, "Area 69"},
    {134.512237, 1952.987426, 18.978763, "Area 69"},
    {-41.510822, 1178.722290, 18.961349, "Fort Carson"},
    {2.213922, 1119.721435, 19.450517, "Fort Carson"},
    {17.874195, 1076.159057, 19.804994, "Fort Carson"},
    {-95.816307, 1164.927001, 19.312730, "Fort Carson"},
    {-100.357772, 1127.539672, 19.323959, "Fort Carson"},
    {-117.773254, 1132.638061, 19.326152, "Fort Carson"},
    {-190.864791, 1218.766357, 19.306653, "Fort Carson"},
    {-218.729446, 1147.502807, 19.328531, "Fort Carson"},
    {-378.680541, 1103.303466, 19.314443, "Fort Carson"},
    {-312.767395, 1175.458740, 19.307266, "Fort Carson"},
    {-209.111099, 1216.520629, 23.436161, "Fort Carson"},
    {-170.258102, 1176.971801, 24.155366, "Fort Carson"},
    {-172.726379, 1182.572753, 26.504249, "Fort Carson"},
    {-824.523559, 1444.919677, 13.547593, "Las Barrancas"},
    {-811.227539, 1479.601074, 26.136028, "Las Barrancas"},
    {-778.594482, 1477.787719, 28.764667, "Las Barrancas"},
    {-801.825866, 1513.152099, 21.131435, "Las Barrancas"},
    {-730.415039, 1539.924682, 40.065593, "Las Barrancas"},
    {-733.456970, 1553.795654, 39.189163, "Las Barrancas"},
    {-737.410278, 1593.716186, 26.656929, "Las Barrancas"},
    {-774.510375, 1616.915771, 26.687776, "Las Barrancas"},
    {-835.524841, 1597.141967, 26.505504, "Las Barrancas"},
    {-888.960021, 1553.529907, 25.501276, "Las Barrancas"},
    {-862.112548, 1536.867919, 25.737701, "Las Barrancas"},
    {-856.268554, 1528.398559, 25.737701, "Las Barrancas"},
    {-303.303192, 2744.042236, 61.440700, "Las Payasadas"},
    {-210.072189, 2814.655273, 64.240028, "Las Payasadas"},
    {-164.061630, 2767.596435, 62.252616, "Las Payasadas"},
    {-166.319808, 2730.175537, 65.696540, "Las Payasadas"},
    {-213.414306, 2719.982177, 62.687500, "Las Payasadas"},
    {-287.109222, 2687.127441, 65.852340, "Las Payasadas"},
    {-268.482818, 2667.310546, 62.670055, "Las Payasadas"},
    {-282.033843, 2651.087402, 67.323928, "Las Payasadas"},
    {-307.318756, 2652.917236, 68.252456, "Las Payasadas"},
    {-237.491958, 2663.685546, 63.858531, "Las Payasadas"},
    {-153.610809, 2711.833984, 62.144855, "Las Payasadas"},
    {-235.506256, 2826.033935, 61.760990, "Las Payasadas"},
    {123.295402, 2427.276123, 16.638261, "Verdant Meadows"},
    {152.007369, 2417.473388, 19.140531, "Verdant Meadows"},
    {209.578689, 2415.689697, 16.322700, "Verdant Meadows"},
    {237.976455, 2432.690185, 16.626625, "Verdant Meadows"},
    {276.434844, 2430.887695, 16.041940, "Verdant Meadows"},
    {313.228027, 2415.748046, 19.511663, "Verdant Meadows"},
    {349.762481, 2451.393310, 20.452396, "Verdant Meadows"},
    {412.917022, 2432.326904, 16.054676, "Verdant Meadows"},
    {435.414642, 2561.705078, 16.089130, "Verdant Meadows"},
    {414.310363, 2533.625732, 19.148437, "Verdant Meadows"},
    {401.180969, 2544.245849, 19.631122, "Verdant Meadows"},
    {390.938781, 2607.264160, 16.049514, "Verdant Meadows"},
    {334.645782, 2677.588867, 15.882289, "Verdant Meadows"},
    {306.708404, 2629.444335, 16.256523, "Verdant Meadows"},
    {271.063079, 2611.989257, 16.041421, "Verdant Meadows"},
    {172.383773, 2606.412597, 16.116966, "Verdant Meadows"},
    {154.106018, 2630.396240, 16.041749, "Verdant Meadows"},
    {115.394462, 2631.614501, 15.986257, "Verdant Meadows"},
    {104.371681, 2582.203613, 16.044742, "Verdant Meadows"},
    {14.670138, 2560.055419, 15.932084, "Verdant Meadows"},
    {9.903661, 2435.500732, 16.019382, "Verdant Meadows"},
    {-2452.078125, 2438.356933, 14.555831, "Bayside"},
    {-2417.809570, 2456.555908, 25.779113, "Bayside"},
    {-2406.699462, 2469.222656, 12.183320, "Bayside"},
    {-2415.591552, 2386.210205, 7.998282, "Bayside"},
    {-2386.701904, 2398.892578, 8.845354, "Bayside"},
    {-2407.274902, 2477.111816, 11.345425, "Bayside"},
    {-2403.085449, 2553.951904, 23.601562, "Bayside"},
    {-2286.216552, 2572.171142, 23.416145, "Bayside"},
    {-2262.795410, 2573.447753, 8.214822, "Bayside"},
    {-2675.145996, 2322.950927, 25.147560, "Bayside"},
    {-2336.536376, 2480.192138, 1.275272, "Bayside"},
    {-2625.399658, 2245.826171, 6.694106, "Bayside"},
    {-2634.328125, 2240.306152, 14.622048, "Bayside"},
    {-2627.168457, 2234.247070, 12.825107, "Bayside"},
    {-2629.958984, 2243.830566, 12.611998, "Bayside"},
    {-2624.168212, 2245.396972, 6.268455, "Bayside"},
    {-2551.672851, 2432.413330, 18.866594, "Bayside"},
    {-2293.487060, 2225.002685, 4.982191, "Bayside"},
    {-2578.585693, 2520.823730, 21.721471, "Bayside"},
    {-2497.177978, 2455.601562, 17.332534, "Bayside"},
    {-2299.505859, 2277.234619, 4.978750, "Bayside"},
    {-2353.547119, 2430.278320, 7.510148, "Bayside"},
    {1316.041870, 275.046447, 31.049236, "Montgomery"},
    {1304.498779, 150.734161, 23.841037, "Montgomery"},
    {1424.074584, 234.264190, 19.554687, "Montgomery"},
    {1397.934692, 289.888427, 23.555511, "Montgomery"},
    {1377.866699, 317.458984, 19.554687, "Montgomery"},
    {1236.187255, 304.846252, 24.757812, "Montgomery"},
    {1239.561157, 288.248535, 25.755512, "Montgomery"},
    {1264.523315, 269.752105, 22.237289, "Montgomery"},
    {1283.437011, 264.630554, 23.762454, "Montgomery"},
    {1352.665161, 199.973419, 19.554687, "Montgomery"},
    {1363.234741, 195.539321, 23.227035, "Montgomery"},
    {1417.051757, 260.263885, 24.656915, "Montgomery"},
    {1414.501342, 363.570312, 19.164152, "Montgomery"},
    {1397.685424, 357.668762, 19.415740, "Montgomery"},
    {1374.767822, 366.475738, 21.055135, "Montgomery"},
    {1291.057983, 392.483947, 19.531446, "Montgomery"},
    {1282.783935, 385.586151, 27.555513, "Montgomery"},
    {1238.631103, 370.964813, 27.555509, "Montgomery"},
    {1183.289062, 230.991256, 19.561769, "Montgomery"},
    {1224.791137, 246.335128, 23.282218, "Montgomery"},
    {1270.518188, 240.601501, 31.107307, "Montgomery"},
    {1266.207519, 234.240051, 25.048685, "Montgomery"},
    {1290.146484, 300.298248, 28.560659, "Montgomery"},
    {198.153564, -189.123001, 7.578125, "Blueberry"},
    {244.182067, -312.091217, 1.578125, "Blueberry"},
    {377.058685, -126.040382, 1.282783, "Blueberry"},
    {331.945190, -21.335258, 8.999382, "Blueberry"},
    {270.666198, 25.962350, 7.423792, "Blueberry"},
    {269.469726, -39.207118, 2.076274, "Blueberry"},
    {249.126205, -55.748535, 2.778613, "Blueberry"},
    {200.529525, -2.403444, 1.585840, "Blueberry"},
    {151.374862, -112.419876, 8.206827, "Blueberry"},
    {186.791824, -97.364349, 4.896471, "Blueberry"},
    {294.001983, -195.634521, 7.138307, "Blueberry"},
    {79.888191, -172.170288, 3.240008, "Blueberry"},
    {90.263679, -196.305435, 1.484375, "Blueberry"},
    {307.548217, -256.133117, 1.583575, "Blueberry"},
    {130.356811, -65.668479, 1.578125, "Blueberry"},
    {201.947799, -107.787826, 1.552092, "Blueberry"},
    {251.443710, -59.984920, 5.882812, "Blueberry"},
    {338.868713, 39.111991, 6.514575, "Blueberry"},
    {233.187500, 88.724472, 3.707660, "Blueberry"},
    {271.035064, -325.480102, 4.109173, "Blueberry"},
    {258.287322, -91.798759, 6.548583, "Blueberry"},
    {660.309570, -515.073425, 22.836296, "Dillimore"},
    {681.892456, -471.186981, 24.570465, "Dillimore"},
    {720.187500, -460.116394, 23.195312, "Dillimore"},
    {766.745727, -565.935180, 18.013334, "Dillimore"},
    {766.601135, -565.742553, 18.013334, "Dillimore"},
    {795.740600, -498.457305, 18.013332, "Dillimore"},
    {830.493530, -483.307739, 17.335937, "Dillimore"},
    {822.035034, -539.921508, 23.336297, "Dillimore"},
    {806.729309, -644.110595, 16.335937, "Dillimore"},
    {837.977600, -618.451599, 16.427936, "Dillimore"},
    {872.614746, -589.113098, 17.975578, "Dillimore"},
    {618.945983, -495.678375, 17.036308, "Dillimore"},
    {613.239624, -511.376983, 20.336296, "Dillimore"},
    {668.560424, -565.262573, 20.646862, "Dillimore"},
    {655.586303, -565.002868, 22.147821, "Dillimore"},
    {663.681518, -552.116699, 16.335937, "Dillimore"},
    {666.731262, -624.085144, 16.335937, "Dillimore"},
    {659.283569, -649.963623, 16.335937, "Dillimore"},
    {714.395568, -638.833496, 15.661087, "Dillimore"},
    {706.086425, -513.023925, 19.836296, "Dillimore"},
    {697.977600, -502.530029, 20.336296, "Dillimore"},
    {2252.387695, -71.207305, 31.594974, "Palimino Creek"},
    {2256.675292, -51.222541, 33.039546, "Palimino Creek"},
    {2280.761474, -43.499469, 33.915302, "Palimino Creek"},
    {2331.433349, -16.148464, 29.984375, "Palimino Creek"},
    {2307.091796, 42.845218, 26.484375, "Palimino Creek"},
    {2312.534423, 81.270088, 34.412147, "Palimino Creek"},
    {2282.645019, 80.523757, 34.983432, "Palimino Creek"},
    {2270.598876, 52.587516, 29.983432, "Palimino Creek"},
    {2237.241210, -146.453750, 25.870410, "Palimino Creek"},
    {2294.017333, -133.607147, 28.153959, "Palimino Creek"},
    {2290.864501, -125.560646, 31.281974, "Palimino Creek"},
    {2494.198486, 84.268798, 26.484375, "Palimino Creek"},
    {2522.718505, -35.541027, 27.843750, "Palimino Creek"},
    {2371.754638, 166.031631, 28.441642, "Palimino Creek"},
    {2221.037597, 187.976211, 26.053337, "Palimino Creek"},
    {2175.741210, -96.308731, 25.773351, "Palimino Creek"},
    {2194.704589, -51.970607, 27.476959, "Palimino Creek"},
    {2521.830566, 147.489349, 26.660923, "Palimino Creek"},
    {2503.659667, 138.658645, 26.476562, "Palimino Creek"},
    {2385.197021, 132.599624, 26.477228, "Palimino Creek"},
    {2497.073974, 73.162178, 26.484375, "Palimino Creek"},
    {1113.000366, -298.941436, 79.273048, "Hilltop Farms"},
    {1145.276123, -319.449951, 68.736564, "Hilltop Farms"},
    {1139.270874, -279.303375, 68.293548, "Hilltop Farms"},
    {1109.191650, -254.074951, 73.178703, "Hilltop Farms"},
    {1074.967651, -290.027832, 76.994865, "Hilltop Farms"},
    {1045.733276, -292.704284, 77.359375, "Hilltop Farms"},
    {1038.980712, -314.385131, 73.993080, "Hilltop Farms"},
    {1019.215393, -280.257232, 73.992187, "Hilltop Farms"},
    {1017.502319, -291.644531, 77.359375, "Hilltop Farms"},
    {1025.220092, -286.122772, 73.993080, "Hilltop Farms"},
    {1008.152404, -361.344543, 73.992187, "Hilltop Farms"},
    {1031.137329, -286.081237, 73.992187, "Hilltop Farms"},
    {-91.739074, 47.309322, 3.117187, "Blueberry Acres"},
    {-59.916896, 110.778358, 3.117187, "Blueberry Acres"},
    {-21.062276, 101.820167, 3.117187, "Blueberry Acres"},
    {-39.467891, 54.310203, 3.117187, "Blueberry Acres"},
    {-57.822875, 58.630420, 12.634796, "Blueberry Acres"},
    {6.610152, -116.727790, 0.827577, "Blueberry Acres"},
    {-234.935729, -49.896484, 3.117187, "Blueberry Acres"},
    {-63.104183, -42.047443, 3.117187, "Blueberry Acres"},
    {-101.163230, -42.706863, 3.960474, "Blueberry Acres"},
    {-65.395072, -79.674530, 3.117187, "Blueberry Acres"},
    {-71.846885, 16.072692, 4.960474, "Blueberry Acres"},
    {-115.097801, -158.043121, 3.053518, "Blueberry Acres"},
    {-74.329200, 134.758972, 3.117187, "Blueberry Acres"},
    {-180.387710, 158.206222, 6.585262, "Blueberry Acres"},
    {43.705768, 31.582788, 2.406414, "Blueberry Acres"},
    {-120.041000, -101.572135, 3.118082, "Blueberry Acres"},
    {-97.865242, 3.703858, 6.140625, "Blueberry Acres"},
    {-141.913879, -45.108047, 3.117187, "Blueberry Acres"},
    {-96.231872, -43.475280, 6.484375, "Blueberry Acres"},
    {-614.443786, 151.758407, 25.818775, "The Panopticon"},
    {-526.496093, 58.226322, 50.909709, "The Panopticon"},
    {-472.907379, -169.445770, 78.210937, "The Panopticon"},
    {-735.953918, 57.285392, 26.305458, "The Panopticon"},
    {-546.440124, -61.437793, 63.233062, "The Panopticon"},
    {-710.849609, -206.753967, 69.553245, "The Panopticon"},
    {-436.740875, -59.873924, 58.875000, "The Panopticon"},
    {-751.409790, -114.402214, 67.739364, "The Panopticon"},
    {-925.530151, -124.350387, 57.936649, "The Panopticon"},
    {-400.126495, 236.726394, 9.927101, "The Panopticon"},
    {-520.779357, -125.374198, 69.994155, "The Panopticon"},
    {-561.900878, -178.898284, 78.413543, "The Panopticon"},
    {-539.732116, -161.536758, 78.206115, "The Panopticon"},
    {-532.769287, -177.417663, 84.258483, "The Panopticon"},
    {-389.482971, -211.937072, 59.564701, "The Panopticon"},
    {-406.703948, -1449.153686, 26.062500, "Flint Range"},
    {-396.805908, -1426.215209, 38.644241, "Flint Range"},
    {-365.578216, -1413.950805, 29.640625, "Flint Range"},
    {-364.751220, -1434.614501, 25.726562, "Flint Range"},
    {-584.598876, -1482.920043, 11.257370, "Flint Range"},
    {-558.555603, -1289.688232, 24.061843, "Flint Range"},
    {-210.887054, -1339.520751, 11.636716, "Flint Range"},
    {-203.383239, -1279.539794, 7.933257, "Flint Range"},
    {-370.022949, -1469.212768, 25.726562, "Flint Range"},
    {-257.378387, -1502.086059, 6.142509, "Flint Range"},
    {-329.254211, -1537.986083, 14.820620, "Flint Range"},
    {-370.188598, -1416.738281, 25.726562, "Flint Range"},
    {-468.467102, -1423.658813, 17.497291, "Flint Range"},
    {-366.230377, -1425.508422, 36.910018, "Flint Range"},
    {-438.425720, -1307.287841, 34.957294, "Flint Range"},
    {-326.334747, -1312.265869, 9.666571, "Flint Range"},
    {-2508.313232, -675.049499, 139.320312, "Missionary Hill"},
    {-2528.568359, -700.439453, 141.788848, "Missionary Hill"},
    {-2438.275146, -464.318084, 91.305053, "Missionary Hill"},
    {-2543.994384, -783.435424, 69.258705, "Missionary Hill"},
    {-2693.597412, -752.083862, 51.020137, "Missionary Hill"},
    {-2600.115478, -547.044921, 86.723999, "Missionary Hill"},
    {-2314.386230, -888.267517, 7.742542, "Missionary Hill"},
    {-2322.930664, -655.598815, 107.419876, "Missionary Hill"},
    {-2324.206054, -683.263916, 104.464118, "Missionary Hill"},
    {-2394.915283, -468.217041, 87.153312, "Missionary Hill"},
    {-2631.078613, -596.495971, 90.808830, "Missionary Hill"},
    {-2542.992431, -656.802001, 139.079116, "Missionary Hill"},
    {-2432.825439, -391.364898, 69.389305, "Missionary Hill"},
    {-2617.927001, -749.242065, 74.848922, "Missionary Hill"},
    {-2175.949951, -2417.699218, 34.296875, "Angel Pine"},
    {-2161.742919, -2453.351562, 37.592113, "Angel Pine"},
    {-2147.736572, -2461.206787, 30.851562, "Angel Pine"},
    {-2090.979492, -2469.472900, 33.924186, "Angel Pine"},
    {-2053.039306, -2544.468261, 31.066806, "Angel Pine"},
    {-2132.012939, -2433.635986, 39.040298, "Angel Pine"},
    {-2182.593994, -2428.734375, 35.523437, "Angel Pine"},
    {-2224.829833, -2396.499511, 35.533672, "Angel Pine"},
    {-2243.295654, -2359.313720, 30.750513, "Angel Pine"},
    {-2191.753173, -2345.898437, 35.007812, "Angel Pine"},
    {-2178.140625, -2314.520019, 37.743614, "Angel Pine"},
    {-2199.897949, -2243.446044, 33.320312, "Angel Pine"},
    {-2186.412353, -2245.995605, 30.721515, "Angel Pine"},
    {-2081.464843, -2254.676025, 37.810462, "Angel Pine"},
    {-2139.485839, -2263.617675, 37.106971, "Angel Pine"},
    {-2130.179931, -2362.220703, 37.803909, "Angel Pine"},
    {-2245.683837, -2489.593261, 30.939933, "Angel Pine"},
    {-2115.936523, -2417.141113, 31.226562, "Angel Pine"},
    {-2293.220947, -2449.365478, 25.740257, "Angel Pine"},
    {-1972.621704, -2409.536376, 36.779953, "Angel Pine"},
    {-2034.074829, -2350.098144, 40.890625, "Angel Pine"},
    {-2101.847412, -2341.794677, 34.820312, "Angel Pine"},
    {-1181.246826, -1169.744262, 129.218750, "The Farm"},
    {-1064.526367, -1202.956298, 136.825164, "The Farm"},
    {-1073.703247, -1236.239135, 129.218750, "The Farm"},
    {-960.019836, -969.289123, 136.249679, "The Farm"},
    {-1178.073120, -1139.615356, 129.218750, "The Farm"},
    {-1086.143554, -1304.293945, 129.218750, "The Farm"},
    {-1099.003295, -971.934814, 129.218750, "The Farm"},
    {-1062.486328, -913.190063, 129.211929, "The Farm"},
    {-1186.598144, -1138.081909, 132.746429, "The Farm"},
    {-1087.829833, -1084.395629, 129.218750, "The Farm"},
    {-1004.356140, -1013.866821, 129.218750, "The Farm"},
    {-1033.648925, -1068.210327, 129.218750, "The Farm"},
    {-1019.635437, -1153.692138, 129.218750, "The Farm"},
    {-1026.010375, -1183.257690, 129.218750, "The Farm"},
    {-1007.072387, -1296.862426, 132.661285, "The Farm"},
    {-1124.512817, -1222.314208, 129.218750, "The Farm"},
    {-1087.444824, -1677.984130, 76.373939, "Leafy Hallows"},
    {-1087.494018, -1678.885498, 76.373939, "Leafy Hallows"},
    {-1091.211059, -1663.834472, 76.367187, "Leafy Hallows"},
    {-1108.562622, -1634.623657, 80.057617, "Leafy Hallows"},
    {-1078.178222, -1607.183349, 76.367187, "Leafy Hallows"},
    {-1130.027343, -1606.987304, 76.367187, "Leafy Hallows"},
    {-1112.752685, -1621.049194, 86.261589, "Leafy Hallows"},
    {-1097.599121, -1627.398681, 76.367187, "Leafy Hallows"},
    {-946.533935, -1746.916137, 76.381385, "Leafy Hallows"},
    {-927.683105, -1701.916503, 77.025894, "Leafy Hallows"},
    {-923.776733, -1757.801513, 75.444259, "Leafy Hallows"},
    {-905.625366, -1730.898193, 78.139099, "Leafy Hallows"},
    {-1128.219360, -1696.092529, 76.558853, "Leafy Hallows"},
    {-1026.914428, -1733.098632, 76.425018, "Leafy Hallows"},
    {-1137.569824, -1630.458251, 76.367187, "Leafy Hallows"},
    {-1094.567626, -1663.774780, 76.367187, "Leafy Hallows"},
    {-1043.661254, -1621.000000, 76.367187, "Leafy Hallows"},
    {-907.789489, -1669.016723, 92.697944, "Leafy Hallows"},
    {2556.437744, -644.786804, 137.252746, "North Rock"},
    {2514.413818, -716.559753, 101.872634, "North Rock"},
    {2443.473388, -657.824401, 121.906684, "North Rock"},
    {2612.934814, -497.000335, 78.922164, "North Rock"},
    {2657.899414, -602.413452, 84.188896, "North Rock"},
    {2683.218017, -516.679077, 65.786819, "North Rock"},
    {2627.179199, -666.909179, 128.962661, "North Rock"},
    {2759.122314, -633.098876, 60.327945, "North Rock"},
    {2356.232910, -558.502868, 120.259140, "North Rock"},
    {2558.949218, -523.134826, 86.272521, "North Rock"},
    {-1012.700317, -754.431518, 32.007812, "Easter Bay Chemicals"},
    {-1095.468139, -629.071044, 34.089599, "Easter Bay Chemicals"},
    {-1109.042358, -601.289489, 34.089599, "Easter Bay Chemicals"},
    {-1074.046508, -600.883239, 34.089599, "Easter Bay Chemicals"},
    {-1112.463256, -748.833557, 32.007812, "Easter Bay Chemicals"},
    {-996.942810, -720.715209, 35.937500, "Easter Bay Chemicals"},
    {-987.252502, -716.223449, 35.901714, "Easter Bay Chemicals"},
    {-1037.941650, -697.023925, 32.007812, "Easter Bay Chemicals"},
    {-972.693725, -719.797607, 37.171875, "Easter Bay Chemicals"},
    {-1057.215332, -758.628417, 37.171875, "Easter Bay Chemicals"},
    {-1127.549194, -701.471435, 32.007812, "Easter Bay Chemicals"},
    {-973.345092, -635.038330, 32.007812, "Easter Bay Chemicals"},
    {-1099.870605, -696.740661, 32.351562, "Easter Bay Chemicals"},
    {-1057.206665, -634.323059, 35.493179, "Easter Bay Chemicals"},
    {-1017.676330, -704.239746, 32.007812, "Easter Bay Chemicals"},
    {-1525.973999, 2652.515136, 59.711399, "El Quebrados"},
    {-1507.893920, 2626.360107, 59.233432, "El Quebrados"},
    {-1530.962646, 2590.045654, 60.793697, "El Quebrados"},
    {-1481.348388, 2618.711181, 62.335689, "El Quebrados"},
    {-1416.942138, 2582.434082, 62.005947, "El Quebrados"},
    {-1437.265258, 2559.354248, 55.835937, "El Quebrados"},
    {-1459.728881, 2616.084960, 55.835937, "El Quebrados"},
    {-1452.608764, 2640.138183, 55.835937, "El Quebrados"},
    {-1463.314697, 2720.380126, 65.580146, "El Quebrados"},
    {-1550.759765, 2701.973876, 55.835937, "El Quebrados"},
    {-1567.961425, 2714.753662, 59.495937, "El Quebrados"},
    {-1591.316162, 2639.252685, 54.892074, "El Quebrados"},
    {-1564.054321, 2561.529541, 66.368583, "El Quebrados"},
    {-1593.676757, 2562.781250, 68.570213, "El Quebrados"},
    {-1461.241210, 2653.424804, 58.912673, "El Quebrados"},
    {-1470.498413, 2554.702636, 55.835937, "El Quebrados"},
    {-1579.125488, 2641.298095, 55.835937, "El Quebrados"},
    {-1521.946166, 2709.298339, 55.835937, "El Quebrados"},
    {-828.082336, 2661.674560, 104.945419, "Valle Ocultado"},
    {-835.934020, 2659.769775, 96.975189, "Valle Ocultado"},
    {-831.431640, 2695.995361, 53.576766, "Valle Ocultado"},
    {-803.072448, 2695.158203, 67.962074, "Valle Ocultado"},
    {-799.726013, 2704.947265, 47.416099, "Valle Ocultado"},
    {-788.210693, 2694.006103, 48.357761, "Valle Ocultado"},
    {-785.256774, 2719.440917, 45.300182, "Valle Ocultado"},
    {-779.532104, 2774.275146, 45.864643, "Valle Ocultado"},
    {-879.216064, 2747.853759, 46.000000, "Valle Ocultado"},
    {-724.237121, 2761.054199, 47.958900, "Valle Ocultado"},
    {-921.067687, 2675.897705, 45.312007, "Valle Ocultado"},
    {-912.755981, 2685.360595, 45.579273, "Valle Ocultado"},
    {-895.774658, 2672.384033, 42.191963, "Valle Ocultado"},
    {-769.700073, 2770.898437, 50.696720, "Valle Ocultado"},
    {-801.442077, 2776.446044, 45.975139, "Valle Ocultado"},
    {-737.213012, 2744.907470, 50.156967, "Valle Ocultado"},
    {-809.037780, 2809.187255, 49.179012, "Valle Ocultado"},
    {-821.493896, 2690.416259, 67.090553, "Valle Ocultado"},
    {-875.683532, 2693.958251, 52.923053, "Valle Ocultado"},
    {-918.803100, 2669.565429, 42.370262, "Valle Ocultado"},
    {-928.732421, 2707.239257, 42.883373, "Valle Ocultado"},
    {-384.209350, 2206.028564, 45.671134, "Ghost Town"},
    {-417.697753, 2246.862548, 42.429687, "Ghost Town"},
    {-384.358673, 2206.287841, 45.671134, "Ghost Town"},
    {-375.438262, 2241.879882, 47.126880, "Ghost Town"},
    {-371.937103, 2266.688964, 42.484375, "Ghost Town"},
    {-395.177276, 2246.250000, 50.119434, "Ghost Town"},
    {-324.652770, 2216.008789, 44.212184, "Ghost Town"},
    {-456.136169, 2223.866699, 42.894790, "Ghost Town"},
    {-435.397033, 2249.250732, 46.098773, "Ghost Town"},
    {-397.759216, 2198.488281, 42.425659, "Ghost Town"},
    {-327.913360, 2231.848876, 43.372142, "Ghost Town"},
    {-439.359222, 2219.759033, 47.228851, "Ghost Town"},
    {-765.302185, 2491.239013, 102.136093, "Acro del Oeste"},
    {-802.416625, 2444.712158, 157.024627, "Acro del Oeste"},
    {-769.736938, 2423.740478, 161.240509, "Acro del Oeste"},
    {-775.107543, 2454.568847, 155.394210, "Acro del Oeste"},
    {-825.450378, 2423.629394, 154.799423, "Acro del Oeste"},
    {-811.348144, 2392.648925, 154.081359, "Acro del Oeste"},
    {-869.765625, 2308.967285, 161.556732, "Acro del Oeste"},
    {-854.010314, 2395.529785, 90.695556, "Acro del Oeste"},
    {-865.451293, 2353.720458, 99.970436, "Acro del Oeste"},
    {-794.787414, 2267.457275, 58.976562, "Acro del Oeste"},
    {-806.945800, 2257.034667, 59.155395, "Acro del Oeste"},
    {-861.962158, 2275.708984, 69.768547, "Acro del Oeste"},
    {-806.547485, 2257.323242, 70.167610, "Acro del Oeste"},
    {-798.468383, 2249.032958, 52.464538, "Acro del Oeste"},
    {-819.647888, 2380.772460, 128.528991, "Acro del Oeste"},
    {-659.340942, 2310.784667, 137.731201, "Acro del Oeste"},
    {-629.103271, 2387.976806, 128.003738, "Acro del Oeste"},
    {-1967.813110, -923.389343, 32.226562, "Foster Valley"},
    {-1975.327148, -895.343750, 35.289417, "Foster Valley"},
    {-1945.200073, -1091.307373, 32.175434, "Foster Valley"},
    {-1904.608642, -1029.386840, 32.223834, "Foster Valley"},
    {-2059.095214, -989.335815, 32.171875, "Foster Valley"},
    {-2100.027343, -862.919860, 32.171875, "Foster Valley"},
    {-2153.603271, -793.245605, 31.976562, "Foster Valley"},
    {-2065.419677, -811.472534, 32.171875, "Foster Valley"},
    {-1964.095703, -726.187255, 37.390625, "Foster Valley"},
    {-1970.476440, -729.316772, 37.682456, "Foster Valley"},
    {-1971.316284, -729.375305, 38.024555, "Foster Valley"},
    {-1954.998413, -894.500610, 35.890884, "Foster Valley"},
    {-1952.155517, -991.665954, 35.890625, "Foster Valley"},
    {-1971.808837, -988.987060, 32.226562, "Foster Valley"},
    {-2040.327270, -734.473449, 32.171875, "Foster Valley"},
    {-1954.255981, -763.292663, 35.890884, "Foster Valley"},
    {-1934.306640, -817.633239, 35.277336, "Foster Valley"},
    {-2154.379394, -889.910583, 32.171875, "Foster Valley"},
    {-1933.880859, -957.182373, 35.292263, "Foster Valley"},
    {-2077.329833, -876.431518, 32.171875, "Foster Valley"},
    {-2021.934204, -889.969665, 30.179347, "Foster Valley"},
    {-1967.698486, -923.311828, 32.226562, "Foster Valley"},
    {-1975.518432, -881.348754, 35.289417, "Foster Valley"},
    {-1949.256469, -866.676269, 32.226562, "Foster Valley"},
    {-1893.254760, -884.175720, 31.968750, "Foster Valley"},
    {-1939.472412, -792.035339, 32.226562, "Foster Valley"},
    {-1944.139770, -744.467956, 32.226562, "Foster Valley"},
    {-1938.702148, -702.345642, 32.171875, "Foster Valley"},
    {-1912.550048, -715.325622, 32.158123, "Foster Valley"},
    {-1890.561767, -715.974426, 32.171875, "Foster Valley"},
    {-1314.880126, 2523.205566, 93.098388, "Aldea Malvada"},
    {-1340.013183, 2566.662841, 92.453392, "Aldea Malvada"},
    {-1342.981445, 2577.075195, 77.273002, "Aldea Malvada"},
    {-1316.729370, 2595.577880, 73.072959, "Aldea Malvada"},
    {-1300.144653, 2546.430664, 87.742187, "Aldea Malvada"},
    {-1365.330444, 2531.653320, 87.216758, "Aldea Malvada"},
    {-1289.671264, 2516.583984, 87.161216, "Aldea Malvada"},
    {-1314.141967, 2528.084716, 87.613708, "Aldea Malvada"},
    {-1369.994506, 2530.447753, 77.454376, "Aldea Malvada"},
    {-1325.340332, 2516.338378, 87.046875, "Aldea Malvada"},
    {-1324.558593, 2532.424560, 87.561912, "Aldea Malvada"},
    {-1346.553466, 2565.318115, 80.643333, "Aldea Malvada"},
    {-541.176086, -561.201354, 26.798007, "The Fallen Tree"},
    {-504.101501, -539.727050, 25.523437, "The Fallen Tree"},
    {-503.481170, -527.582458, 25.523437, "The Fallen Tree"},
    {-475.996154, -552.346740, 33.121536, "The Fallen Tree"},
    {-470.645874, -538.255004, 29.121538, "The Fallen Tree"},
    {-466.353302, -468.697967, 25.523437, "The Fallen Tree"},
    {-517.881530, -496.789825, 25.523437, "The Fallen Tree"},
    {-620.473388, -472.812927, 25.523437, "The Fallen Tree"},
    {-644.839599, -445.775238, 27.982749, "The Fallen Tree"},
    {-586.403198, -398.734558, 24.491775, "The Fallen Tree"},
    {-554.032104, -423.535186, 29.328639, "The Fallen Tree"},
    {-488.099975, -449.957580, 42.387664, "The Fallen Tree"},
    {-507.062316, -434.387115, 37.013797, "The Fallen Tree"},
    {-501.433959, -570.266723, 24.771287, "The Fallen Tree"},
    {-440.963348, -582.747680, 14.563718, "The Fallen Tree"},
    {-624.458557, -561.871093, 26.267879, "The Fallen Tree"},
    {-657.998779, -588.320190, 33.299449, "The Fallen Tree"},
    {-505.762481, -522.940368, 36.364982, "The Fallen Tree"},
    {-615.547546, -506.135650, 33.525276, "The Fallen Tree"},
    {-596.443237, -526.158813, 33.525276, "The Fallen Tree"},
    {-615.139038, -531.275512, 37.525276, "The Fallen Tree"},
    {-624.562072, -509.588043, 33.459438, "The Fallen Tree"},
    {-531.809875, -467.091979, 26.224544, "The Fallen Tree"}
};
new Float:MoneyBagPos[3], MoneyBagFound = 1, MoneyBagLocation[50], MoneyBagPickup, Timer[2];

//Hours, Minutes, Seconds, Milliseconds
#define MoneyBagDelay(%1,%2,%3,%4) (%1*3600000)+(%2*60000)+(%3*1000)+%4
//20 = 200,000 minimum 30 = 200,000 -> 500,000
#define MoneyBagCash ((random(30)+20)*1000)
//10 mins!
#define MB_DELAY MoneyBagDelay(0, 10, 0, 0)

//==================Money Bag===============================

#define VehicleSpeed_1       false//speedometer
#define VehicleSpeed_2       true

#define DRIFT_MINKAT 10.0//drift bonus
#define DRIFT_MAXKAT 90.0
#define DRIFT_SPEED 30.0

#define COLOR_GRAD1 0xB4B5B7FF
#define COLOR_GREY 0xAFAFAFFF
#define COLOR_GREEN 0x00FF00FF
#define COLOR_RED 0xFF0000FF
#define COLOR_RED3d 0xAA3333FF
#define COLOR_LIGHTRED 0xFF6347FF
#define COLOR_LIGHTBLUE 0x33CCFFFF
#define COLOR_LIGHTGREEN 0x9ACD32FF
#define COLOR_CGREEN 0xBFF600FF
#define COLOR_CGREEN3d 0xBFF600FF
#define COLOR_YELLOW 0xFFFF00FF
#define COLOR_YELLOW3d 0xFFFF00FF
#define COLOR_YELLOW2 0xF5DEB3FF
#define COLOR_YELLOW23d 0xF5DEB3FF
#define COLOR_WHITE 0xFFFFFFFF
#define COLOR_FADE1 0xE6E6E6FF
#define COLOR_FADE2 0xC8C8C8FF
#define COLOR_FADE3 0xAAAAAAFF
#define COLOR_FADE4 0x8C8C8CFF
#define COLOR_FADE5 0x6E6E6EFF
#define COLOR_PURPLE 0xC2A2DAFF
#define COLOR_PINK 0xFF66FFFF
#define COLOR_DBLUE 0x2641FEFF
#define COLOR_LEMON 0xDDDD23FF
#define COLOR_BASIC 0x0066FFFF
#define COLOR_VIOLET 0x8F30E4FF

#define OBRAD 13 //÷èñëî ðàäèî +1//Ðàäèî

forward MinServ();//òàéìåð ìèíóò íà ñåðâåðå
forward VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz);//ñïàâí òðàíñïîðòà (äîï)

new bool:R_Vehicle[MAX_PLAYERS] = false;//speedometer
new PlayerText:VehicleSpeed[MAX_PLAYERS];

new DriftPointsNow[MAX_PLAYERS];
new PlayerDriftCancellation[MAX_PLAYERS];
new Float:ppos[MAX_PLAYERS][3];
new	drifttimer;

new NRadio[MAX_PLAYERS];//ïåðåìåííàÿ íîìåðà ïîäêëþ÷åííîãî ðàäèî//Ðàäèî
new STRadio[OBRAD][128];//ìàññèâ URL-ññûëîê íà ðàäèî-ïîòîêè
new NMRadio[OBRAD][64];//ìàññèâ íàçâàíèé ðàäèî

new StopHidrav[MAX_PLAYERS];//ïåðåìåííàÿ çàäåðæêè ãèäðàâëèêè
new countdown22[MAX_PLAYERS];//îáðàòíûé DM-îòñ÷¸ò
new PlayerText:HMS44[MAX_PLAYERS];
new HMS77[212] = {176, 164, 208, 123, 149, 183, 123, 166, 112, 177,//400-409//ìàññèâ ìàêñèìàëüíîé ãîðèçîíòàëüíîé ñêîðîñòè
                  145, 247, 188, 123, 118, 215, 172, 150, 129, 167,//410-419
                  162, 172, 157, 111, 151, 200, 194, 185, 175, 225,//420-429
                  208, 146, 106, 124, 187, 64, 167, 176, 160, 188,//430-439
                  152, 85, 156, 141, 124, 183, 297, 160, 125, 202,//440-449
                  59, 216, 205, 65, 149, 176, 119, 107, 176, 152,//450-459
                  233, 180, 125, 161, 68, 63, 164, 157, 161, 151,//460-469
                  175, 123, 141, 121, 167, 193, 300, 208, 132, 156,//470-479
                  206, 82, 175, 137, 72, 112, 73, 201, 200, 156,//480-489
                  175, 167, 157, 202, 240, 197, 182, 212, 121, 138,//490-499
                  157, 41, 240, 240, 193, 156, 200, 185, 121, 89,//500-509
                  114, 200, 200, 250, 135, 159, 176, 176, 184, 300,//510-519
                  300, 180, 197, 170, 146, 179, 176, 167, 197, 167,//520-529
                  68, 79, 123, 187, 188, 177, 193, 202, 202, 115,//530-539
                  167, 227, 184, 169, 166, 164, 167, 160, 150, 172,//540-549
                  162, 176, 136, 300, 161, 177, 124, 124, 174, 199,//550-559
                  189, 172, 199, 150, 99, 184, 179, 193, 164, 1,//560-569
                  1, 105, 68, 124, 68, 176, 176, 300, 146, 176,//570-579
                  171, 170, 152, 96, 41, 171, 161, 184, 121, 182,//580-589
                  800, 64, 300, 200, 69, 132, 196, 196, 196, 177,//590-599
                  169, 124, 189, 191, 164, 169, 111, 111, 4, 121,//600-609
                  21, 111
                 };//610-611
new ColorPlay[MAX_PLAYERS];//ïåðåìåííàÿ öâåòà èãðîêà

new mapiconid[MAX_PLAYERS];//ìàññèâ ID ìàï èêîíîê íàáëþäåíèÿ
new dddrift[MAX_PLAYERS];//ïåðåìåííàÿ êîíòðîëÿ äðèôòà

new timpolsec;//ïåðåìåííàÿ òàéìåðà 450 ìñ
new livdop[MAX_PLAYERS];//ïåðåìåííàÿ âûêëþ÷åíèÿ áåññìåðòèÿ
new tpdrift[MAX_PLAYERS];//ïåðåìåííàÿ ñáðîñà äðèôò-î÷êîâ ïðè ÒÏ
new minsertimer;//ïåðåìåííàÿ òàéìåðà
new countdown[MAX_PLAYERS];
new WEAPON:playweap[MAX_PLAYERS][WEAPON_SLOT:13];//ìàññèâ îðóæèÿ
new playammo[MAX_PLAYERS][WEAPON_SLOT:13];//ìàññèâ êîëè÷åñòâà ïàòðîíîâ

enum pTune
{
    pBoostLevel,
    Float:pBoostSpeed,
    pBoostDown
};
new DiceLock[MAX_PLAYERS]; //Çàïðåùàåì êèäàòü êîñòè
new DiceName[MAX_PLAYERS]; //Óñòàíàëèâàåì èìÿ àêòèâíîé èãðû
new DiceMoney[MAX_PLAYERS];
new UniParam[MAX_PLAYERS]; //Óíèâåðñàëüíàÿ ïåðåìåííàÿ äëÿ ëþáûõ çàäà÷
new FloodStop[MAX_PLAYERS]; //Êîíòðîëüíàÿ ïåðåìåííàÿ îò ôëóäà

new Float:RandomSpawns[][4] =
{
    {153.6635, -1940.3774, 3.7734, 359.1931},
    {2180.6038, -2272.9414, 13.4850, 82.77},
    {388.6408, -1523.2218, 32.2734, 223.5877},
    {1127.0583, -1446.9573, 15.4261, 83.28},
    {-2049.1440, 461.4249, 35.1719, 314.0035}
};

new ColNick[19] = {0xFF0000FF, 0xFF3F3FFF, 0xFF3F00FF, 0xBF3F00FF, 0xFF7F3FFF, 0xFF7F00FF, 0xFFFF00FF, 0x3FFF3FFF, 0x00FF00FF,
                   0x00BF00FF, 0x00FFFFFF, 0x00BFFFFF, 0x3F3FFFFF, 0x0000FFFF, 0x7F3FFFFF, 0x7F00FFFF, 0xFF00FFFF, 0x7F7F7FFF, 0x00FF0000
                  };//ìàññèâ öâåòîâ íèêà

new neon[MAX_PLAYERS][3];
new migalka[MAX_PLAYERS][2];
new migalkatr1[MAX_PLAYERS];//ïåðåäà÷à äàííûõ ìåæäó ÷àñòÿìè ïðîãðàììû ðàçäåë¸ííûõ òàéìåðîì
new migalkatr2[MAX_PLAYERS];
new tpspa;//ñëó÷àéíûé èíäåêñ âûáîðêè èç ìàññèâà êîîðäèíàò ñïàâíà èãðîêà
new playcar[MAX_PLAYERS];//èä òðàíñïîðòà èãðîêà
new bool:gPlayerLogged[MAX_PLAYERS];
new bool:gPlayerSpawned[MAX_PLAYERS];
new bool:autorepair[MAX_PLAYERS];

enum Float:Pos
{
    Float:sX,
    Float:sY,
    Float:sZ,
    Float:dltX,
    Float:dltY,
    Float:dltZ
};
new Float:SavedPos[MAX_PLAYERS][Pos];

enum pInfo
{
    pMID,
    pName[MAX_PLAYER_NAME],
    pKey[65],
    pHASH[17],
    pTDReg[256],
    pIPAdr[17],
    pMinlog,
    pReg,
    pWarns,
    pKills,
    pDeaths,
    pRecPM,
    pCombo,
    pSkin,
    pPodbor,
    pGang,
    pGangLvl,
    pHouseID,
    pActionHouseID,
    pHouseChangeInt,
    pDriftExp,
    pExpRecord,
    pColorNickname,
    pSpawnChange,
    Labirint1,
    TrackMania1,
    TrackMania2,
    TrackMania3,
    pSex,
    pVIP,
    Float:pvsx,
    Float:pvsy,
    Float:pvsz,
    Float:pvsa,

    Float:saveX,
    Float:saveY,
    Float:saveZ,
    Float:saveA,
    saveInt,
    saveVw,
    bool:pAnimLoading,

    pPermissions
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new WEAPON:gPlayerWeapon[MAX_PLAYERS][26];
new gPlayerLastStateWeapon[MAX_PLAYERS][128];

new Muted[MAX_PLAYERS];
new Prison[MAX_PLAYERS];
new bool:DeathInPrison[MAX_PLAYERS];

#define PRISONZONES 1
static const Float:prisoncord[PRISONZONES][6] =
{
    {1080.0409, 1110.2682, 1090.0049, 1110.9816, 1090.4895, 1110.3124}//ïðèñîí ïåðâûé
};

new prisonid[PRISONZONES];
new bool:prisoncheck[MAX_PLAYERS];
new prisontimer[MAX_PLAYERS];

enum aInfo
{
    db_ID,
    aName[MAX_PLAYER_NAME],
    aPass[65],
    aHASH[17],
    aLevel,
    aDGet,
    aMakeAdmin[MAX_PLAYER_NAME],
    aDEnd,
    aMakeAdminEnd[MAX_PLAYER_NAME],
    aReasonEnd[144],
    aKickPlayers,
    aBlock,
    aBanPlayers,
    aLogCount,
    aResPlayer,
    aTimeOnline,
    aGod,
    aShad,
    bool:aReadPM,
    bool:aReadCMD,
    bool:aReadCheat,
    ////////
    aVehicle,
    aSpectateID,
    aSpectateType,
    aSpectateOldINT,
    aSpectateOldVW,
    Float:aSpecX,
    Float:aSpecY,
    Float:aSpecZ,
    Float:aSpecA
};
new AI[MAX_PLAYERS][aInfo];

#define ADMIN_SPEC_TYPE_VEHICLE 2
#define ADMIN_SPEC_TYPE_PLAYER 3
#define ADMIN_SPEC_TYPE_NONE 4

new Text:logo[4];
new Text:scrscr[MAX_PLAYERS][2];
fpub:KickPublic(playerid) return Kick(playerid);
fpub:BanPublic(playerid) return Ban(playerid);
#define Kick(%0) SetTimerEx("KickPublic", 200, false, "i", %0)
#define Ban(%0) SetTimerEx("BanPublic", 200, false, "i", %0)

new ObjectSelect[MAX_VEHICLES][2]; // Ôàðû

new sms;
new respawncars;

new juzzi;
new juzzi_exit;
new mayak[2];
new police;
new police_exit;
new drak;
new drak_exit;

new dmzone[MAX_PLAYERS];
new dmkills[MAX_PLAYERS];
new dmdeath[MAX_PLAYERS];

static inc_gLetters[26 * 2 + 10] = {'A', 'a', 'B', 'b', 'C', 'c', 'D', 'd', 'E',
                                    'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j', 'K', 'k', 'L', 'l', 'M',
                                    'm', 'N', 'n', 'O', 'o', 'P', 'p', 'Q', 'q', 'R', 'r', 'S', 's', 'T', 't', 'U',
                                    'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z', '0', '1', '2', '3', '4',
                                    '5', '6', '7', '8', '9'
                                   };

#define MAX_BUSSINES 2000

enum BussinesData
{
    bID,
    Type,
    Price,
    Float:xX,
    Float:yY,
    Float:zZ,
    BuyID,
    accumulation,
    /////Ýòî íà ñåðâåð îòïðàâëÿòü ÍÅ ÍÀÄÎ!!!
    bPickupID,
    Text3D:bLabelID,
    bMapIconID,
    bOwner[MAX_PLAYER_NAME],
    bAccum,
    bAccumOffline
};

new BI[MAX_BUSSINES][BussinesData];
/*
enum BussBuy{
	Idbuyer,
	IdSeller,
	Cost,
	IdBus,
	IdTimer
};*/

//new BusSell[MAX_PLAYERS][BussBuy];

static const recommended_cost_bus[20] =
{
    7000000,//0 +
    5000000,//1 +
    5000000,//2 +
    3000000,//3 +
    3000000,//4 +
    7000000,//5 +
    7000000,//6 +
    3000000,//7 +
    10000000,//8 +
    5000000,//9 +
    7000000,//10 +
    5000000,//11 +
    10000000,//12 +
    3000000,//13 +
    5000000,//14 +
    3000000,//15 +
    10000000,//16 +
    10000000,//17 +
    7000000,//18 +
    10000000///19 +
};

static const btipname[20][] =
{
    {"Ðåñòîðàí"},//0
    {"Áàð"},//1
    {"Íî÷íîé êëóá"},//2
    {"Ïðîäóêòîâûé ìàãàçèí"},//3
    {"Ìàãàçèí õîçòîâàðîâ"},//4
    {"Ìóçåé"},//5
    {"Êèíîòåàòð"},//6
    {"Êàôå"},//7
    {"Ãîñòèíèöà"},//8
    {"Ñàóíà"},//9
    {"Òîðãîâûé öåíòð"},//10
    {"Òåàòð"},//11
    {"Àýðîïîðò"},//12
    {"Ëîäî÷íàÿ"},//13
    {"Ìàãàçèí îäåæäû"},//14
    {"Ñïîðòçàë"},//15
    {"Òàòó-ñàëîí"},//16
    {"Àâòîìàñòåðñêàÿ"},//17
    {"ÀÇÑ"},//18
    {"Çàâîä"}//19
};

new BugTicks[MAX_PLAYERS];

// Ñèñòåìà äîìîâ. Created by Uporoty (ñïàñèáî çà äåòñòâî Boufen_ è Moofer!!! âçÿòî èç ìîåãî ëþáèìîãî RDM (vk.com/rdm_drift))
#define MAX_CREATE_HOUSE (2000) // ìàêñèìàëüíîå êîëè÷åñòâî äîìîâ, êîòîðîå ìîæíî ñîçäàòü, óêàçûâàéòå çíà÷åíèå ïî æåëàíèþ
new MAX_CREATED_HOUSE = 0;
enum gHousesInfo
{
    g_hInt,
    Float:g_hCoordX,
    Float:g_hCoordY,
    Float:g_hCoordZ,
    Float:g_hCoordR,
    g_hKlass,
    g_hChangeCost,
    g_Case,
    g_MoneyCase
}
// öèôðû â êîíöå êàæäîé ñòðîêè â ïåðåìåííîé íèæå îçíà÷àþò êëàññ èíòåðüåðà, 1 - A, 2 - B, 3 - C
static const gHousesSetting[][gHousesInfo] =
{
    { 6,  2196.5281, -1204.4010, 1049.0234, 271.0742,	2, 1200000 }, //1
    { 10, 2259.8296, -1135.8306, 1050.6328, 90.0000,	3, 600000 }, //2
    { 11, 2282.9333, -1140.0242, 1050.8984, 180.0000,	3, 200000 }, //3
    { 5,  2233.6519, -1114.8540, 1050.8828, 179.2510,	3, 300000 }, //4
    { 1,  2217.9666, -1076.2738, 1050.4844, 269.6171,	3, 400000 }, //5
    { 3,  2495.9980, -1692.3485, 1014.7422, 357.7208,	1, 2300000 }, //6
    { 8,  2365.2600, -1135.3553, 1050.8750, 181.7744,	2, 600000 }, //7
    { 9,  2317.7830, -1026.4294, 1050.2178, 176.3786,	1, 1000000 }, //8
    { 12, 2324.3674, -1149.0553, 1050.7101, 178.5590,	1, 3000000 }, //9
    { 5,  140.2695, 1366.4138, 1083.8594, 179.1230,	1, 6000000 }, //10
    { 5,  1261.3035, -785.3925, 1091.9063, 87.9358,	1, 10000000 } //11
};

static const recomended_cost_houses[3] = {	15000000, 5000000, 1000000 };

enum lHouseInfo
{
    hID,
    bool:hOwned,
    hOwner[MAX_PLAYER_NAME],
    bool:hLocked,
    hCost,
    Float:hEnterCoord[3],
    hKlass,
    hInt,
    hPickupID,
    Text3D:hLabelID,
    hMapIconID
}
new HouseInfo[MAX_CREATE_HOUSE][lHouseInfo];

new driftexp[MAX_PLAYERS];

new PlayerText3D:SpawnTextDraw[MAX_PLAYERS][sizeof(RandomSpawns)];

/////////////Äëÿ ðàáîò
/*
*   ID1: Ãðóç÷èê
*/
new job[MAX_PLAYERS] = {0}; //ïîêà ìàêñèìàëüíûé àéäèøíèê ðàáîò ñîñòàâëÿåò 1, ïîñëå âûðàñòåò
new oldskin[MAX_PLAYERS] = {-1};
static const Float:JobTeleport[][3] =
{
    {1989.7802, -1977.5104, 13.5545}, //Ãðóç÷èê
    {-49.8215, -271.7951, 6.6332},
    {-1840.8948, 170.5221, 14.7759}//Äàëüíîáîéùèê
};
new PickUpsJobs[1];
//Ãðóç÷èê
new bool:MeshokUp[MAX_PLAYERS] = {false};
new indexMeshok[MAX_PLAYERS] = {0};
static const Float:Gruz4ikCords[][3] =
{
    {2035.5969, -1966.7594, 13.5469}, // 0 //Äëÿ âçÿòèÿ ìåøêîâ
    {2026.5931, -1970.3635, 13.5469}, // 1
    {2017.6896, -1966.3739, 13.5469}, // 2
    {2009.5802, -1970.4370, 13.5469}, // 3
    {2001.3461, -1966.7502, 13.5469}, // 4
    {2011.0958, -1984.3588, 13.5469}, // 5 //Ïîëîæèòü ìåøîê
    {2012.4375, -1988.7494, 13.5469} // 6 //Óñòðîéñòâî/óâîëüíåíèå ñ ðàáîòû
};
//äàëüíîáîéùèê
new Pricep[10];
new Text3D:Pricep3dtext[10];
new Checkpoint[MAX_PLAYERS];
new MyPricep[MAX_PLAYERS];
//åâåíòû
new bool:Events[MAX_PLAYERS][4];

static const Float:EndTrack[][6] =
{
    {3195.8340,	-4783.8276,	28.6353,	3233.3391,	-4752.6260,	66.5920},
    {77.5915,	6357.5708,	85.9931,	25.0185,	6298.1426,	111.8081},
    {-85.5091,	6417.3716,	127.3392,	-67.2808,	6426.6216,	145.1464}
};

new TrackManiaCheck[3];

static const Float:DMZONESTELEPORTS[][4] =
{
    {972.8326,	2065.7810,	10.8203,	19.7578},//1 zone
    {947.9825,	2101.3384,	10.8203,	247.2503},
    {922.9001,	2103.2031,	10.8203,	29.8078},
    {953.9127,	2133.4929,	10.8203,	214.4230},
    {981.2083,	2121.8921,	10.8203,	122.3883},
    {20.1207,	1388.3862,	994.6484,	135.7255},//2 zone
    {-9.5188,	1388.0531,	994.6484,	219.5038},
    {-23.6518,	1355.8120,	994.6484,	280.6983},
    {3.7682,	1341.4468,	994.6484,	5.2050},
    {-1.6811,	1357.8405,	994.6484,	263.2949}
};
new randomzone[2];

//DUELSYS
#define DIALOG_DUELWEAPONS              2340
#define DIALOG_DUELWEAPONSTWO   		2341

new Duel[MAX_PLAYERS],
    DuelEndTimer[MAX_PLAYERS],
    Duelmaker[MAX_PLAYERS],
    Duelopponent[MAX_PLAYERS],
    Gotrequest[MAX_PLAYERS],
    Maderequest[MAX_PLAYERS],
    Duelbet[MAX_PLAYERS],
    UnDuelend[MAX_PLAYERS],
    Duelrounds[MAX_PLAYERS],
    Duelwins[MAX_PLAYERS],
    WEAPON:Duelweap1[MAX_PLAYERS],
    WEAPON:Duelweap2[MAX_PLAYERS];
//DUELSYS

new PlayerText:spec_TD[MAX_PLAYERS];

new Text:skins_TD[7];
static const femaleskins[] = {9, 10, 11, 12, 13, 31, 38, 39, 40, 41, 53, 54, 55, 56, 63, 64, 65, 69,
                                        75, 76, 77, 85, 87, 88, 89, 90, 91, 92, 93, 129, 130, 131, 138, 139, 140, 141, 145, 148, 150, 151, 152,
                                        157, 169, 172, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 207, 211, 214, 215,
                                        216, 218, 219, 224, 225, 226, 231, 232, 233, 237, 238, 243, 244, 245, 246, 251, 256, 257, 263, 298,
                                        306, 307, 308, 309
                                       };

new selectskin[MAX_PLAYERS];

// Ïîæàðíèê
stock completion_fire [ MAX_PLAYERS ], object_fire [ MAX_PLAYERS ],
      clothes_fire, fire_tc [ 3 ], fire_timer[MAX_PLAYERS];

static const Float:
checkpoint_fire [] [3] =
{
    {-1885.4749, 827.3283, 35.1748},
    {-1786.6190, 1204.6625, 25.1250},
    {-2519.3904, 1218.6324, 36.9915},
    {-2564.3645, 860.1001, 57.6008},
    {-2638.1321, 262.7579, 3.8976},
    {-2616.5173, 97.3323, 3.8993},
    {-2493.9026, -16.4303, 25.3380},
    {-2129.0073, -263.3761, 34.8834},
    {-2079.2786, 264.4718, 35.0587},
    {-1146.3232, -153.7775, 13.7057},
    {-983.8960, -707.8654, 31.5719}
};

#define MAX_SLOTS_CAR 5
enum PlayerCars
{
    cID,
    cOwner,
    cCarid,
    cTextcar[256]
};
new MyCarInfo[MAX_PLAYERS][MAX_SLOTS_CAR][PlayerCars];

main() return;

stock NulledPlayer(playerid)
{

    for (new i = 0; i < MAX_SLOTS_CAR; i++)
    {
        MyCarInfo[playerid][i][cID] = -1;
        MyCarInfo[playerid][i][cOwner] = -1;
        MyCarInfo[playerid][i][cCarid] = -1;
        MyCarInfo[playerid][i][cTextcar][0] = EOS;
    }

    for (new f; f < 26; f++) gPlayerWeapon[playerid][f] = UNKNOWN_WEAPON;

    if (job[playerid] == 2)
    {
        DestroyObject(object_fire[playerid]);
        DisablePlayerRaceCheckpoint(playerid);
    }

    if (fire_timer[playerid] != 0)
    {
        KillTimer(fire_timer[playerid]);
    }
    fire_timer[playerid] = 0;
    PlayerInfo[playerid][pMID] = 0;
    PlayerInfo[playerid][pName][0] = EOS;
    PlayerInfo[playerid][pKey][0] = EOS;
    PlayerInfo[playerid][pHASH][0] = EOS;
    PlayerInfo[playerid][pTDReg][0] = EOS;
    PlayerInfo[playerid][pIPAdr][0] = EOS;
    PlayerInfo[playerid][pMinlog] = 0;
    PlayerInfo[playerid][pReg] = 0;
    PlayerInfo[playerid][pWarns] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pRecPM] = 0;
    PlayerInfo[playerid][pCombo] = 0;
    PlayerInfo[playerid][pSkin] = 0;
    PlayerInfo[playerid][pPodbor] = 0;
    PlayerInfo[playerid][pGang] = 0;
    PlayerInfo[playerid][pGangLvl] = 0;
    PlayerInfo[playerid][pVIP] = 0;
    PlayerInfo[playerid][pvsx] = 0;
    PlayerInfo[playerid][pvsy] = 0;
    PlayerInfo[playerid][pvsz] = 0;
    PlayerInfo[playerid][pvsa] = 0;
    PlayerInfo[playerid][pHouseID] = 0;
    PlayerInfo[playerid][pActionHouseID] = -1;
    PlayerInfo[playerid][pHouseChangeInt] = -1;
    PlayerInfo[playerid][pDriftExp] = 0;
    PlayerInfo[playerid][pExpRecord] = 0;
    PlayerInfo[playerid][pColorNickname] = 0;
    PlayerInfo[playerid][pSpawnChange] = 0;
    PlayerInfo[playerid][Labirint1] = 0;
    PlayerInfo[playerid][TrackMania1] = 0;
    PlayerInfo[playerid][TrackMania2] = 0;
    PlayerInfo[playerid][TrackMania3] = 0;
    PlayerInfo[playerid][saveX] = 0;
    PlayerInfo[playerid][saveY] = 0;
    PlayerInfo[playerid][saveA] = 0;
    PlayerInfo[playerid][saveVw] = 0;
    PlayerInfo[playerid][saveInt] = 0;
    PlayerInfo[playerid][pAnimLoading] = false;
    gPlayerLastStateWeapon[playerid][0] = EOS;
    gPlayerSpawned[playerid] = false;
    gPlayerLogged[playerid] = false;
    DeathInPrison[playerid] = false;
    Prison[playerid] = 0;
    prisoncheck[playerid] = false;
    Muted[playerid] = 0;
    Checkpoint[playerid] = 0;
    dmzone[playerid] = 0;
    job[playerid] = 0;
    SetPVarInt(playerid, "PlMon", 0);
    SetPVarInt(playerid, "goodspawn", 0);
    NRadio[playerid] = 0;
    BugTicks[playerid] = 0;
    autorepair[playerid] = true;
    dmkills[playerid] = 0;
    dmdeath[playerid] = 0;
    DiceLock[playerid] = 0;
    DiceName[playerid] = 0;
    DiceMoney[playerid] = 0;
    selectskin[playerid] = -1;
    SetPVarInt(playerid, "FirstCheckNakaz", 0);
    for (new i = 0; i < 13; i++) //îáíóëåíèå ñëîòîâ îðóæèÿ
    {
        playweap[playerid][WEAPON_SLOT:i] = UNKNOWN_WEAPON;
        playammo[playerid][WEAPON_SLOT:i] = 0;
    }
    AI[playerid][aReadPM] = false;
    AI[playerid][aReadCMD] = false;
    AI[playerid][aReadCheat] = true;
    return 1;
}

fpub:PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if (IsPlayerConnected(playerid))
    {
        new Float:oldposx, Float:oldposy, Float:oldposz;
        new Float:tempposx, Float:tempposy, Float:tempposz;
        GetPlayerPos(playerid, oldposx, oldposy, oldposz);
        tempposx = (oldposx - x);
        tempposy = (oldposy - y);
        tempposz = (oldposz - z);
        if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
        {
            return 1;
        }
    }
    return 0;
}

fpub:SpamMessage()
{
    switch (sms)
    {
        case 0:
        {
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Êîìàíäû ñåðâåðà: {8F30E4}/cmd");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Æàëîáó íà ÷èòåðà ìîæíî íàïèñàòü â {8F30E4}/report, {FFFFFF}òàê æå ñþäà ìîæíî çàäàòü {8F30E4}ëþáîé ñâîé âîïðîñ");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ìåíþ ñåðâåðà íà {8F30E4}ALT (2 â òðàíñïîðòå)");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}×àò íà {8F30E4}F6");
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            sms = 1;
        }
        case 1:
        {
            SendClientMessageToAll(COLOR_VIOLET, ""NS" {FFFFFF}Íà ñåðâåðå èìåþòñÿ äîìà è áèçíåñû {CCFF00}:)");
            sms = 2;
        }
        case 2:
        {
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Âû èãðàåòå íà ðóññêîì äðèôò ñåðâåðå {8F30E4}[Drift Dreams Project]{CCFF00}.");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Íàø IP: {8F30E4}"IP_S"");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Äîáàâëÿé åãî â {8F30E4}Èçáðàííîå{FFFFFF}, åñëè ïîíðàâèëñÿ {CCFF00};)");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Íàøà ãðóïïà Âêîíòàêòå: {8F30E4}"VK_G"");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ñîçäàòåëü ñåðâåðà: {8F30E4}"GEN_D"");
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            sms = 4;
        }
        case 3:
        {
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            //SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ïîêóïàÿ àäìèíêè/âèïêè âû ìàòåðèàëüíî ïîìîãàåòå ïðîåêòó {8F30E4}Drift Dreams");
            //SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Òàê æå ïîñìîòðåòü ïîäðîáíåå ìîæíî â ãðóïïå ÂÊîíòàêòå {8F30E4}"VK_G"");
            //SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ïîêóïêà ëþáûõ óñëóã ÷åðåç {8F30E4}"VK_DEV"");
            //SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Æåëàåì ïðèÿòíîé èãðû {8F30E4};3");
            //SendClientMessageToAll(COLOR_VIOLET, "||||||||||||||||||||||||||||||||||||||||||||| {CCFF00}Drift Dreams Project {8F30E4}||||||||||||||||||||||||||||||||||||||||||||");
            /*SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Â íàøåé {CCFF00}ãðóïïå ÂÊîíòàêòå{FFFFFF}ïðîõîäèò êîíêóðñ");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Çà 1 è 2 ìåñòî {CCFF00}VIP è ADMIN óðîâåíü!");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Äëÿ ó÷àñòèÿ íóæíî {CCFF00}ïîñòàâèòü ëàéê è íàïèñàòü â êîììåíòàðèÿõ íèê");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ññûëêà íà ãðóïïó: {CCFF00}"VK_G"");
            sms = 4;*/
        }
        case 4:
        {
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ññûëêà íà ãðóïïó ñåðâåðà: {8F30E4}"VK_G"");
            SendClientMessageToAll(0xCCFF00FF, "« {FFFFFF}Ññûëêà íà îñíîâàòåëÿ ÂÊ: {8F30E4}"VK_GEN_D"");
            sms = 0;
        }
    }
    return 1;
}

public OnPlayerLeaveDynamicArea(playerid, areaid)
{
    new string[256];
    if (areaid == prisonid[0] && prisoncheck[playerid] == true && Prison[playerid] > gettime() && DeathInPrison[playerid] == false)
    {
        format(string, sizeof(string), ""NS" {FFFFFF}Èãðîê {CCFF00}%s {FFFFFF}ïîïûòàëñÿ ïîêèíóòü òþðüìó è áûë êèêíóò!", PlayerInfo[playerid][pName]);
        SendClientMessageToAll(COLOR_VIOLET, string);
        Kick(playerid);
        return 1;
    }
    return 1;
}

public OnPlayerEnterDynamicArea(playerid, areaid)
{
    new str[256];
    if (areaid == prisonid[0])
    {
        if (Prison[playerid] > gettime())
        {
            KillTimer(prisontimer[playerid]);
            prisontimer[playerid] = 0;
            prisoncheck[playerid] = true;
        }
        return 1;
    }
    if (areaid == TrackManiaCheck[0])
    {
        if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER  && Events[playerid][1])
        {
            Events[playerid][1] = false;
            SpawnPlayer(playerid);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå â òðàíñïîðòå! Íàãðàäû íå áóäåò.");
            return 1;
        }
        if (PlayerInfo[playerid][TrackMania1] > gettime())
        {
            if (Events[playerid][1])
            {
                Events[playerid][1] = false;
                SpawnPlayer(playerid);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåãîäíÿ âû óæå ïîëó÷àëè ïðèç çà ÒðåêÌàíèþ1, çàõîäèòå ÷åðåç ñóòêè!");
            }
        }
        else
        {
            if (Events[playerid][1])
            {
                format(str, sizeof(str), ""NS" {CCFF00}%s[%d] {FFFFFF}ïðîø¸ë Òðåê Ìàíèþ 1 è ïîëó÷èë ïðèç!", PlayerInfo[playerid][pName], playerid);
                SendClientMessageToAll(COLOR_VIOLET, str);
                MoneyK(playerid, 200000);
                PlayerInfo[playerid][TrackMania1] = gettime() + 1 * 86400;
                Events[playerid][1] = false;
                SpawnPlayer(playerid);
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `TrackMania1`='%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][TrackMania1], PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, str, "", "");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çà ïðîõîæäåíèå ÒðåêÌàíèè 1 âû ïîëó÷àåòå {CCFF00}$200.000");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}×òîáû ïîëó÷èòü ïðèç ïîâòîðíî, ïðèõîäèòå ÷åðåç ñóòêè!");
            }
        }
        return 1;
    }
    if (areaid == TrackManiaCheck[1])
    {
        if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER  && Events[playerid][2])
        {
            Events[playerid][1] = false;
            SpawnPlayer(playerid);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå â òðàíñïîðòå! Íàãðàäû íå áóäåò.");
            return 1;
        }
        if (PlayerInfo[playerid][TrackMania2] > gettime())
        {
            if (Events[playerid][2])
            {
                Events[playerid][2] = false;
                SpawnPlayer(playerid);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåãîäíÿ âû óæå ïîëó÷àëè ïðèç çà ÒðåêÌàíèþ2, çàõîäèòå ÷åðåç ñóòêè!");
            }
        }
        else
        {
            if (Events[playerid][2])
            {
                format(str, sizeof(str), ""NS" {CCFF00}%s[%d] {FFFFFF}ïðîø¸ë Òðåê Ìàíèþ 2 è ïîëó÷èë ïðèç!", PlayerInfo[playerid][pName], playerid);
                SendClientMessageToAll(COLOR_VIOLET, str);
                MoneyK(playerid, 300000);
                PlayerInfo[playerid][TrackMania2] = gettime() + 1 * 86400;
                Events[playerid][2] = false;
                SpawnPlayer(playerid);
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `TrackMania2`='%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][TrackMania2], PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, str, "", "");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çà ïðîõîæäåíèå ÒðåêÌàíèè 2 âû ïîëó÷àåòå {CCFF00}$300.000");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}×òîáû ïîëó÷èòü ïðèç ïîâòîðíî, ïðèõîäèòå ÷åðåç ñóòêè!");
            }
        }
        return 1;
    }
    if (areaid == TrackManiaCheck[2])
    {
        if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER  && Events[playerid][3])
        {
            Events[playerid][1] = false;
            SpawnPlayer(playerid);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå â òðàíñïîðòå! Íàãðàäû íå áóäåò.");
            return 1;
        }
        if (PlayerInfo[playerid][TrackMania3] > gettime())
        {
            if (Events[playerid][3])
            {
                Events[playerid][3] = false;
                SpawnPlayer(playerid);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåãîäíÿ âû óæå ïîëó÷àëè ïðèç çà ÒðåêÌàíèþ3, çàõîäèòå ÷åðåç ñóòêè!");
            }
        }
        else
        {
            if (Events[playerid][3])
            {
                format(str, sizeof(str), ""NS" {CCFF00}%s[%d] {FFFFFF}ïðîø¸ë Òðåê Ìàíèþ 3 è ïîëó÷èë ïðèç!", PlayerInfo[playerid][pName], playerid);
                SendClientMessageToAll(COLOR_VIOLET, str);
                MoneyK(playerid, 400000);
                PlayerInfo[playerid][TrackMania3] = gettime() + 1 * 86400;
                Events[playerid][3] = false;
                SpawnPlayer(playerid);
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `TrackMania3`='%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][TrackMania3], PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, str, "", "");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çà ïðîõîæäåíèå ÒðåêÌàíèè 3 âû ïîëó÷àåòå {CCFF00}$400.000");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}×òîáû ïîëó÷èòü ïðèç ïîâòîðíî, ïðèõîäèòå ÷åðåç ñóòêè!");
            }
        }
        return 1;
    }
    return 1;
}

public OnGameModeInit()
{
    new timeloadmode = GetTickCount();
    UsePlayerPedAnims();
    SetGameModeText("DRIFT DM RACE STUNT RPG FUN");
    SendRconCommand("name ¤ [O.3.7] ¤ « ÐÓÑÑÊÈÉ ÄÐÈÔÒ ÑÅÐÂÅÐ » ¤ DDP ¤");
    SendRconCommand("language Ðóññêèé/Russian");//RCON-êîìàíäà ÿçûêà ñåðâåðà
    SendRconCommand("reloadbans");//RCON-êîìàíäà ïåðåçàãðóçêè áàí-ëèñòà
    AllowAdminTeleport(true);//Ðàçðåøàåì òåëåïîðòû
    DisableInteriorEnterExits();//Îòêëþ÷àåì ñòàíäàðòíûå ïèêàïû
    EnableStuntBonusForAll(false);//óáèðàåì áîíóñû çà òðþêè

    //SetVehiclePassengerDamage(true);//weapon-config
    //SetDisableSyncBugs(true);		//weapon-config
    //SetCbugAllowed(true);			//weapon-config

    Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 1000);

    ServerDB = mysql_connect_file();
    //mysql_log(ALL);
    mysql_set_charset("cp1251");

    SetTimer("SpamMessage", 300000, true);

    mysql_tquery(ServerDB, "SELECT * FROM `gangs` ORDER BY `gID` ASC", "LoadGangs", "");
    mysql_tquery(ServerDB, "SELECT * FROM `houses` ORDER BY `id` ASC", "LoadHouses", "");
    mysql_tquery(ServerDB, "SELECT * FROM `bussines` ORDER BY `id` ASC", "LoadBussines", "");

    SetWorldTime(22);//êðàñèâî
    SetWeather(5);
    SetGravity(0.008000);

    Timer[0] = 0;
    MoneyBagFound = 1;
    MoneyBag();
    if (Timer[0] == 0) Timer[1] = SetTimer("MoneyBag", MB_DELAY, true); // Money Bag

    PickUpsJobs[0] = CreateDynamicPickup(1210, 1, Gruz4ikCords[6][0], Gruz4ikCords[6][1], Gruz4ikCords[6][2], 0, 0, -1, 30.0); //ïèêàï íà ãðóç÷èêå

    CreateDynamicPickup(1550, 1, -2926.0906, 2747.6855, 907.7678, 200, 0, -1, 30.0);//Ïðèç â ëàáèðèíòå

    //äëÿ âûäà÷è íàãðàäû TrackMania
    for (new i = 0; i < sizeof(EndTrack); i++)
    {
        TrackManiaCheck[i] = CreateDynamicCube(EndTrack[i][0], EndTrack[i][1], EndTrack[i][2], EndTrack[i][3], EndTrack[i][4], EndTrack[i][5], 200, -1, -1);
    }

    for (new i = 0; i < PRISONZONES; i++)
    {
        prisonid[i] = CreateDynamicCube(prisoncord[i][0], prisoncord[i][1], prisoncord[i][2], prisoncord[i][3], prisoncord[i][4], prisoncord[i][5], -1, -1, -1);
    }

    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        mapiconid[i] = -600;//î÷èñòêà ID ìàï èêîíîê íàáëþäåíèÿ
        NulledPlayer(i);
    }

    //////////////////////////////////[ËÎÃÎ]////////////////////////////////////
    logo[0] = TextDrawCreate(87.6505, 427.6026, "~b~vk~w~.~b~com~w~/~b~ddp~w~.~b~samp");
    TextDrawLetterSize(logo[0], 0.2716, 1.3257);
    TextDrawAlignment(logo[0], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(logo[0], -1);
    TextDrawSetOutline(logo[0], 1);
    TextDrawBackgroundColor(logo[0], 255);
    TextDrawFont(logo[0], TEXT_DRAW_FONT_AHARONI_BOLD);
    TextDrawSetProportional(logo[0], true);
    TextDrawSetShadow(logo[0], 0);

    logo[1]  = TextDrawCreate(576.8977, 6.5333, "Drift");
    TextDrawLetterSize(logo[1], 0.2566, 1.2383);
    TextDrawAlignment(logo[1], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(logo[1], -1);
    TextDrawSetOutline(logo[1], 1);
    TextDrawBackgroundColor(logo[1], 255);
    TextDrawFont(logo[1], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(logo[1], true);
    TextDrawSetShadow(logo[1], 0);

    logo[2] = TextDrawCreate(576.8977, 15.0333, "Dreams");
    TextDrawLetterSize(logo[2], 0.2566, 1.2383);
    TextDrawAlignment(logo[2], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(logo[2], -855703297);
    TextDrawSetOutline(logo[2], 1);
    TextDrawBackgroundColor(logo[2], 255);
    TextDrawFont(logo[2], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(logo[2], true);
    TextDrawSetShadow(logo[2], 0);

    logo[3] = TextDrawCreate(576.8977, 23.8334, "Project");
    TextDrawLetterSize(logo[3], 0.2566, 1.2383);
    TextDrawAlignment(logo[3], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(logo[3], -1892621057);
    TextDrawSetOutline(logo[3], 1);
    TextDrawBackgroundColor(logo[3], 255);
    TextDrawFont(logo[3], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(logo[3], true);
    TextDrawSetShadow(logo[3], 0);

    //////////////////////////////////[ËÎÃÎ]////////////////////////////////////

    timpolsec = SetTimer("PolSec", 500, true);//âñïîìîãàòåëüíûé òàéìåð 450 ìñ
    minsertimer = SetTimer("MinServ", 60000, true); //òàéìåð ìèíóò íà ñåðâåðå

    //VehicleSpeedTextDraw_R();

    ManualVehicleEngineAndLights();

    AddStaticVehicleEx(515, -61.0402, -307.3994, 6.4743, -90.0000, 1, 136, 600000); // Ãðóçîâèê ¹ 1
    AddStaticVehicleEx(515, -60.9851, -314.3795, 6.4743, -90.0000, 1, 136, 600000); // Ãðóçîâèê ¹ 2
    AddStaticVehicleEx(515, -60.9883, -321.4607, 6.4743, -90.0000, 1, 136, 600000); // Ãðóçîâèê ¹ 3
    AddStaticVehicleEx(403, -0.8406, -332.8106, 5.9995, 90.0000, 35, 1, 600000); // Ãðóçîâèê ¹ 4
    AddStaticVehicleEx(403, -0.8073, -339.9508, 5.9995, 90.0000, 35, 1, 600000); // Ãðóçîâèê ¹ 5
    AddStaticVehicleEx(403, -0.7755, -325.8491, 5.9995, 90.0000, 35, 1, 600000); // Ãðóçîâèê ¹ 6
    AddStaticVehicleEx(514, -1.4884, -304.6814, 6.0005, 90.0000, 122, 0, 600000); // Ãðóçîâèê ¹ 7
    AddStaticVehicleEx(514, -1.3909, -311.7209, 6.0005, 90.0000, 122, 0, 600000); // Ãðóçîâèê ¹ 8
    AddStaticVehicleEx(514, -1.2793, -318.7610, 6.0005, 90.0000, 122, 0, 600000); // Ãðóçîâèê ¹ 9

    Pricep[0] = AddStaticVehicleEx(435, -23.1701, -276.3052, 6.0095, 180.0000, -1, -1, 600000); // Ïðèöåï ¹ 1
    Pricep[1] = AddStaticVehicleEx(591, -176.1814, -262.0354, 2.0382, 90.0000, -1, -1, 600000); // Ïðèöåï ¹ 2
    Pricep[2] = AddStaticVehicleEx(435, -14.7120, -276.3052, 6.0095, 180.0000, -1, -1, 600000); // Ïðèöåï ¹ 3
    Pricep[3] = AddStaticVehicleEx(584, -163.5987, -237.1433, 2.4560, 90.0000, -1, -1, 600000); // Ïðèöåï ¹ 4
    Pricep[4] = AddStaticVehicleEx(591, -176.3525, -289.6723, 2.0382, 90.0000, -1, -1, 600000); // Ïðèöåï ¹ 5
    Pricep[5] = AddStaticVehicleEx(450, -144.4838, -321.5676, 1.9562, 180.0000, -1, -1, 600000); // Ïðèöåï ¹ 6
    Pricep[6] = AddStaticVehicleEx(450, -130.4558, -321.5676, 1.9562, 180.0000, -1, -1, 600000); // Ïðèöåï ¹ 7
    Pricep[7] = AddStaticVehicleEx(450, -116.6931, -321.5676, 1.9562, 180.0000, -1, -1, 600000); // Ïðèöåï ¹ 8
    Pricep[8] = AddStaticVehicleEx(591, -176.4197, -275.9543, 2.0382, 90.0000, -1, -1, 600000); // Ïðèöåï ¹ 9
    Pricep[9] = AddStaticVehicleEx(584, -163.5643, -246.5026, 2.4560, 90.0000, -1, -1, 600000); // Ïðèöåï ¹ 10

    Pricep3dtext[0] = Create3DTextLabel("« {CCFF00}Âîîðóæåíèå {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[0], Pricep[0], 0.0, 0.0, 0.0);
    Pricep3dtext[1] = Create3DTextLabel("« {CCFF00}Àëêîãîëü {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[1], Pricep[1], 0.0, 0.0, 0.0);
    Pricep3dtext[2] = Create3DTextLabel("« {CCFF00}Îäåæäà {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[2], Pricep[2], 0.0, 0.0, 0.0);
    Pricep3dtext[3] = Create3DTextLabel("« {CCFF00}Òîïëèâî {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[3], Pricep[3], 0.0, 0.0, 0.0);
    Pricep3dtext[4] = Create3DTextLabel("« {CCFF00}Îâîùè {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[4], Pricep[4], 0.0, 0.0, 0.0);
    Pricep3dtext[5] = Create3DTextLabel("« {CCFF00}Ùåáåíü {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[5], Pricep[5], 0.0, 0.0, 0.0);
    Pricep3dtext[6] = Create3DTextLabel("« {CCFF00}Ïåñîê {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[6], Pricep[6], 0.0, 0.0, 0.0);
    Pricep3dtext[7] = Create3DTextLabel("« {CCFF00}Èçâåñòü {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[7], Pricep[7], 0.0, 0.0, 0.0);
    Pricep3dtext[8] = Create3DTextLabel("« {CCFF00}Ôðóêòû {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[8], Pricep[8], 0.0, 0.0, 0.0);
    Pricep3dtext[9] = Create3DTextLabel("« {CCFF00}Íåôòü {8F30E4}»", COLOR_VIOLET, 0.0, 0.0, -100.0, 50.0, 0, true);
    Attach3DTextLabelToVehicle(Pricep3dtext[9], Pricep[9], 0.0, 0.0, 0.0);

    drifttimer = SetTimer("Drift", 200, true);//drift bonus

    STRadio[1] = "http://strm112.1.fm/club_mobile_mp3";//URL ññûëêè //Ðàäèî
    STRadio[2] = "http://ep128server.streamr.ru:8030/ep128";
    STRadio[3] = "https://chanson.hostingradio.ru:8041/chanson128.mp3";
    STRadio[4] = "http://paris.discovertrance.com:8006/stream.nsv";
    STRadio[5] = "http://listen1.myradio24.com:9000/5967";
    STRadio[6] = "http://cast.radiogroup.com.ua:8000/avtoradio";
    STRadio[7] = "https://rusradio.hostingradio.ru/rusradio128.mp3";
    STRadio[8] = "http://dorognoe.hostingradio.ru:8000/dorognoe";
    STRadio[9] = "http://radio.promodj.com:8000/klubb-192";
    STRadio[10] = "http://radio.promodj.com:8000/pop-192";
    STRadio[11] = "http://prmstrm.1.fm:8000/80s_90s";
    STRadio[12] = "http://prmstrm.1.fm:8000/deeptech";

    NMRadio[1] = "Club";//íàçâàíèÿ ðàäèîñòàíöèé //Ðàäèî
    NMRadio[2] = "Åâðîïà +";
    NMRadio[3] = "Øàíñîí";
    NMRadio[4] = "Discover trance";
    NMRadio[5] = "90's Eurodance";
    NMRadio[6] = "Àâòîðàäèî";
    NMRadio[7] = "Ðóññêîå ðàäèî";
    NMRadio[8] = "Äîðîæíîå ðàäèî";
    NMRadio[9] = "KLUBB Channel";
    NMRadio[10] = "POP Channel";
    NMRadio[11] = "Euro 80's";
    NMRadio[12] = "DeepTech";

    juzzi = CreatePickup(1318, 24, -2624.5447, 1412.7616, 7.0938, -1);
    juzzi_exit = CreatePickup(1318, 24, -2637.4993, 1402.6825, 906.4609, -1);
    mayak[0] = CreatePickup(1318, 1, 154.3185, -1946.6228, 5.3903, -1);
    mayak[1] = CreatePickup(1318, 1, 154.5042, -1949.3481, 47.8750, -1);
    police = CreatePickup(1318, 24, 1555.5033, -1675.7329, 16.1953, -1);
    police_exit = CreatePickup(1318, 24, 246.8200, 62.3551, 1003.6406, -1);
    drak = CreatePickup(1318, 24, 2019.3124, 1007.6378, 10.8203, -1);
    drak_exit = CreatePickup(1318, 24, 2019.0712, 1017.8239, 996.8750, -1);

    Create3DTextLabel("Ñïàðèâàíèå êîðîâ\nÒîëüêî äëÿ ëèö äîñòèãøèõ 18 ëåò!", COLOR_VIOLET, 331.2250, -1847.0557, 4.3782, 35.0, 0, false); //Êîðîâû íà ïëÿæå))0

    // Ïîæàðíèê

    clothes_fire = CreateDynamicPickup(1275, 1, -1832.1133, 123.8611, 15.1200);
    fire_tc[0] = AddStaticVehicleEx(407, -1834.8582, 140.3573, 15.4180, 0.0000, -1, -1, 100);
    fire_tc[1] = AddStaticVehicleEx(407, -1846.8582, 140.3573, 15.4180, 0.0000, -1, -1, 100);
    fire_tc[2] = AddStaticVehicleEx(407, -1840.8582, 140.3573, 15.4180, 0.0000, -1, -1, 100);

    skins_TD[0] = TextDrawCreate(353.9905, 401.7001, "LD_SPAC:white");
    TextDrawTextSize(skins_TD[0], 64.0000, 16.0000);
    TextDrawAlignment(skins_TD[0], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(skins_TD[0], -1892621212);
    TextDrawBackgroundColor(skins_TD[0], 255);
    TextDrawFont(skins_TD[0], TEXT_DRAW_FONT_SPRITE);
    TextDrawSetProportional(skins_TD[0], false);
    TextDrawSetShadow(skins_TD[0], 0);

    skins_TD[1] = TextDrawCreate(220.0000, 400.0000, "LD_SPAC:white");
    TextDrawTextSize(skins_TD[1], 200.0000, 20.0000);
    TextDrawAlignment(skins_TD[1], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(skins_TD[1], 80);
    TextDrawBackgroundColor(skins_TD[1], 255);
    TextDrawFont(skins_TD[1], TEXT_DRAW_FONT_SPRITE);
    TextDrawSetProportional(skins_TD[1], false);
    TextDrawSetShadow(skins_TD[1], 0);

    skins_TD[2] = TextDrawCreate(222.0151, 401.7001, "LD_SPAC:white");
    TextDrawTextSize(skins_TD[2], 64.0000, 16.0000);
    TextDrawAlignment(skins_TD[2], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(skins_TD[2], -1892621212);
    TextDrawBackgroundColor(skins_TD[2], 255);
    TextDrawFont(skins_TD[2], TEXT_DRAW_FONT_SPRITE);
    TextDrawSetProportional(skins_TD[2], false);
    TextDrawSetShadow(skins_TD[2], 0);

    skins_TD[3] = TextDrawCreate(288.1084, 401.7001, "LD_SPAC:white");
    TextDrawTextSize(skins_TD[3], 64.0000, 16.0000);
    TextDrawAlignment(skins_TD[3], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(skins_TD[3], -1892621212);
    TextDrawBackgroundColor(skins_TD[3], 255);
    TextDrawFont(skins_TD[3], TEXT_DRAW_FONT_SPRITE);
    TextDrawSetProportional(skins_TD[3], false);
    TextDrawSetShadow(skins_TD[3], 0);

    skins_TD[4] = TextDrawCreate(253.0867, 402.1500, "<<<<<");
    TextDrawLetterSize(skins_TD[4], 0.3686, 1.6000);
    TextDrawAlignment(skins_TD[4], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(skins_TD[4], -855703297);
    TextDrawSetOutline(skins_TD[4], 1);
    TextDrawBackgroundColor(skins_TD[4], 255);
    TextDrawFont(skins_TD[4], TEXT_DRAW_FONT_AHARONI_BOLD);
    TextDrawSetProportional(skins_TD[4], true);
    TextDrawSetShadow(skins_TD[4], 0);
    TextDrawUseBox(skins_TD[4], true);
    TextDrawBoxColor(skins_TD[4], 0x00000000);
    TextDrawTextSize(skins_TD[4], 13.0000, 54.0000);
    TextDrawSetSelectable(skins_TD[4], true);

    skins_TD[5] = TextDrawCreate(320.0855, 402.1500, "SPAWN");
    TextDrawLetterSize(skins_TD[5], 0.3568, 1.4658);
    TextDrawAlignment(skins_TD[5], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(skins_TD[5], -855703297);
    TextDrawSetOutline(skins_TD[5], 1);
    TextDrawBackgroundColor(skins_TD[5], 255);
    TextDrawFont(skins_TD[5], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(skins_TD[5], true);
    TextDrawSetShadow(skins_TD[5], 0);
    TextDrawUseBox(skins_TD[5], true);
    TextDrawBoxColor(skins_TD[5], 0x00000000);
    TextDrawTextSize(skins_TD[5], 13.0000, 54.0000);
    TextDrawSetSelectable(skins_TD[5], true);

    skins_TD[6] = TextDrawCreate(385.2100, 402.1500, ">>>>>");
    TextDrawLetterSize(skins_TD[6], 0.3686, 1.6000);
    TextDrawAlignment(skins_TD[6], TEXT_DRAW_ALIGN_CENTRE);
    TextDrawColor(skins_TD[6], -855703297);
    TextDrawSetOutline(skins_TD[6], 1);
    TextDrawBackgroundColor(skins_TD[6], 255);
    TextDrawFont(skins_TD[6], TEXT_DRAW_FONT_AHARONI_BOLD);
    TextDrawSetProportional(skins_TD[6], true);
    TextDrawSetShadow(skins_TD[6], 0);
    TextDrawUseBox(skins_TD[6], true);
    TextDrawBoxColor(skins_TD[6], 0x00000000);
    TextDrawTextSize(skins_TD[6], 13.0000, 54.0000);
    TextDrawSetSelectable(skins_TD[6], true);

    MapAndreas_Init(MAP_ANDREAS_MODE_FULL, "scriptfiles/SAfull.hmap");

    new randspawn = random(sizeof(RandomSpawns));
    AddPlayerClass(0, RandomSpawns[randspawn][0], RandomSpawns[randspawn][1], RandomSpawns[randspawn][2], 0.0000);

    printf("Èãðîâîé ìîä çàãðóæåí. Ïîòðà÷åíî íà çàãðóçêó: %i ms.", GetTickCount() - timeloadmode);
    return 1;
}

public OnGameModeExit()
{
    KillTimer(timpolsec);
    KillTimer(minsertimer);
    KillTimer(drifttimer);
    for (new i = 0; i < MAX_PLAYERS; ++i)
    {
        if (mapiconid[i] != -600) //åñëè ID ìàï èêîíêè íàáëþäåíèÿ ÍÅ ïóñòîé, òî:
        {
            DestroyDynamicMapIcon(mapiconid[i]);//óäàëåíèå ìàï èêîíêè íàáëþäåíèÿ
        }
        mapiconid[i] = -600;//î÷èñòêà ID ìàï èêîíêè íàáëþäåíèÿ
        if (IsPlayerConnected(i))
        {
            Kick(i);
        }

        PlayerTextDrawHide(i, VehicleSpeed[i]);
        PlayerTextDrawHide(i, HMS44[i]);
        if (IsPlayerConnected(i))
        {
            PlayerTextDrawDestroy(i, VehicleSpeed[i]);
            PlayerTextDrawDestroy(i, HMS44[i]);//óäàëÿåì òåêñòäðàâû ìàêñèìàëüíîé ãîðèçîíòàëüíîé ñêîðîñòè
        }
        NulledPlayer(i);
    }

    if (MYSQL_INVALID_HANDLE != ServerDB)
        mysql_close(ServerDB);

    MapAndreas_Unload();
    return 1;
}


public OnPlayerRequestClass(playerid, classid)
{
    return 1;
}

new ipdetected[MAX_PLAYERS] = {0};

public OnPlayerConnect(playerid)
{
    NulledPlayer(playerid);
    Events[playerid][0] = false; //ëàáèðèíò
    Events[playerid][1] = false; //òðåêìàíèè
    Events[playerid][2] = false;
    Events[playerid][3] = false;

    GetPlayerName(playerid, PlayerInfo[playerid][pName], MAX_PLAYER_NAME);

    AI[playerid][aSpectateID] = INVALID_PLAYER_ID;
    AI[playerid][aSpectateType] = ADMIN_SPEC_TYPE_NONE;
    AI[playerid][aSpectateOldINT] = -1;
    AI[playerid][aSpectateOldVW] = -1;
    AI[playerid][aSpecX] = 0;
    AI[playerid][aSpecY] = 0;
    AI[playerid][aSpecZ] = 0;
    AI[playerid][aSpecA] = 0;

    VehicleSpeed[playerid] = CreatePlayerTextDraw(playerid, 553.9774, 101.6499, "174KM/4");
    PlayerTextDrawLetterSize(playerid, VehicleSpeed[playerid], 0.2746, 2.2358);
    PlayerTextDrawAlignment(playerid, VehicleSpeed[playerid], TEXT_DRAW_ALIGN_RIGHT);
    PlayerTextDrawColor(playerid, VehicleSpeed[playerid], -1);
    PlayerTextDrawSetShadow(playerid, VehicleSpeed[playerid], 0);
    PlayerTextDrawSetOutline(playerid, VehicleSpeed[playerid], 1);
    PlayerTextDrawBackgroundColor(playerid, VehicleSpeed[playerid], 255);
    PlayerTextDrawFont(playerid, VehicleSpeed[playerid], TEXT_DRAW_FONT_BANK_GOTHIC);
    PlayerTextDrawSetProportional(playerid, VehicleSpeed[playerid], true);

    HMS44[playerid] = CreatePlayerTextDraw(playerid, 522.8578, 113.0999, "_"); //ñîçäà¸ì òåêñòäðàâ ìàêñèìàëüíîé ãîðèçîíòàëüíîé ñêîðîñòè
    PlayerTextDrawAlignment(playerid, HMS44[playerid], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawBackgroundColor(playerid, HMS44[playerid], 255);
    PlayerTextDrawFont(playerid, HMS44[playerid], TEXT_DRAW_FONT_BANK_GOTHIC);
    PlayerTextDrawLetterSize(playerid, HMS44[playerid], 0.2421, 1.5008);
    PlayerTextDrawColor(playerid, HMS44[playerid], -1);
    PlayerTextDrawSetOutline(playerid, HMS44[playerid], 1);
    PlayerTextDrawSetProportional(playerid, HMS44[playerid], true);
    PlayerTextDrawSetShadow(playerid, HMS44[playerid], 0);

    spec_TD[playerid] = CreatePlayerTextDraw(playerid, 547.5556, 99.9832, "~b~Speed: ~y~246");
    PlayerTextDrawLetterSize(playerid, spec_TD[playerid], 0.2421, 1.5008);
    PlayerTextDrawAlignment(playerid, spec_TD[playerid], TEXT_DRAW_ALIGN_LEFT);
    PlayerTextDrawColor(playerid, spec_TD[playerid], -1);
    PlayerTextDrawSetOutline(playerid, spec_TD[playerid], 1);
    PlayerTextDrawBackgroundColor(playerid, spec_TD[playerid], 255);
    PlayerTextDrawFont(playerid, spec_TD[playerid], TEXT_DRAW_FONT_BANK_GOTHIC);
    PlayerTextDrawSetProportional(playerid, spec_TD[playerid], true);
    PlayerTextDrawSetShadow(playerid, spec_TD[playerid], 0);

    scrscr[playerid][0] = TextDrawCreate(559.7764, 100.1826, "~r~+ ~w~999999 ~g~$");
    TextDrawLetterSize(scrscr[playerid][0], 0.1890, 1.2382);
    TextDrawAlignment(scrscr[playerid][0], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(scrscr[playerid][0], -1);
    TextDrawSetOutline(scrscr[playerid][0], 1);
    TextDrawBackgroundColor(scrscr[playerid][0], 255);
    TextDrawFont(scrscr[playerid][0], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(scrscr[playerid][0], true);
    TextDrawSetShadow(scrscr[playerid][0], 0);

    scrscr[playerid][1] = TextDrawCreate(559.7764, 113.4823, "~r~+ ~w~999 ~y~EXP");
    TextDrawLetterSize(scrscr[playerid][1], 0.1890, 1.2382);
    TextDrawAlignment(scrscr[playerid][1], TEXT_DRAW_ALIGN_LEFT);
    TextDrawColor(scrscr[playerid][1], -1);
    TextDrawSetOutline(scrscr[playerid][1], 1);
    TextDrawBackgroundColor(scrscr[playerid][1], 255);
    TextDrawFont(scrscr[playerid][1], TEXT_DRAW_FONT_BANK_GOTHIC);
    TextDrawSetProportional(scrscr[playerid][1], true);
    TextDrawSetShadow(scrscr[playerid][1], 0);

    new ip[17];
    GetPlayerIp(playerid, ip, sizeof(ip));
    PlayerInfo[playerid][pIPAdr] = ip;

    foreach (Player, i)
    {
        if (strcmp(PlayerInfo[playerid][pIPAdr], PlayerInfo[i][pIPAdr], true) == 0 && playerid != i)
        {
            ipdetected[playerid]++;
        }
    }
    if (ipdetected[playerid] >= 2)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû êèêíóòû. Ïðè÷èíà: {CCFF00}Íà ñåðâåðå óæå åñòü 2 ÷åëîâåêà ñ âàøèì IP.");
        Kick(playerid);
        ipdetected[playerid] = 0;
        return 1;
    }

    mapiconid[playerid] = -600;//î÷èñòêà ID ìàï èêîíêè íàáëþäåíèÿ
    countdown[playerid] = -1;//î÷èñòêà îáðàòíîãî îòñ÷¸òà
    strdel(PlayerInfo[playerid][pTDReg], 0, 256);//î÷èñòêà âðåìåíè è äàòû ðåãèñòðàöèè

    PlayerInfo[playerid][pDeaths] = 0;
    PlayerInfo[playerid][pKills] = 0;
    PlayerInfo[playerid][pCombo] = 1;
    PlayerInfo[playerid][pRecPM] = 1;

    SetPVarInt(playerid, "PlMon", 50000);//ãëîáàëüíàÿ ïåðåìåííàÿ äåíåã èãðîêà
    SetPVarInt(playerid, "PlFrost", 0);//ãëîáàëüíàÿ ïåðåìåííàÿ çàìîðîçêè èãðîêà

    TextDrawHideForPlayer(playerid, scrscr[playerid][0]);
    TextDrawHideForPlayer(playerid, scrscr[playerid][1]);

    //âõîä íà ñåðâåð
    printf("Èãðîê %s ïðèñîåäèíèëñÿ ê ñåðâåðó.", PlayerInfo[playerid][pName]);

    TextDrawShowForPlayer(playerid, logo[0]);
    TextDrawShowForPlayer(playerid, logo[1]);
    TextDrawShowForPlayer(playerid, logo[2]);
    TextDrawShowForPlayer(playerid, logo[3]);

    SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//óñòàíîâèòü íîðìàëüíûé ñòèëü áîÿ
    //	caravto[playerid] = 0;
    playcar[playerid] = 0;

    StopHidrav[playerid] = 0;//ïåðåìåííàÿ çàäåðæêè ãèäðàâëèêè
    countdown22[playerid] = -1;//î÷èñòêà îáðàòíîãî DM-îòñ÷¸òà
    AI[playerid][aGod] = 0;//óáðàòü áåññìåðòèå àäìèíà
    livdop[playerid] = 0;
    neon[playerid][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
    neon[playerid][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
    neon[playerid][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
    migalka[playerid][0] = 0;//ïðèñâàèâàåì ìèãàëêå íåñóùåñòâóþùèé íîìåð îáúåêòà
    migalka[playerid][1] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ ìèãàëêîé
    UniParam[playerid] = 0; //Îáíóëÿåì óíèâåðñàëüíóþ ïåðåìåííóþ (ãëîáàëüíàÿ)
    FloodStop[playerid] = 0; //Îáíóëÿåì ïåðåìåííóþ êîíòðîëÿ çà ôëóäîì

    SendClientMessage(playerid, COLOR_VIOLET, "« {FFFFFF}Äîáðî ïîæàëîâàòü íà ñåðâåð {8F30E4}DDP");
    SendClientMessage(playerid, COLOR_VIOLET, "« {FFFFFF}Íàøà ãðóïïà âêîíòàêòå: {8F30E4}"VK_G"");
    SendClientMessage(playerid, COLOR_VIOLET, "« {FFFFFF}Ïåðåä íà÷àëîì èãðû, íàñòîÿòåëüíî ðåêîìåíäóåì ïðî÷èòàòü ïðàâèëà: {8F30E4}/rules");

    switch (random(6))
    {
        case 0:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/1.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}4B - Bomboclat (Infuze Remix)");
        }
        case 1:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/2.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}Borgore & Sikdope - Unicorn Zombie Apocalypse (Vladisse Festival Trap Remix)");
        }
        case 2:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/3.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}DJ GErom - Trance Zombie (DJ GErom) [2014]");
        }
        case 3:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/4.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}Jay Hardway - Bootcamp");
        }
        case 4:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/5.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}Post Malone ft. 21Savage - Rockstar");
        }
        case 5:
        {
            PlayAudioStreamForPlayer(playerid, "http://s0s4sgw48sog0gkwow4c0gcs.45.84.1.51.sslip.io/ddpmusic/6.mp3");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåé÷àñ èãðàåò: {CCFF00}Martin Garrix, David Guetta - So Far Away (Bad Decisions Remix)");
        }
    }
    new str[256];
    mysql_format(ServerDB, str, sizeof(str), "SELECT `Pass`,`Hash` FROM `players` WHERE `PlayerName` = '%e' LIMIT 1", PlayerInfo[playerid][pName]);
    mysql_tquery(ServerDB, str, "CheckRegister", "d", playerid);

    new str_client[41];
    gpci(playerid, str_client, 40);
    printf("player %s[%d] connected. device id: %s", PlayerInfo[playerid][pName], playerid, str_client);

    new strtwo[64];
    GetPlayerVersion(playerid, strtwo, 64);
    printf("version: %s", strtwo);
    return 1;
}

fpub:CheckRegister(playerid)
{
    new string[1024];
    if (cache_num_rows() > 0)
    {
        cache_get_value_name(0, "Pass", PlayerInfo[playerid][pKey], 65);
        cache_get_value_name(0, "Hash", PlayerInfo[playerid][pHASH], 17);
        ShowPlayerLoginDialog(playerid);
    }
    else
    {
        format(string, sizeof(string), "{CCFF00}ÊÐÀÒÊÈÅ ÏÐÀÂÈËÀ ÑÅÐÂÅÐÀ:\
		\n- {FFAA00}Çàïðåùåíî èñïîëüçîâàòü íèêè äðóãèõ èãðîêîâ èëè àäìèíèñòðàöèè.\
		\n- {FFAA00}Çàïðåùåíî îñêîðáëÿòü äðóãèõ èãðîêîâ è ìåøàòü èì èãðàòü.\
		\n- {FFAA00}Çàïðåùåíî ïðîñèòü àäìèíêó.\
		\n- {FFAA00}Çàïðåùåíî ðåêëàìèðîâàòü ïîñòîðîííèå ñàéòû/ñåðâåðà.");
        format(string, sizeof(string), "%s\
		\n- {FFAA00}Çàïðåùåíî óáèâàòü èãðîêîâ òðàíñïîðòíûì ñðåäñòâîì (ÄÁ).\
		\n- {FFAA00}Çàïðåùåíî ìàòåðèòñÿ è ôëóäèòü â ÷àò.\
		\n- {FFAA00}Çàïðåùåíî èñïîëüçîâàòü ëþáûå ÷èòû, â îñîáåííîñòè âðåäîíîñíûå!\
		\n- {FFAA00}Çàïðåùåíà ïðîäàæà ÷åãî ëèáî, çà ðåàëüíûå äåíüãè.\
		\n\n{CCFF00}ÍÅÁÎËÜØÎÉ FAQ ÏÎ ÑÅÐÂÅÐÓ:", string);
        format(string, sizeof(string), "%s\
		\n- {FFAA00}Äëÿ âûçîâà êîìàíä ñåðâåðà èñïîëüçóéòå /cmd.\
		\n- {FFAA00}Íà ñåðâåðå ïðèñóòñòâóåò óäîáíîå ìåíþ (ALT - ïåøêîì, êíîïêà 2 - â ìàøèíå)\
		\n\n{FFAA00}Ïðèäóìàéòå ñëîæíûé ïàðîëü, ÷òîáû èçáåæàòü âçëîìà âàøåãî àêêàóíòà.\
		\n{CCFF00}Àäìèíèñòðàöèÿ {8F30E4}DDP {CCFF00}- íå íåñ¸ò îòâåòñòâåííîñòè çà ïîòåðÿíûå àêêàóíòû.\
		\n\n{FFAA00}Âàø íèê: {FF0000}%s", string, PlayerInfo[playerid][pName]);
        ShowPlayerDialog(playerid, 0, DIALOG_STYLE_INPUT, "{8F30E4}>>[ÐÅÃÈÑÒÐÀÖÈß]<<", string, "Âîéòè", "Îòìåíà");
    }
    return 1;
}

stock ShowPlayerLoginDialog(playerid)
{
    new string[1024];
    format(string, sizeof(string), "{FFFFFF}Ó÷àñòèëèñü âçëîìû èãðîâûõ àêêàóíòîâ èãðîêîâ!\
	\n{FFFFFF}Íå ñòàíüòå æåðòâîé ìîøåííèêîâ, íå ââîäèòå ñâîé ïàðîëü íà äðóãèõ ïðîåêòàõ!\
	\n{FFFFFF}Àäìèíèñòðàöèÿ {8F30E4}DDP ñåðâåðà {FFFFFF}- íå íåñ¸ò îòâåòñòâåííîñòè çà ïîòåðÿíûå àêêàóíòû.\
	\n\n{FFFFFF}Âàø íèê: {8F30E4}%s.\
	\n{FFFFFF}Ââåäèòå ñâîé ïàðîëü â ïîëå íèæå:", PlayerInfo[playerid][pName]);
    ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "{8F30E4}>>[ÀÂÒÎÐÈÇÀÖÈß ÍÀ DREAMS]<<", string, "Âîéòè", "Îòìåíà");
    return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
    new query[256];
    if (AI[playerid][aLevel] > 0)
    {
        mysql_format(ServerDB, query, sizeof(query), "UPDATE `admins` SET `kicksplayers`='%d', `banedplayers`='%d', `loggedcount`='%d', `loggedtime`='%d' WHERE `id`='%d'", AI[playerid][aKickPlayers], AI[playerid][aBanPlayers], AI[playerid][aLogCount], AI[playerid][aTimeOnline], AI[playerid][db_ID]);
        mysql_tquery(ServerDB, query, "", "");
    }

    if (Muted[playerid] > gettime())
    {
        mysql_format(ServerDB, query, sizeof(query), "UPDATE `mutedlist` SET `leavetime`='%d' WHERE `IDDB`='%d' LIMIT 1", gettime(), PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, query, "", "");
    }
    else
    {
        mysql_format(ServerDB, query, sizeof(query), "DELETE FROM `mutedlist` WHERE `IDDB`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, query, "", "");
    }

    if (Prison[playerid] > gettime())
    {
        mysql_format(ServerDB, query, sizeof(query), "UPDATE `prisonlist` SET `leavetime`='%d' WHERE `IDDB`='%d' LIMIT 1", gettime(), PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, query, "", "");
    }
    else
    {
        mysql_format(ServerDB, query, sizeof(query), "DELETE FROM `prisonlist` WHERE `IDDB`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, query, "", "");
    }

    OnPlayerSave(playerid);////////////////////ÂÑÒÀÂËßÅÌ ÏÎÑËÅ ÝÒÎÃÎ!!!

    if (Prison[playerid] > gettime())
    {
        mysql_format(ServerDB, query, sizeof(query), "UPDATE `prisonlist` SET `leavetime`='%d' WHERE `IDDB`='%d' LIMIT 1", gettime(), PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, query, "", "");
    }

    Events[playerid][0] = false; //ëàáèðèíò
    Events[playerid][1] = false; //òðåê ìàíèè
    Events[playerid][2] = false;
    Events[playerid][3] = false;

    foreach (Player, i)
    {
        if (AI[i][aSpectateID] == playerid)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê çà êîòîðûì âû ñëåäèëè - îòêëþ÷èëñÿ!");
            StopSpectate(i);
        }
    }
    //DUELSYS
    if (Duel[playerid] >= 2)
    {
        if (Maderequest[playerid] == 1)
        {
            new PID = Duelopponent[playerid];
            //WeaponBugDuel[PID] = 1;
            Duel[PID] = 0;
            Duelrounds[playerid] = 0;
            KillTimer(UnDuelend[playerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
        }
        else if (Gotrequest[playerid] == 1)
        {
            new PID = Duelmaker[playerid];
            //WeaponBugDuel[PID] = 1;
            Duel[PID] = 0;
            Duelrounds[playerid] = 0;
            KillTimer(UnDuelend[playerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
        }
    }
    DuelEndTimer[playerid] = 0;
    Duelmaker[playerid] = 0;
    Duelopponent[playerid] = 0;
    Gotrequest[playerid] = 0;
    Maderequest[playerid] = 0;
    Duelbet[playerid] = 0;
    Duel[playerid] = 0;
    Duelrounds[playerid] = 0;
    Duelweap1[playerid] = UNKNOWN_WEAPON;
    Duelweap2[playerid] = UNKNOWN_WEAPON;
    //DUELSYS
    // if (!GetCbugAllowed(playerid))SetCbugAllowed(true, playerid);


    AI[playerid][db_ID] = 0;
    AI[playerid][aHASH][0] = EOS;
    AI[playerid][aPass][0] = EOS;
    AI[playerid][aName][0] = EOS;
    AI[playerid][aDGet] = 0;
    AI[playerid][aDEnd] = 0;
    AI[playerid][aLevel] = 0;
    AI[playerid][aMakeAdmin][0] = EOS;
    AI[playerid][aMakeAdminEnd][0] = EOS;
    AI[playerid][aReasonEnd][0] = EOS;
    AI[playerid][aBlock] = 0;
    AI[playerid][aKickPlayers] = 0;
    AI[playerid][aBanPlayers] = 0;
    AI[playerid][aLogCount] = 0;
    AI[playerid][aResPlayer] = 0;
    AI[playerid][aTimeOnline] = 0;
    AI[playerid][aGod] = 0;
    if (AI[playerid][aVehicle] != 0)
    {
        DestroyVehicle(AI[playerid][aVehicle]);
        AI[playerid][aVehicle] = 0;
    }
    AI[playerid][aSpectateID] = INVALID_PLAYER_ID;
    AI[playerid][aSpectateType] = ADMIN_SPEC_TYPE_NONE;

    FloodStop[playerid] = 0; //Îáíóëÿåì ôëóä êîíòðîëü

    for (new i = 0; i < sizeof(RandomSpawns); i++)
    {
        DeletePlayer3DTextLabel(playerid, SpawnTextDraw[playerid][i]);
    }

    DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
    DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
    //SendDeathMessage(INVALID_PLAYER_ID, playerid, 201);//îòîáðàçèòü èêîíêó äèñêîííåêòà â êèëë-÷àòå
    new string[186];
    if (mapiconid[playerid] != -600) //åñëè ID ìàï èêîíêè íàáëþäåíèÿ ÍÅ ïóñòîé, òî:
    {
        DestroyDynamicMapIcon(mapiconid[playerid]);//óäàëåíèå ìàï èêîíêè íàáëþäåíèÿ
    }
    mapiconid[playerid] = -600;//î÷èñòêà ID ìàï èêîíêè íàáëþäåíèÿ
    PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);//îòêëþ÷àåì òåêñòäðàâû ñïèäîìåòðà
    PlayerTextDrawDestroy(playerid, VehicleSpeed[playerid]);//óäàëÿåì òåêñòäðàâ ñïèäîìåòðà
    PlayerTextDrawHide(playerid, HMS44[playerid]);
    PlayerTextDrawDestroy(playerid, HMS44[playerid]);//óäàëÿåì òåêñòäðàâ ìàêñèìàëüíîé ãîðèçîíòàëüíîé ñêîðîñòè
    TextDrawHideForPlayer(playerid, logo[0]);
    TextDrawHideForPlayer(playerid, logo[1]);
    TextDrawHideForPlayer(playerid, logo[2]);
    TextDrawHideForPlayer(playerid, logo[3]);

    if (gPlayerLogged[playerid] && gPlayerSpawned[playerid]) //Åñëè èãðîê áûë àâòîðèçîâàí (ÀÍÒÈÔËÓÄ ÏÐÈ ÀÒÀÊÅ ÁÎÒÀÌÈ)
    {
        switch (reason)
        {
            case 0:
            {
                printf("Èãðîê %s[%d] âûøåë ñ ñåðâåðà (âûëåò).", PlayerInfo[playerid][pName], playerid);
                format(string, sizeof(string), ""MNS" {FFFFFF}Èãðîê {CCFF00}%s {FFFFFF}âûëåòåë ñ ñåðâåðà (èíåò òóïàíóë)", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(COLOR_VIOLET, string);
            }
            case 1:
            {
                printf("Èãðîê %s[%d] âûøåë ñ ñåðâåðà (âûøåë).", PlayerInfo[playerid][pName], playerid);
                format(string, sizeof(string), ""MNS" {FFFFFF}Èãðîê {CCFF00}%s {FFFFFF}îòêëþ÷èëñÿ îò ñåðâåðà", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(COLOR_VIOLET, string);
            }
            case 2:
            {
                printf("Èãðîê %s[%d] âûøåë ñ ñåðâåðà (êèê/áàí).", PlayerInfo[playerid][pName], playerid);
                format(string, sizeof(string), ""MNS" {FFFFFF}Èãðîê {CCFF00}%s {FFFFFF}çàáàíåí/êèêíóò", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(COLOR_VIOLET, string);
            }
        }
    }

    R_Vehicle[playerid] = VehicleSpeed_1;//speedometer

    TogglePlayerControllable(playerid, true);//ðàçìîðîçèòü èä âûøåäøåãî èãðîêà
    if (neon[playerid][0] != 0)
    {
        DestroyObject(neon[playerid][0]);    //óáðàòü íåîí
    }
    if (neon[playerid][1] != 0)
    {
        DestroyObject(neon[playerid][1]);    //óáðàòü íåîí
    }
    neon[playerid][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
    neon[playerid][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
    neon[playerid][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
    if (migalka[playerid][0] != 0)
    {
        DestroyObject(migalka[playerid][0]);    //óáðàòü ìèãàëêó
    }
    migalka[playerid][0] = 0;//ïðèñâàèâàåì ìèãàëêå íåñóùåñòâóþùèé íîìåð îáúåêòà
    migalka[playerid][1] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ ìèãàëêîé
    if (playcar[playerid] != 0) //åñëè ó èãðîêà åñòü ñâîé òðàíñïîðò, òî:
    {
        for (new i = 0; i < MAX_PLAYERS; i++) //ïîèñê è óäàëåíèå ÷óæîãî íåîíà è ÷óæîé ìèãàëêè
        {
            if (playcar[playerid] == neon[i][2])
            {
                DestroyObject(neon[i][0]);//óáðàòü íåîí
                DestroyObject(neon[i][1]);//óáðàòü íåîí
                neon[i][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                neon[i][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                neon[i][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
            }
            if (playcar[playerid] == migalka[i][1])
            {
                DestroyObject(migalka[i][0]);//óáðàòü ìèãàëêó
                migalka[i][0] = 0;//ïðèñâàèâàåì ìèãàëêå íåñóùåñòâóþùèé íîìåð îáúåêòà
                migalka[i][1] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ ìèãàëêîé
            }
        }
        DestroyVehicle(playcar[playerid]);//óíè÷òîæèòü ñâîé òðàíñïîðò
        playcar[playerid] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà
    }
    SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);//óñòàíîâèòü íîðìàëüíûé ñòèëü áîÿ
    countdown[playerid] = -1;//î÷èñòêà îáðàòíîãî îòñ÷¸òà
    DeletePVar(playerid, "PlMon");//óäàëÿåì ãëîáàëüíóþ ïåðåìåííóþ äåíåã èãðîêà
    DeletePVar(playerid, "mespam");
    DeletePVar(playerid, "tryspam");
    StopHidrav[playerid] = 0;//ïåðåìåííàÿ çàäåðæêè ãèäðàâëèêè
    countdown22[playerid] = -1;//î÷èñòêà îáðàòíîãî DM-îòñ÷¸òà
    DeletePVar(playerid, "MnMode");//óäàëÿåì ãëîáàëüíóþ ïåðåìåííóþ ðåæèìà ìåíþ
    AI[playerid][aGod] = 0;//îáíóëèòü áåññìåðòèå
    livdop[playerid] = 0;
    NulledPlayer(playerid);
    return 1;
}

PreloadAnimLib(playerid, const animlib[])
{
    ApplyAnimation(playerid, animlib, "null", 0.0, false, false, false, false, 0);
}

public OnPlayerSpawn(playerid)
{
    if (IsPlayerInAnyVehicle(playerid))
    {
        TextDrawHideForPlayer(playerid, scrscr[playerid][0]);
        TextDrawHideForPlayer(playerid, scrscr[playerid][1]);
        R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
    }
    if (!gPlayerLogged[playerid])
    {
        new string[256];
        format(string, 144, ""NS" {FFFFFF}%s áûë êèêíóò çà îáõîä àâòîðèçàöèè!", PlayerInfo[playerid][pName]);
        SendClientMessageToAll(COLOR_VIOLET, string);
        Kick(playerid);
        return 1;
    }

    if (PlayerInfo[playerid][pAnimLoading] == false) //äëÿ ñðàáàòûâàíèÿ àíèìàöèé ñ 1 ðàçà
    {
        PreloadAnimLib(playerid, "BOMBER");
        PreloadAnimLib(playerid, "RAPPING");
        PreloadAnimLib(playerid, "SHOP");
        PreloadAnimLib(playerid, "BEACH");
        PreloadAnimLib(playerid, "SMOKING");
        PreloadAnimLib(playerid, "FOOD");
        PreloadAnimLib(playerid, "ON_LOOKERS");
        PreloadAnimLib(playerid, "DEALER");
        PreloadAnimLib(playerid, "CRACK");
        PreloadAnimLib(playerid, "CARRY");
        PreloadAnimLib(playerid, "COP_AMBIENT");
        PreloadAnimLib(playerid, "PARK");
        PreloadAnimLib(playerid, "INT_HOUSE");
        PreloadAnimLib(playerid, "FOOD");
        PreloadAnimLib(playerid, "CRIB");
        PreloadAnimLib(playerid, "ROB_BANK");
        PreloadAnimLib(playerid, "JST_BUISNESS");
        PreloadAnimLib(playerid, "PED");
        PreloadAnimLib(playerid, "OTB");
        PlayerInfo[playerid][pAnimLoading] = true;
    }

    if (PlayerInfo[playerid][pSkin] > -1)
    {
        SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
        if ((AI[playerid][aSpecX] != 0 || AI[playerid][aSpecY] != 0) && AI[playerid][aSpectateOldINT] != -1 && AI[playerid][aSpectateOldVW] != -1 && AI[playerid][aLevel] > 0)
        {
            Teleport(playerid, AI[playerid][aSpecX], AI[playerid][aSpecY], AI[playerid][aSpecZ] + 2.5, AI[playerid][aSpectateOldVW], AI[playerid][aSpectateOldINT], true, AI[playerid][aSpecA], false);
            AI[playerid][aSpecX] = 0;
            AI[playerid][aSpecY] = 0;
            AI[playerid][aSpecZ] = 0;
            AI[playerid][aSpecA] = 0;
            AI[playerid][aSpectateOldINT] = -1;
            AI[playerid][aSpectateOldVW] = -1;
            return 1;
        }
        if (dmzone[playerid] == 0 && Prison[playerid] <= 0)
        {
            if (PlayerInfo[playerid][pSpawnChange] == 0) //ñïàâí ñåðâåðà
            {
                Teleport(playerid, RandomSpawns[tpspa][0], RandomSpawns[tpspa][1], RandomSpawns[tpspa][2], 0, 0, false, RandomSpawns[tpspa][3], false);
            }
            else if (PlayerInfo[playerid][pSpawnChange] == 1) //ñïàâí áàíäû
            {
                if (PlayerInfo[playerid][pGang] != 0)
                {
                    new bool:gc = false;
                    for (new i = 0; i < MAX_GANGS; i++)
                    {
                        if (PlayerInfo[playerid][pGang] == GangInfo[i][gID])
                        {
                            gc = true;
                            break;
                        }
                        else continue;
                    }
                    if (gc == false)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïî íåêîòîðûì äàííûì, âû òåïåðü íå â êëàíå! Òåïåðü âû áóäåòå ñïàâíèòñÿ íà ñïàâíàõ ñåðâåðà.");
                        PlayerInfo[playerid][pSpawnChange] = 0;
                        SpawnPlayer(playerid);
                    }
                    if (GangInfo[PlayerInfo[playerid][pGang]][gSpawns][0] == 0.0000
                            && GangInfo[PlayerInfo[playerid][pGang]][gSpawns][1] == 0.0000
                            && GangInfo[PlayerInfo[playerid][pGang]][gSpawns][2] == 0.0000)
                    {
                        Teleport(playerid, GangInfo[PlayerInfo[playerid][pGang]][gSpawns][0], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][1], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][2], 0, 0, false, 0, false);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ãëàâà âàøåãî êëàíà óäàëèë ñïàâí! Óñòàíîâëåí ñïàâí íà ñïàâíàõ ñåðâåðà.");
                        PlayerInfo[playerid][pSpawnChange] = 0;
                        SpawnPlayer(playerid);
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïî íåêîòîðûì äàííûì, âû òåïåðü íå â êëàíå! Òåïåðü âû áóäåòå ñïàâíèòñÿ íà ñïàâíàõ ñåðâåðà.");
                    PlayerInfo[playerid][pSpawnChange] = 0;
                    SpawnPlayer(playerid);
                }
            }
            else if (PlayerInfo[playerid][pSpawnChange] == 2) //ñïàâí äîìà
            {
                if (PlayerInfo[playerid][pHouseID] != 0)
                {
                    for (new i = 0; i < MAX_CREATED_HOUSE; i++)
                    {
                        if (PlayerInfo[playerid][pHouseID] == HouseInfo[i][hID])
                        {
                            PlayerInfo[playerid][pActionHouseID] = i;
                            //EnterHouse(playerid, i, false);
                            Teleport(playerid, gHousesSetting[HouseInfo[i][hInt]][g_hCoordX], gHousesSetting[HouseInfo[i][hInt]][g_hCoordY], gHousesSetting[HouseInfo[i][hInt]][g_hCoordZ], HouseInfo[i][hID], gHousesSetting[HouseInfo[i][hInt]][g_hInt], false, 0.0000, false);
                            break;
                        }
                        else
                        {
                            continue;
                        }
                    }

                }
                else
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âàø äîì ïî íåèçâåñòíûì äàííûì íåäîñòóïåí! Âû òåïåðü ñïàâíèòåñü íà ñïàâíàõ ñåðâåðà.");
                    PlayerInfo[playerid][pSpawnChange] = 0;
                    SpawnPlayer(playerid);
                }
            }
            else if (PlayerInfo[playerid][pSpawnChange] == 3) //îñîáûé ñïàâí
            {
                if (PlayerInfo[playerid][pVIP] == 0)
                {
                    PlayerInfo[playerid][pSpawnChange] = 0;
                    SpawnPlayer(playerid);
                }
                else Teleport(playerid, PlayerInfo[playerid][pvsx], PlayerInfo[playerid][pvsy], PlayerInfo[playerid][pvsz], 0, 0, false, PlayerInfo[playerid][pvsa], false);
            }
            if (GetPVarInt(playerid, "goodspawnmessage") == 0)
            {
                SetPVarInt(playerid, "goodspawnmessage", 1);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ðåæèì áåññìåðòèÿ àêòèâèðîâàí. ×òîáû {8F30E4}Îòêëþ÷èòü {FFFFFF}åãî, íàíåñèòå óðîí ïî ëþáîìó èãðîêó");
                SetPVarInt(playerid, "goodspawn", 1);
            }
            if (GetPVarInt(playerid, "goodspawn") == 1)
            {
                SetPlayerHealth(playerid, 999999999);
                SetPlayerArmour(playerid, 100);
            }
            ResetPlayerWeapons(playerid);
            for (new i; i < 13; i++) if (gPlayerWeapon[playerid][i] > WEAPON_FIST) GivePlayerWeapon(playerid, gPlayerWeapon[playerid][i], gPlayerWeapon[playerid][i + 13]);
        }
        else if (dmzone[playerid] != 0 && Prison[playerid] <= 0)
        {
            ResetPlayerWeapons(playerid);//îòîáðàòü îðóæèå
            GivePlayerWeapon(playerid, WEAPON_DEAGLE, 2000);//çàïîëíåíèå ñëîòîâ îðóæèÿ èãðîêà ïåðåä DM
            switch (dmzone[playerid])
            {
                case 1:
                {
                    Teleport(playerid, DMZONESTELEPORTS[randomzone[0]][0], DMZONESTELEPORTS[randomzone[0]][1], DMZONESTELEPORTS[randomzone[0]][2], 100, 0, false, DMZONESTELEPORTS[randomzone[0]][3], false); //DM çîíà 1
                    // if (!GetCbugAllowed(playerid))SetCbugAllowed(true, playerid);
                }
                case 2:
                {
                    Teleport(playerid, DMZONESTELEPORTS[randomzone[1]][0], DMZONESTELEPORTS[randomzone[1]][1], DMZONESTELEPORTS[randomzone[1]][2], 101, 0, false, DMZONESTELEPORTS[randomzone[1]][3], false); //DM çîíà 2
                    // if (GetCbugAllowed(playerid))SetCbugAllowed(false, playerid);
                }
            }
        }
        //DUELSYS
        if (Duel[playerid] >= 2)
        {
            if (Duelrounds[playerid] > 0)
            {
                SetTimerEx("DelayedDuelSpawn", 2000, false, "i", playerid); //Change the "2000" to the spawndelaytime you want. I recommend 2 seconds as a minimum.
            }
        }
        //DUELSYS
        if (Prison[playerid] > gettime())
        {
            Teleport(playerid, 1104.6355, 1098.7548, 1098.0000, 0, 0, false, 88.7659, false);
            prisontimer[playerid] = SetTimerEx("CheckPrison", 5000, false, "i", playerid);
            return 1;
        }
        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StartSpectate(i, playerid);
            }
        }
        if (GetPVarInt(playerid, "FirstCheckNakaz") == 0)
        {
            SetTimerEx("CheckNakaz", 2000, false, "i", playerid);
        }
    }
    else
    {
        if (PlayerInfo[playerid][pSex] == 1)
        {
            selectskin[playerid] = 0;
            SetPlayerSkin(playerid, 0);
        }
        else if (PlayerInfo[playerid][pSex] == 2)
        {
            selectskin[playerid] = 9;
            SetPlayerSkin(playerid, 9);
        }
        TogglePlayerControllable(playerid, false);
        SetPlayerPos(playerid, 1097.2878, -820.6286, 1084.0475);
        SetPlayerFacingAngle(playerid, 184.2114);
        SetPlayerInterior(playerid, 0);
        SetPlayerCameraPos(playerid, 1097.2279, -825.9028, 1084.7512);
        SetPlayerCameraLookAt(playerid, 1097.2327, -824.9048, 1084.7271);

        TextDrawShowForPlayer(playerid, skins_TD[0]);
        TextDrawShowForPlayer(playerid, skins_TD[1]);
        TextDrawShowForPlayer(playerid, skins_TD[2]);
        TextDrawShowForPlayer(playerid, skins_TD[3]);
        TextDrawShowForPlayer(playerid, skins_TD[4]);
        TextDrawShowForPlayer(playerid, skins_TD[6]);
        TextDrawShowForPlayer(playerid, skins_TD[5]);
        SelectTextDraw(playerid, COLOR_GRAD1);
    }
    return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if (clickedid == skins_TD[4])
    {
        if (PlayerInfo[playerid][pSex] == 1)
        {

            selectskin[playerid]--;
chskin_gotos00:
            new skinvalue = SearchValueInElemetsArray(femaleskins, selectskin[playerid]);
            if (skinvalue != -1)
            {

                selectskin[playerid]--;
                if (selectskin[playerid] < 0)
                {
                    selectskin[playerid] = 311;
                }
                goto chskin_gotos00;
            }
            if (selectskin[playerid] < 0)
            {
                selectskin[playerid] = 311;
                goto chskin_gotos00;
            }
            if (selectskin[playerid] == 74)
            {
                selectskin[playerid]--;
                goto chskin_gotos00;
            }
        }
        else if (PlayerInfo[playerid][pSex] == 2)
        {

            selectskin[playerid]--;
chskin_gotos0:
            if (selectskin[playerid] == 74) selectskin[playerid]--;
            new skinvalue = SearchValueInElemetsArray(femaleskins, selectskin[playerid]);
            if (skinvalue == -1)
            {

                selectskin[playerid]--;
                if (selectskin[playerid] < 9)
                {
                    selectskin[playerid] = 309;
                }
                goto chskin_gotos0;
            }
            if (selectskin[playerid] < 9)
            {
                selectskin[playerid] = 309;
                goto chskin_gotos0;
            }
        }
        PlayerPlaySound(playerid, 17001, 1097.2279, -825.9028, 1084.7512);
        SetPlayerSkin(playerid, selectskin[playerid]);
        return 1;
    }
    else if (clickedid == skins_TD[6])
    {
        if (PlayerInfo[playerid][pSex] == 1)
        {

            selectskin[playerid]++;
chskin_gotos1:
            new skinvalue = SearchValueInElemetsArray(femaleskins, selectskin[playerid]);
            if (skinvalue != -1)
            {

                selectskin[playerid]++;
                if (selectskin[playerid] > 311)
                {
                    selectskin[playerid] = 0;
                }
                goto chskin_gotos1;
            }
            if (selectskin[playerid] > 311)
            {
                selectskin[playerid] = 0;
                goto chskin_gotos1;
            }
            if (selectskin[playerid] == 74)
            {
                selectskin[playerid]++;
                goto chskin_gotos1;
            }
        }
        else if (PlayerInfo[playerid][pSex] == 2)
        {

            selectskin[playerid]++;
chskin_gotos2:
            if (selectskin[playerid] == 74) selectskin[playerid]++;
            new skinvalue = SearchValueInElemetsArray(femaleskins, selectskin[playerid]);
            if (skinvalue == -1)
            {

                selectskin[playerid]++;
                if (selectskin[playerid] > 309)
                {
                    selectskin[playerid] = 9;
                }
                goto chskin_gotos2;
            }
            if (selectskin[playerid] > 309)
            {
                selectskin[playerid] = 9;
                goto chskin_gotos2;
            }
        }
        SetPlayerSkin(playerid, selectskin[playerid]);
        PlayerPlaySound(playerid, 17000, 1097.2279, -825.9028, 1084.7512);
        return 1;
    }
    else if (clickedid == skins_TD[5])
    {
        PlayerInfo[playerid][pSkin] = selectskin[playerid];
        TextDrawHideForPlayer(playerid, skins_TD[0]);
        TextDrawHideForPlayer(playerid, skins_TD[1]);
        TextDrawHideForPlayer(playerid, skins_TD[2]);
        TextDrawHideForPlayer(playerid, skins_TD[3]);
        TextDrawHideForPlayer(playerid, skins_TD[4]);
        TextDrawHideForPlayer(playerid, skins_TD[6]);
        TextDrawHideForPlayer(playerid, skins_TD[5]);
        CancelSelectTextDraw(playerid);
        SpawnPlayer(playerid);
        TogglePlayerControllable(playerid, true);
        PlayerPlaySound(playerid, 36401, 0.0, 0.0, 10.0);
        return 1;
    }
    return 0;
}

fpub:CheckNakaz(playerid)
{
    if (GetPVarInt(playerid, "FirstCheckNakaz") == 0)
    {

        new str[256];
        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `mutedlist` WHERE `IDDB` = '%d' LIMIT 1", PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, str, "CheckMuted", "d", playerid);

        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `prisonlist` WHERE `IDDB` = '%d' LIMIT 1", PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, str, "CheckLoginPrison", "d", playerid);

        SetPVarInt(playerid, "FirstCheckNakaz", 1);
    }
    return 1;
}

SearchValueInElemetsArray(const array[], search_value, array_size = sizeof(array))
{
    for (new n = 0; n < array_size; ++n)
        if (array[n] == search_value)
            return n;
    return - 1;
}


fpub:DeathEndPrison(playerid)
{
    DeathInPrison[playerid] = false;
    return 1;
}

public OnPlayerDeath(playerid, killerid, WEAPON:reason)
{
    new string[256];

    if (Prison[playerid] > gettime())
    {
        DeathInPrison[playerid] = true;
        SetTimerEx("DeathEndPrison", 3500, false, "i", playerid);
    }
    if (GetPlayerVehicleID(playerid) == fire_tc[0] || GetPlayerVehicleID(playerid) == fire_tc[1] || GetPlayerVehicleID(playerid) == fire_tc[2])
    {
        if (job[playerid] == 2)
        {
            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
            DestroyObject(object_fire[playerid]);
            DisablePlayerRaceCheckpoint(playerid);
            job[playerid] = 0;
            SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Âû óâîëåíû ñ ïîæàðíèêà ïîñëå ñìåðòè{CCFF00}!");
            SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
        }
    }
    R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
    SendDeathMessage(killerid, playerid, reason);
    if (!(Events[playerid][0] || Events[playerid][1] || Events[playerid][2] || Events[playerid][3])) //ïðè ñìåðòè íà åâåíòàõ ÀÁÍÓËßÈÌÑß)))
    {
        Events[playerid][0] = false;
    }
    if (Checkpoint[playerid] == 1) //äàëüíîáîéùèê
    {
        DisablePlayerCheckpoint(playerid);
        Checkpoint[playerid] = 0;
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFF00}Âû óìåðëè è íå ñìîãëè äîñòàâèòü ãðóç!");
    }//äàëüíîáîéùèê
    if (Checkpoint[playerid] == 2) //äàëüíîáîéùèê
    {
        DisablePlayerCheckpoint(playerid);
        Checkpoint[playerid] = 0;
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFF00}Âû óìåðëè è íå ñìîãëè äîñòàâèòü ãðóç!");
    }//äàëüíîáîéùèê

    //DUELSYS
    if (Duel[killerid] >= 2 && Duel[playerid] >= 2)
    {
        if (Duelrounds[playerid] <= 1)
        {
            if (Duel[playerid] >= 2)
            {
                Duel[playerid] = 0;
                SetPlayerVirtualWorld(playerid, 0);
                Gotrequest[playerid] = 0;
                Maderequest[playerid] = 0;
                KillTimer(UnDuelend[playerid]);
            }
        }
        if (Duelrounds[playerid] > 1)
        {
            Duelrounds[playerid] -= 1;
            KillTimer(UnDuelend[playerid]);
        }
        //Killerid
        if (Duelrounds[killerid] <= 1)
        {
            if (Duel[killerid] >= 2)
            {
                Gotrequest[killerid] = 0;
                Maderequest[killerid] = 0;
                Duelwins[killerid] += 1;
                SetPlayerVirtualWorld(killerid, 0);
                Duel[killerid] = 0;
                new string2[256];
                new Weaponname[32], Weaponname2[32];
                GetWeaponName(Duelweap1[playerid], Weaponname, 32);
                GetWeaponName(Duelweap2[playerid], Weaponname2, 32);
                format(string, sizeof(string), "[DUEL]: {FFFFFF}%s {CCFF00}ïîáåäèë â äóýëå ñ {FFFFFF}%s.{CCFF00} Îðóæèå: {FFFFFF}%s, %s {CCFF00}Ñòàâêà: {FFFFFF}%d$", PlayerInfo[killerid][pName], PlayerInfo[playerid][pName], Weaponname, Weaponname2, Duelbet[playerid]);
                format(string2, sizeof(string2), "[DUEL]: {FFFFFF}Ôèíàëüíûé ðåçóëüòàò: {CCFF00}%s {99FF99}%i:%i {CCFF00}%s", PlayerInfo[killerid][pName], Duelwins[killerid], Duelwins[playerid], PlayerInfo[playerid][pName]);
                SendClientMessageToAll(COLOR_VIOLET, string);
                SendClientMessageToAll(COLOR_VIOLET, string2);
                SendClientMessage(killerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû âûéãðàëè â äóýëå è ïîëó÷èëè íàãðàäó! Ïîçäðàâëÿåì!!!");
                MoneyK(killerid, Duelbet[playerid]);
                MoneyK(playerid, -Duelbet[playerid]);
                //WeaponBugDuel[killerid] = 1;
                //WeaponBugDuel[playerid] = 1;
                Duelbet[playerid] = 0;
                Duelbet[killerid] = 0;
                ResetPlayerWeapons(killerid);
                ResetPlayerWeapons(playerid);
                KillTimer(UnDuelend[killerid]);
                SpawnPlayer(killerid);
            }
        }
    }
    if (Duel[killerid] >= 2 && Duel[playerid] < 2)
    {
        if (Gotrequest[killerid] == 1)
        {
            new PID = Duelmaker[killerid];
            Gotrequest[killerid] = 0;
            Maderequest[PID] = 0;
            SetPlayerVirtualWorld(killerid, 0);
            Duel[killerid] = 0;
            Duelrounds[killerid] = 0;
            SetPlayerVirtualWorld(PID, 0);
            Duel[PID] = 0;
            Duelrounds[PID] = 0;
            SendClientMessage(killerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            //WeaponBugDuel[killerid] = 1;
            //WeaponBugDuel[PID] = 1;
            Duelbet[PID] = 0;
            Duelbet[killerid] = 0;
            ResetPlayerWeapons(PID);
            ResetPlayerWeapons(killerid);
            KillTimer(UnDuelend[killerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
            SpawnPlayer(killerid);
        }
        if (Maderequest[killerid] == 1)
        {
            new PID = Duelopponent[killerid];
            Maderequest[killerid] = 0;
            Gotrequest[PID] = 0;
            SetPlayerVirtualWorld(killerid, 0);
            Duel[killerid] = 0;
            Duelrounds[killerid] = 0;
            SetPlayerVirtualWorld(PID, 0);
            Duel[playerid] = 0;
            Duelrounds[PID] = 0;
            SendClientMessage(killerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            //WeaponBugDuel[killerid] = 1;
            //WeaponBugDuel[PID] = 1;
            Duelbet[killerid] = 0;
            Duelbet[PID] = 0;
            ResetPlayerWeapons(PID);
            ResetPlayerWeapons(killerid);
            KillTimer(UnDuelend[killerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
            SpawnPlayer(killerid);
        }
    }
    if (Duel[killerid] < 2 && Duel[playerid] >= 2)
    {
        if (Gotrequest[playerid] == 1)
        {
            new PID = Duelmaker[playerid];
            Gotrequest[playerid] = 0;
            Maderequest[PID] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            Duel[playerid] = 0;
            Duelrounds[playerid] = 0;
            SetPlayerVirtualWorld(PID, 0);
            Duel[PID] = 0;
            Duelrounds[PID] = 0;
            SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            //WeaponBugDuel[PID] = 1;
            //WeaponBugDuel[playerid] = 1;
            Duelbet[playerid] = 0;
            Duelbet[PID] = 0;
            ResetPlayerWeapons(PID);
            ResetPlayerWeapons(playerid);
            KillTimer(UnDuelend[playerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
            SpawnPlayer(playerid);
        }
        if (Maderequest[playerid] == 1)
        {
            new PID = Duelopponent[playerid];
            Maderequest[playerid] = 0;
            Gotrequest[PID] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            Duel[playerid] = 0;
            Duelrounds[playerid] = 0;
            SetPlayerVirtualWorld(PID, 0);
            Duel[PID] = 0;
            Duelrounds[PID] = 0;
            SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü çàâåðøèëàñü èç-çà ìíîãèõ îãðàíè÷åíèé");
            //WeaponBugDuel[PID] = 1;
            //WeaponBugDuel[playerid] = 1;
            Duelbet[PID] = 0;
            Duelbet[playerid] = 0;
            ResetPlayerWeapons(PID);
            ResetPlayerWeapons(playerid);
            KillTimer(UnDuelend[playerid]);
            KillTimer(UnDuelend[PID]);
            SpawnPlayer(PID);
            SpawnPlayer(playerid);
        }
    }//DUELSYS

    if (killerid != INVALID_PLAYER_ID)
    {
        PlayerInfo[killerid][pKills] += 1;
        PlayerInfo[playerid][pDeaths] += 1;

        if (dmzone[playerid] == 0 && dmzone[killerid] == 0)
        {
            SetPVarInt(killerid, "PlMon", GetPVarInt(killerid, "PlMon") + 5000);
            SendClientMessage(killerid, COLOR_VIOLET, ""NS" {FFFFFF}Çà óáèéñòâî {CCFF00}+$5000");
            //for(new i; i < 26; i++) gPlayerWeapon[playerid][i] = 0;
            if (GetPVarInt(playerid, "goodspawn") != 1)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ðåæèì áåññìåðòèÿ àêòèâèðîâàí. ×òîáû {8F30E4}Îòêëþ÷èòü {FFFFFF}åãî, íàíåñèòå óðîí ïî ëþáîìó èãðîêó");
                SetPlayerHealth(playerid, 100);
                SetPlayerArmour(playerid, 100);
                SetPVarInt(playerid, "goodspawn", 1);
            }
        }

        if (dmzone[playerid] > 0 && dmzone[killerid] > 0) //åñëè ñìåðòü è óáèéñòâî â DM-çîíå, òî:
        {
            dmkills[killerid]++;//÷èñëî óáèéñòâ èãðîêà +1
            dmdeath[playerid]++;//÷èñëî ñìåðòåé èãðîêà +1

            format(string, sizeof(string), "Âû ïîëó÷èëè 10000$ çà óáèéñòâî %s íà ÄÌ! (Óáèéñòâ: %d / Ñìåðòåé: %d)", PlayerInfo[playerid][pName], dmkills[killerid], dmdeath[killerid]);
            SendClientMessage(killerid, COLOR_VIOLET, string);
            format(string, sizeof(string), "Âàñ óáèë %s íà ÄÌ! (Óáèéñòâ: %d / Ñìåðòåé: %d)", PlayerInfo[killerid][pName], dmkills[playerid], dmdeath[playerid]);
            SendClientMessage(playerid, COLOR_VIOLET, string);
            SetPVarInt(killerid, "PlMon", GetPVarInt(killerid, "PlMon") + 10000);
            SetPlayerHealth(killerid, 100);
        }

    }
    return 1;
}

public OnVehicleSpawn(vehicleid)
{
    return 1;
}

stock OnPlayerSave(playerid)
{
    if (gPlayerLogged[playerid])
    {
        new str[4096];

        mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `Money`='%d', `Kills`='%d', `MinLog`='%d', `Deaths`='%d',\
		`Combo`='%d',`RecPM`='%d',`IPAdr`='%s',`keymenu`='%d',`Skin`='%d',`DriftExp`='%d',`VIP`='%d',`vsx`='%f',`vsy`='%f',`vsz`='%f',`vsa`='%f',\
		`houseid`='%d', `ExpRecord`='%d', `weapons`='%s', `ColorPlayer`='%d', `Gang`='%d', `GangLvl`='%d',`SpawnChange`='%d' WHERE `PID`='%d' LIMIT 1",
                     GetPVarInt(playerid, "PlMon"), PlayerInfo[playerid][pKills], PlayerInfo[playerid][pMinlog], PlayerInfo[playerid][pDeaths], PlayerInfo[playerid][pCombo],
                     PlayerInfo[playerid][pRecPM], PlayerInfo[playerid][pIPAdr], GetPVarInt(playerid, "MnMode"), PlayerInfo[playerid][pSkin],
                     PlayerInfo[playerid][pDriftExp], PlayerInfo[playerid][pVIP], PlayerInfo[playerid][pvsx], PlayerInfo[playerid][pvsy], PlayerInfo[playerid][pvsz], PlayerInfo[playerid][pvsa],
                     PlayerInfo[playerid][pHouseID], PlayerInfo[playerid][pExpRecord], gPlayerLastStateWeapon[playerid], PlayerInfo[playerid][pColorNickname],
                     PlayerInfo[playerid][pGang], PlayerInfo[playerid][pGangLvl], PlayerInfo[playerid][pSpawnChange], PlayerInfo[playerid][pMID]);
        mysql_tquery(ServerDB, str, "", "");
    }
    return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
    return 1;
}

public OnPlayerText(playerid, text[])
{
    new string[256];
    if (PlayerInfo[playerid][pSkin] < 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 0;
    }
    if (Muted[playerid] > gettime())
    {
        format(string, sizeof(string), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, string);
        return 0;
    }
    if (CheckFlood(playerid, "ChatFlood", 3) == 0 && AI[playerid][aLevel] < 1)
    {
        return 0;
    }
    if (!gPlayerSpawned[playerid]) //èãðîê ÍÅ çàñïàâíèëñÿ
    {
        printf("-----[Èãðîê íå çàñïàâíèëñÿ] %s [%d]: %s", PlayerInfo[playerid][pName], playerid, text); // Îòïðàâëÿåì ñîîáùåíèå â ñåðâåð-ëîã
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 0;
    }
    if (text[0] == '!') //Áëèæíèé ÷àò
    {
        new pText[144];
        strmid(pText, text, 1, strlen(text));
        SendLocalChat(playerid, pText);
        return 0;
    }
    if (text[0] == '@' || text[0] == '#' || text[0] == '¹')
    {
        new pText[144];
        strmid(pText, text, 1, strlen(text));
        new id, TextForPlayer[144];
        if (sscanf(pText, "ds[144]", id, TextForPlayer))
        {
            SendClientMessage(playerid, COLOR_VIOLET, "Ïðèìåð èñïîëüçîâàíèÿ ïèíãà: {CCFF00}(@/#/¹)ID ñîîáùåíèå");
            return 0;
        }
        if (!IsPlayerConnected(id))
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå â ñåòè!");
            return 0;
        }
        if (!gPlayerSpawned[id])
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå çàñïàâíèëñÿ!");
            return 0;
        }
        SendPingPlayerMessage(playerid, TextForPlayer, id);
        return 0;
    }

    if (PlayerInfo[playerid][pGang] == 0)
    {
        if (gPlayerSpawned[playerid]) //èãðîê ÓÆÅ çàñïàâíèëñÿ
        {
            if (PlayerInfo[playerid][pVIP] == 0)format(string, sizeof(string), ""MNS" %s[%d]: {FFFFFF}%s", PlayerInfo[playerid][pName], playerid, text);
            else format(string, sizeof(string), ""MNS" %s[%d]{00FFFF}VIP: {FFFFFF}%s", PlayerInfo[playerid][pName], playerid, text);
            SendClientMessageToAll(GetPlayerColor(playerid), string); // Îòïðàâëÿåì ñîîáùåíèå
            SetPlayerChatBubble(playerid, text, GetPlayerColor(playerid), 15.0, 5000);
            return 0;
        }
    }
    else
    {
        if (gPlayerSpawned[playerid]) //èãðîê ÓÆÅ çàñïàâíèëñÿ
        {
            if (PlayerInfo[playerid][pVIP] == 0)format(string, sizeof(string), "%s %s[%d]: {FFFFFF}%s", GangInfo[PlayerInfo[playerid][pGang]][gName], PlayerInfo[playerid][pName], playerid, text);
            else format(string, sizeof(string), "%s %s[%d]{00FFFF}VIP: {FFFFFF}%s", GangInfo[PlayerInfo[playerid][pGang]][gName], PlayerInfo[playerid][pName], playerid, text);
            SendClientMessageToAll(GetPlayerColor(playerid), string); // Îòïðàâëÿåì ñîîáùåíèå
            SetPlayerChatBubble(playerid, text, GetPlayerColor(playerid), 15.0, 5000);
            return 0;
        }
    }
    return 1;
}

public OnPlayerCommandText(playerid, cmdtext[])
{
    new cmd[128], params[128];
    sscanf(cmdtext, "s[128]s[128]", cmd, params);
    if (PlayerInfo[playerid][pSkin] < 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 1;
    }
    if (CheckFlood(playerid, "CommandFlood", 1) == 0 && AI[playerid][aLevel] < 1)
    {
        return 1;
    }
    if (strcmp(cmd, "/alogin", true) == 0)
    {
        new pass[64];
        if (sscanf(params, "s[64]", pass)) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/alogin [pass]");
        new str[128];
        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `admins` WHERE `aname` = '%e' LIMIT 1", PlayerInfo[playerid][pName]);
        mysql_tquery(ServerDB, str, "aLogin", "ds", playerid, pass);
        return 1;
    }
    if (Prison[playerid] > gettime() && AI[playerid][aLevel] < 1)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå êîìàíäû íå ðàáîòàþò!");
        return 1;
    }
    new string[256];
    format(string, sizeof(string), "[SCAN CMD]: {CCFF00}%s[%d] {FFFFFF}ââ¸ë êîìàíäó {FFCC00}%s %s", PlayerInfo[playerid][pName], playerid, cmd, params);
    foreach (Player, i)
    {
        if (AI[playerid][aReadCMD] == true)
        {
            SendClientMessage(i, COLOR_RED, string);
        }
    }
    new strdln[4000];
    strdln[0]++;
    strdln[0]--;
    /*	if(Duel[playerid] == 1 && strcmp(cmd, "/accept", true) != 0 || Duel[playerid] == 1 && strcmp(cmd, "/cancel", true) != 0 )
    	{
    		SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {CCFF00}Âû íå ìîæåòå èñïîëüçîâàòü êîìàíäû â äóýëè!");
    		return 1;
    	}*/
    if (strcmp(cmd, "/exit", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID)
            return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (!(Events[playerid][0] || Events[playerid][1] || Events[playerid][2] || Events[playerid][3]))
            return 1;
        if (Events[playerid][0]) Events[playerid][0] = false;
        else if (Events[playerid][1]) Events[playerid][1] = false;
        else if (Events[playerid][2]) Events[playerid][2] = false;
        else if (Events[playerid][3]) Events[playerid][3] = false;
        SpawnPlayer(playerid);
        return 1;
    }
    if (Events[playerid][0])
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ìîæåòå ïèñàòü êîìàíäû, âû íàõîäèòåñü â ëàáèðèíòå!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè õîòèòå âûéòè ñ ïàðêóðà, ïðîïèøèòå {CCFF00}/exit");
        return 1;
    }
    if (strcmp(cmd, "/restart", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID)
            return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (!(Events[playerid][1] || Events[playerid][2] || Events[playerid][3]))
            return 1;
        if (Events[playerid][1]) Teleport(playerid, 4476.1670, -2928.5520, 6.3952, 200, 0, true, 180, false);
        else if (Events[playerid][2]) Teleport(playerid, -824.2225, 5745.5137, 16.3740, 200, 0, true, 0, false);
        else if (Events[playerid][3]) Teleport(playerid, 2414.5239, 4172.3516, 54.1008, 200, 0, true, 0, false);
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû îòïðàâèëèñü â ñàìîå íà÷àëî!");
        return 1;
    }
    if ((Events[playerid][1] || Events[playerid][2] || Events[playerid][3]))
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ìîæåòå ïèñàòü êîìàíäû, âû íàõîäèòåñü íà òðåê ìàíèè!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè õîòèòå âûéòè ñ íå¸, ïðîïèøèòå {CCFF00}/exit");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè õîòèòå íà÷àòü ñíà÷àëà - {CCFF00}/restart");
        return 1;
    }

    if (strcmp(cmd, "/help", true) == 0 && !gPlayerSpawned[playerid]) //åñëè èãðîê ÍÅ çàñïàâíèëñÿ
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        SendClientMessage(playerid, COLOR_GRAD1, " ----------------------------- Ïîìîùü ----------------------------- ");
        SendClientMessage(playerid, COLOR_GREEN, "   Åñëè íåò âîçìîæíîñòè âûáîðà ñêèíà è ñïàâíà,");
        SendClientMessage(playerid, COLOR_GREEN, "                  èñïîëüçóéòå êîìàíäó   /spawn");
        SendClientMessage(playerid, COLOR_GRAD1, " ------------------------------------------------------------------------ ");
        return 1;
    }
    if (strcmp("/spawn", cmdtext, true, 10) == 0 && !gPlayerSpawned[playerid])
    {
        if (Prison[playerid] > gettime()) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå íåäîñòóïíî!");
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû çàñïàâíèëèñü!");
        SpawnPlayer(playerid);
        return 1;
    }
    if (!gPlayerSpawned[playerid])
    {
        printf("-----[Èãðîê íå çàñïàâíèëñÿ] %s [%d]: ââ¸ë êîìàíäó %s .", PlayerInfo[playerid][pName], playerid, cmdtext); // Îòïðàâëÿåì êîìàíäó â ñåðâåð-ëîã
        SendClientMessage(playerid, COLOR_RED, " Âû åù¸ íå çàñïàâíèëèñü ! ââåäèòå êîìàíäó /help !");
        return 1;
    }
    if (strcmp("/pm", cmd, true) == 0)
    {
        if (Muted[playerid] > gettime())
        {
            format(string, sizeof(string), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
            SendClientMessage(playerid, COLOR_VIOLET, string);
            return 1;
        }
        new plid, mess[144];
        if (sscanf(params, "ds[144]", plid, mess)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èñïîëüçóéòå: /pm [id] [message]");
        if (!IsPlayerConnected(plid)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Íåò òàêîãî èä èãðîêà!");
        if (PlayerInfo[plid][pRecPM] == 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âûáðàííûé èãðîê çàïðåòèë äëÿ ñåáÿ ïðè¸ì PM!");
        if (playerid != plid)
        {
            format(string, sizeof(string), "PM >> %s (%d) >> %s (%d): %s", PlayerInfo[playerid][pName], playerid, PlayerInfo[plid][pName], plid, mess);
            print(string);
            format(string, sizeof(string), "[PM] äëÿ %s[%d]: %s", PlayerInfo[plid][pName], plid, mess);
            SendClientMessage(playerid, 0xF4C330FF, string);
            format(string, sizeof(string), "[PM] îò %s[%d]: %s", PlayerInfo[playerid][pName], playerid, mess);
            PlayerPlaySound(plid, 1085, 0, 0, 0);
            SendClientMessage(plid, 0xFFFF00FF, string);

            format(string, sizeof(string), "[PM]: %s[%d] > %s[%d]: {FFFFFF}%s", PlayerInfo[playerid][pName], playerid, PlayerInfo[plid][pName], plid, mess);
            foreach (Player, i)
            {
                if (AI[i][aLevel] > 0 && AI[i][aReadPM] == true && playerid != i && i != plid)
                {
                    SendClientMessage(playerid, 0x00FFFFFF, string);
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû ïèøåòå â PM ñåáå! Âûáåðèòå äðóãîé èä èãðîêà!");
        }
        return 1;
    }
    if (strcmp("/kill", cmdtext, true, 10) == 0)
    {
        if (Prison[playerid] > gettime()) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå íåäîñòóïíî!");
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íà ÄÌ! Çàïðåùåíî èñïîëüçîâàíèå ýòîé êîìàíäû! Ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        SetPlayerArmour(playerid, 0);
        SetPlayerHealth(playerid, 0);
        return 1;
    }

    // êîìàíäû äëÿ ñèñòåìû äîìîâ. by Uporoty
    if (strcmp(cmd, "/ch", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (AI[playerid][aLevel] < 4) return 1;
        new klass, cost;
        if (sscanf(params, "dd", klass, cost))
        {
ch_gotos:
            return SendClientMessage(playerid, COLOR_WHITE, "{FFA500}[INFO]:{ffffff} /ch [êëàññ(1-3)] [öåíà]");
        }
        if (!(1 <= klass <= 3)) goto ch_gotos;
        if (cost < 1) goto ch_gotos;
        if (cost < recomended_cost_houses[klass - 1]) return SendClientMessage(playerid, COLOR_RED, "Óêàçàíàÿ öåíà íå ñîîòâåòñòâóåò ìèíèìàëüíîé. Ñìîòðè {CCFF00}/houseshelp");
        new Float:xyz[3];
        GetPlayerPos(playerid, xyz[0], xyz[1], xyz[2]);
        if (CreateHouse(klass, cost, xyz[0], xyz[1], xyz[2])) SendClientMessage(playerid, -1, "Îøèáêà! Íåò ñëîòîâ äëÿ äîìîâ, óâåëè÷üòå ìàêðîñ MAX_CREATE_HOUSE!");
        else SendClientMessage(playerid, -1, "Äîì óñïåøíî ñîçäàí!");
        return 1;
    }
    if (strcmp(cmd, "/dh", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (AI[playerid][aLevel] < 4) return 1;
        new id;
        if (sscanf(params, "d", id))
        {
dh_gotos:
            return SendClientMessage(playerid, COLOR_WHITE, "{FFA500}[INFO]:{ffffff} /dh [id äîìà]");
        }
        id--;
        if (!(0 <= id < MAX_CREATE_HOUSE) || HouseInfo[id][hID] < 1) goto dh_gotos;
        foreach (Player, i)
        {
            if (PlayerInfo[i][pHouseID] != HouseInfo[id][hID]) continue;
            PlayerInfo[i][pHouseID] = 0;
            break;
        }
        new str[128];
        mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `houseid`='0' WHERE `PlayerName`='%e' LIMIT 1", HouseInfo[id][hOwner]);
        mysql_tquery(ServerDB, str, "", "");
        DestroyHouse(id);
        SendClientMessage(playerid, -1, "Äîì óñïåøíî óäàë¸í!");
        return 1;
    }
    if (strcmp(cmd, "/sh", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (AI[playerid][aLevel] < 4) return 1;
        new id;
        if (sscanf(params, "d", id))
        {
sh_gotos:
            return SendClientMessage(playerid, COLOR_WHITE, "{FFA500}[INFO]:{ffffff} /sh [id äîìà]");
        }
        id--;
        if (!(0 <= id < MAX_CREATE_HOUSE) || HouseInfo[id][hID] < 1 || !HouseInfo[id][hOwned]) goto sh_gotos;
        foreach (Player, i)
        {
            if (PlayerInfo[i][pHouseID] != HouseInfo[id][hID]) continue;
            PlayerInfo[i][pHouseID] = 0;
            break;
        }
        new str[128];
        mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `houseid`='0' WHERE `PlayerName`='%e' LIMIT 1", HouseInfo[id][hOwner]);
        mysql_tquery(ServerDB, str, "", "");
        ClearHouse(id);
        SendClientMessage(playerid, -1, "Äîì óñïåøíî ïðîäàí!");
        return 1;
    }
    if (strcmp(cmd, "/shall", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (AI[playerid][aLevel] < 4) return 1;
        for (new i; i < MAX_CREATED_HOUSE; i++) ClearHouse(i);
        foreach(Player, i) PlayerInfo[i][pHouseID] = 0;

        mysql_tquery(ServerDB, "UPDATE `players` SET `houseid`='0'", "", "");
        mysql_tquery(ServerDB, "UPDATE `houses` SET `owned`='0',`owner`='The State',`lock`='1'", "", "");

        SendClientMessage(playerid, -1, "Âñå äîìà óñïåøíî ïðîäàíû!");
        return 1;
    }
    // the end command by Uporoty

    if (strcmp(cmdtext, "/heal", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íà ÄÌ! Çàïðåùåíî èñïîëüçîâàíèå ýòîé êîìàíäû! Ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        if (CheckFlood(playerid, "StopHeal", 30) == 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ðàç â 30 ñåêóíä{FF0000}!");
            return 1;
        }
        else//èíà÷å:
        {
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Æèçíü è áðîíÿ ïîïîëíåíà!");
        }
        return 1;
    }
    if (strcmp(cmd, "/count", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íà ÄÌ! Çàïðåùåíî èñïîëüçîâàíèå ýòîé êîìàíäû! Ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        if (GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû äîëæíû áûòü â òðàíñïîðòå.");
            return 1;
        }
        new sec;
        if (sscanf(params, "d", sec))
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èñïîëüçóéòå: /count [ñåêóíäû(2-12)]");
            return 1;
        }
        if (sec < 2 || sec > 12)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåêóíäû: îò 2 äî 12!");
            return 1;
        }
        format(string, sizeof(string), ""NS" {FFFFFF}Èãðîê %s [%d] çàïóñòèë îòñ÷¸ò îò %d ñåêóíä.", PlayerInfo[playerid][pName], playerid, sec);
        print(string);
        SendClientMessageToAll(COLOR_VIOLET, string);

        new Float:X, Float:Y, Float:Z, playint, playvw;
        GetPlayerPos(playerid, X, Y, Z);
        playint = GetPlayerInterior(playerid);
        playvw = GetPlayerVirtualWorld(playerid);
        sec++;
        countdown[playerid] = sec;
        for (new i = 0; i < MAX_PLAYERS ; i++)
        {
            if (IsPlayerConnected(i))
            {
                if (IsPlayerInRangeOfPoint(i, 20.0, X, Y, Z) && GetPlayerInterior(i) == playint &&
                        GetPlayerVirtualWorld(i) == playvw)
                {
                    if (GetPlayerState(i) != PLAYER_STATE_ONFOOT && countdown[i] == -1) countdown[i] = sec;
                }
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/menu", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñèñòåìå ÄÌ ýòà êîìàíäà íå ðàáîòàåò! Äëÿ âûõîäÿ ñ äì ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        if (Events[playerid][0])
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ìåíþ íåäîñòóïíî â ëàáèðèíòå! Äëÿ âûõîäà ñ íåãî ââåäèòå {CCFF00}/exit");
            return 1;
        }
        PlayerDialogMenu(playerid);
        return 1;
    }
    if (strcmp(cmd, "/mmd", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (GetPVarInt(playerid, "MnMode") == 1)
        {
            SetPVarInt(playerid, "MnMode", 2);
            printf(" --> Èãðîê %s âêëþ÷èë Y -ðåæèì âûçîâà ìåíþ.", PlayerInfo[playerid][pName]);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû âûáðàëè êíîïêó ìåíþ Y");

            for (new i = 0; i < sizeof(RandomSpawns); i++)
            {
                DeletePlayer3DTextLabel(playerid, SpawnTextDraw[playerid][i]);
                format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}Y\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                SpawnTextDraw[playerid][i] = CreatePlayer3DTextLabel(playerid, string, 0x8F30E4AA, RandomSpawns[i][0], RandomSpawns[i][1], RandomSpawns[i][2], 20.0);
            }
        }
        else
        {
            SetPVarInt(playerid, "MnMode", 1);
            printf(" --> Èãðîê %s îòêëþ÷èë Y -ðåæèì âûçîâà ìåíþ.", PlayerInfo[playerid][pName]);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû âûáðàëè êíîïêó ìåíþ ALT/2(â ìàøèíå)");

            for (new i = 0; i < sizeof(RandomSpawns); i++)
            {
                DeletePlayer3DTextLabel(playerid, SpawnTextDraw[playerid][i]);
                format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}ALT/2(â ìàøèíå)\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                SpawnTextDraw[playerid][i] = CreatePlayer3DTextLabel(playerid, string, 0x8F30E4AA, RandomSpawns[i][0], RandomSpawns[i][1], RandomSpawns[i][2], 20.0);
            }
        }
        return 1;
    }
    if (strcmp("/dt", cmd, true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new dopper1 = 0;//ìåðêåðíàÿ ïåðåìåííàÿ = 0
        new Float:ConX, Float:ConY, Float:ConZ;
        GetPlayerPos(playerid, ConX, ConY, ConZ);
        if (dopper1 == 0 && GetPlayerInterior(playerid) != 0) //åñëè èãðîê ÍÅ â äåðáè çîíàõ, È â äîìå (èëè äðóãîì èíòåðüåðå) òî:
        {
            SendClientMessage(playerid, COLOR_RED, " Â äîìàõ è äðóãèõ èíòåðüåðàõ ýòà êîìàíäà íå ðàáîòàåò !");
            return 1;
        }
        new dtw;
        if (sscanf(params, "d", dtw))
        {
            SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/dt [âèðòóàëüíûé ìèð (0-99)]");
            return 1;
        }
        if (dtw < 0 || dtw > 99)
        {
            SendClientMessage(playerid, COLOR_RED, " /dt [âèðòóàëüíûé ìèð (0-99)] !");
            return 1;
        }
        if (dtw > 0)
        {
            if (dtw == GetPlayerVirtualWorld(playerid))
            {
                format(string, sizeof(string), " Âû óæå íàõîäèòåñü â %d âèðòóàëüíîì ìèðå !!!", dtw);
                SendClientMessage(playerid, COLOR_RED, string);
                return 1;
            }
            SetPlayerVirtualWorld(playerid, dtw);
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                new carpl;
                carpl = GetPlayerVehicleID(playerid);//ïîëó÷åíèå èä àâòî èíèöèàòîðà
                for (new i = 0; i < MAX_PLAYERS; i++)
                {
                    if (IsPlayerConnected(i))
                    {
                        if (GetPlayerVehicleID(i) == carpl && playerid != i) //åñëè èãðîê â àâòî èíèöèàòîðà, òî:
                        {
                            //óñòàíîâèòü ïàññàæèðàì èíòåðüåð è âèðòóàëüíûé ìèð èãðîêà
                            SetPlayerInterior(i, GetPlayerInterior(playerid));
                            SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
                            format(string, sizeof(string), ""NS" {FFFFFF}Âàø âèðòóàëüíûé ìèð áûë èçìåí¸í íà %d (Âû â ðåæèìå äðèôò òðåíèðîâêè)", dtw);
                            SendClientMessage(i, COLOR_VIOLET, string);
                            SendClientMessage(i, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ îòêëþ÷åíèÿ ðåæèìà äðèôò òðåíèðîâêè èñïîëüçóéòå êîìàíäó: /dt 0");
                        }
                    }
                }
                LinkVehicleToInterior(carpl, GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
                SetVehicleVirtualWorld(carpl, GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
            }
            format(string, sizeof(string), ""NS" {FFFFFF}Âàø âèðòóàëüíûé ìèð áûë èçìåí¸í íà %d (Âû â ðåæèìå äðèôò òðåíèðîâêè)", dtw);
            SendClientMessage(playerid, COLOR_VIOLET, string);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ îòêëþ÷åíèÿ ðåæèìà äðèôò òðåíèðîâêè èñïîëüçóéòå êîìàíäó: /dt 0");
        }
        else
        {
            if (dtw == GetPlayerVirtualWorld(playerid))
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ óæå âûêëþ÷åí ðåæèì äðèôò òðåíèðîâêè!");
                return 1;
            }
            SetPlayerVirtualWorld(playerid, dtw);
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                new carpl;
                carpl = GetPlayerVehicleID(playerid);//ïîëó÷åíèå èä àâòî èíèöèàòîðà
                for (new i = 0; i < MAX_PLAYERS; i++)
                {
                    if (IsPlayerConnected(i))
                    {
                        if (GetPlayerVehicleID(i) == carpl && playerid != i) //åñëè èãðîê â àâòî èíèöèàòîðà, òî:
                        {
                            //óñòàíîâèòü ïàññàæèðàì èíòåðüåð è âèðòóàëüíûé ìèð èãðîêà
                            SetPlayerInterior(i, GetPlayerInterior(playerid));
                            SetPlayerVirtualWorld(i, GetPlayerVirtualWorld(playerid));
                            SendClientMessage(i, COLOR_VIOLET, ""NS" {FFFFFF}Ðåæèì äðèôò òðåíèðîâêè áûë âûêëþ÷åí");
                        }
                    }
                }
                LinkVehicleToInterior(carpl, GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
                SetVehicleVirtualWorld(carpl, GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
            }
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ðåæèì äðèôò òðåíèðîâêè âûêëþ÷åí");
        }
        return 1;
    }


    if (strcmp(cmd, "/elegy", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 562, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/flash", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 565, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/jester", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 559, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/stratum", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 561, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/sultan", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 560, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/uranus", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 558, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/banshee", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 429, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/bullet", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 541, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/cheetah", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 415, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/comet", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 480, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/hotknife", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 434, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/hotring", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 494, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/hotringa", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 502, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/hotringb", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 503, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/infernus", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 411, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/supergt", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 506, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/turismo", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 451, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/windsor", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 555, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/zr350", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 477, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/blade", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 536, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/broadway", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 575, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/remington", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 534, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/savanna", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 567, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/slamvan", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 535, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/tornado", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 576, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/voodoo", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new vehid = 412, vehcol1 = 8, vehcol2 = 15, dispz = 0;
        VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz);
        return 1;
    }
    if (strcmp(cmd, "/dmcount", true) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû äîëæíû áûòü ÍÅ â òðàíñïîðòå.");
            return 1;
        }
        new sec;
        if (sscanf(params, "d", sec))
        {
            SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/dmcount [ñåêóíäû(2-12)]");
            return 1;
        }
        if (sec < 2 || sec > 12)
        {
            SendClientMessage(playerid, COLOR_RED, "Ñåêóíäû: îò 2 äî 12!");
            return 1;
        }
        format(string, sizeof(string), ""NS" {CCFF00}Èãðîê %s [%d] çàïóñòèë DM-îòñ÷¸ò îò %d ñåêóíä.", PlayerInfo[playerid][pName], playerid, sec);
        print(string);

        new Float:X, Float:Y, Float:Z, playint, playvw;
        GetPlayerPos(playerid, X, Y, Z);
        playint = GetPlayerInterior(playerid);
        playvw = GetPlayerVirtualWorld(playerid);
        sec++;
        countdown22[playerid] = sec;
        for (new i = 0; i < MAX_PLAYERS ; i++)
        {
            if (IsPlayerConnected(i))
            {
                if (IsPlayerInRangeOfPoint(i, 300.0, X, Y, Z) && GetPlayerInterior(i) == playint &&
                        GetPlayerVirtualWorld(i) == playvw)
                {
                    SendClientMessage(i, COLOR_RED, string);
                    if (GetPlayerState(i) == PLAYER_STATE_ONFOOT && countdown22[i] == -1) countdown22[i] = sec;
                }
            }
        }
        return 1;
    }
    if (strcmp("/getid", cmdtext, true, 10) == 0)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        new idcar = GetPlayerVehicleID(playerid);
        new modelcar = GetVehicleModel(idcar);
        format(string, sizeof(string), " ID òðàíñïîðòà: %d   Ìîäåëü: %d", idcar, modelcar);
        SendClientMessage(playerid, COLOR_GREY, string);
        return 1;
    }
    if (strcmp("/spawn", cmdtext, true, 10) == 0 && gPlayerSpawned[playerid])
    {
        if (Prison[playerid] > gettime()) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå íåäîñòóïíî!");
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êîìàíäû íåäîñòóïíû!");
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñèñòåìå ÄÌ èãðîâîå ìåíþ íå ðàáîòàåò! Äëÿ âûõîäÿ ñ äì ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        SendClientMessage(playerid, COLOR_GREEN, " Âû çàñïàâíèëèñü !");
        if (IsPlayerInAnyVehicle(playerid))
        {
            new Float:x, Float:y, Float:z;
            tpdrift[playerid] = 1;
            GetPlayerPos(playerid, x, y, z);
            SetPlayerPos(playerid, x, y, z + 5);
            SetTimerEx("SecSpa", 200, false, "i", playerid);//ñïàâí ñ áëîêèðîâêîé çàïîëíåíèÿ ñëîòîâ îðóæèÿ è ïðåäìåòîâ
        }
        else
        {
            SpawnPlayer(playerid);
        }
        return 1;
    }
    return 0;
}//êîíåö êîìàíä

fpub:SecSpa(playerid)
{
    SpawnPlayer(playerid);
    return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    new inter = GetPlayerInterior(playerid);
    LinkVehicleToInterior(vehicleid, inter);
    foreach (Player, i)
    {
        if (AI[i][aSpectateID] == playerid)
        {
            StartSpectate(i, playerid);
        }
    }
    return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    R_Vehicle[playerid] = VehicleSpeed_1;//speedometer
    PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);

    new inter = GetPlayerInterior(playerid);
    LinkVehicleToInterior(vehicleid, inter);

    if (Checkpoint[playerid] == 1) //äàëüíîáîéùèê
    {
        DisablePlayerCheckpoint(playerid);
        Checkpoint[playerid] = 0;
        SendClientMessage(playerid, COLOR_RED, "Âû íå ñìîãëè äîñòàâèòü ãðóç! Òàê êàê âûõîäèòü èç ôóðû çàïðåùåíî.");
    }//äàëüíîáîéùèê
    if (Checkpoint[playerid] == 2) //äàëüíîáîéùèê
    {
        DisablePlayerCheckpoint(playerid);
        Checkpoint[playerid] = 0;
        SendClientMessage(playerid, COLOR_RED, "Âû íå ñìîãëè äîñòàâèòü ãðóç! Òàê êàê âûõîäèòü èç ôóðû çàïðåùåíî.");
    }//äàëüíîáîéùèê
    foreach (Player, i)
    {
        if (AI[i][aSpectateID] == playerid)
        {
            StartSpectate(i, playerid);
        }
    }

    if (GetPlayerVehicleID(playerid) == fire_tc[0] || GetPlayerVehicleID(playerid) == fire_tc[1] || GetPlayerVehicleID(playerid) == fire_tc[2])
    {
        if (job[playerid] == 2)
        {
            fire_timer[playerid] = SetTimerEx("EndPojar", 15000, false, "ii", playerid, GetPlayerVehicleID(playerid));
            SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Âû âûøëè èç ìàøèíû. Çàïóùåí òàéìåð íà {CCFF00}15 {FFFFFF}ñåêóíä.");
            SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Åñëè âû íå âåðí¸òåñü â ìàøèíó ÷åðåç 15 ñåêóíä, âû áóäåòå óâîëåíû{FF0000}!");
        }
    }
    return 1;
}

fpub:EndPojar(playerid, carid)
{
    SetVehicleToRespawn(carid);
    DestroyObject(object_fire[playerid]);
    DisablePlayerRaceCheckpoint(playerid);
    job[playerid] = 0;
    SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Âû óâîëåíû ñ ðàáîòû ïîæàðíèêà{FF0000}!");
    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
    return 1;
}

public OnPlayerStateChange(playerid, PLAYER_STATE:newstate, PLAYER_STATE:oldstate)
{
    new string[64];
    if (newstate == PLAYER_STATE_DRIVER) //speedometer
    {
        format(string, sizeof(string), "~b~%03d ~y~km'h", GetPlayerSpeed(playerid));
        PlayerTextDrawSetString(playerid, VehicleSpeed[playerid], string);
        PlayerTextDrawShow(playerid, VehicleSpeed[playerid]);

        R_Vehicle[playerid] = VehicleSpeed_2;

        new veeid = GetPlayerVehicleID(playerid);
        SetVehicleParamsEx(veeid, 1, 1, 0, 0, 0, 0, 0);

        new model = GetVehicleModel(GetPlayerVehicleID(playerid));
        if (model == 515 || model == 514 || model == 403)
        {
            SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFFFF} Äëÿ òîãî ÷òîáû íà÷àòü ðàáîòàòü ïîäöåïèòå ïðèöåï è ââåäèòå [/start]");
            SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFFFF} ×òîáû óéòè ñ ðàáîòû äàëüíîáîéùèêà ââåäèòå [/off]");
            SendClientMessage(playerid, COLOR_RED, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFFFF} Ïðè ïåðåâîçêå ãðóçà âàì íåëüçÿ áóäåò âûõîäèòü èç ôóðû.");
        }
        if (GetPlayerVehicleID(playerid) == fire_tc[0] || GetPlayerVehicleID(playerid) == fire_tc[1] || GetPlayerVehicleID(playerid) == fire_tc[2])
        {
            if (job[playerid] != 2)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ñîòðóäíèê ïîæàðêè{FF0000}!");
                RemovePlayerFromVehicle(playerid);
            }
            else
            {
                if (fire_timer[playerid] == 0)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Åçæàé ê ìåñòó ïîæàðà{CCFF00}!");
                    fire_stock(playerid);
                }
                else
                {
                    KillTimer(fire_timer[playerid]);
                    fire_timer[playerid] = 0;
                    SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Ïðîäîëæàéòå ñâîþ ðàáîòó!");
                }
            }
        }


    }
    else if (newstate == PLAYER_STATE_ONFOOT)
    {
        R_Vehicle[playerid] = VehicleSpeed_1;

        PlayerTextDrawHide(playerid, VehicleSpeed[playerid]);
    }
    if (newstate == PLAYER_STATE_ONFOOT)
    {
        DriftCancellation(playerid);

        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StartSpectate(i, playerid);
                if (oldstate == PLAYER_STATE_DRIVER)
                {
                    PlayerTextDrawHide(i, HMS44[i]);
                    PlayerTextDrawHide(i, spec_TD[i]);
                }
            }
        }
    }
    if (newstate == PLAYER_STATE_DRIVER)
    {
        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StartSpectate(i, playerid);
                format(string, sizeof(string), "~r~Max Speed: ~y~%d", GetHMaxSpeed(GetPlayerVehicleID(playerid)));
                PlayerTextDrawSetString(i, HMS44[i], string);
                PlayerTextDrawShow(i, HMS44[i]);

                format(string, sizeof(string), "~b~Speed: ~y~%d", GetPlayerSpeed(playerid));
                PlayerTextDrawSetString(i, spec_TD[i], string);
                PlayerTextDrawShow(i, spec_TD[i]);
            }
        }
    }

    if (newstate == PLAYER_STATE_PASSENGER)
    {
        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StartSpectate(i, playerid);
                if (oldstate == PLAYER_STATE_DRIVER)
                {
                    PlayerTextDrawHide(i, HMS44[i]);
                    PlayerTextDrawHide(i, spec_TD[i]);
                }
            }
        }
    }
    if (newstate == PLAYER_STATE_SPAWNED)
    {
        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StartSpectate(i, playerid);
                if (oldstate == PLAYER_STATE_DRIVER)
                {
                    PlayerTextDrawHide(i, HMS44[i]);
                    PlayerTextDrawHide(i, spec_TD[i]);
                }
            }
        }
    }
    if (newstate == PLAYER_STATE_SPECTATING)
    {
        foreach (Player, i)
        {
            if (AI[i][aSpectateID] == playerid)
            {
                StopSpectate(i);
                SendClientMessage(i, COLOR_VIOLET, ""NS" {FFFFFF}Ýòîò àäìèí âîø¸ë â ñëåæêó!");
            }
        }
    }
    return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
    //Ãðóç÷èê
    for (new i = 0; i < 5; i++)
    {
        if (PlayerToPoint(2.0, playerid, Gruz4ikCords[i][0], Gruz4ikCords[i][1], Gruz4ikCords[i][2]))
        {
            MeshokUp[playerid] = true;
            SetPlayerAttachedObject(playerid, 2, 2060, 5, 0.01, 0.1, 0.2, 100, 10, 85);
            ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.1, false, true, true, true, 1);
            SetPlayerCheckpoint(playerid, Gruz4ikCords[5][0], Gruz4ikCords[5][1], Gruz4ikCords[5][2], 2.0);
        }
    }
    if (PlayerToPoint(2.0, playerid, Gruz4ikCords[5][0], Gruz4ikCords[5][1], Gruz4ikCords[5][2]))
    {
        MeshokUp[playerid] = false;
        ApplyAnimation(playerid, "PED", "IDLE_tired", 4.1, false, true, true, false, 1);
        indexMeshok[playerid]++;
        if (IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
        new randomCheck = random(5);
        SetPlayerCheckpoint(playerid, Gruz4ikCords[randomCheck][0], Gruz4ikCords[randomCheck][1], Gruz4ikCords[randomCheck][2], 2.0);
    }

    if (Checkpoint[playerid] == 1)
    {
        if (!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
        {
            SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FF0000} Âû ïîòåðÿëè ïðèöåï!");
            DisablePlayerCheckpoint(playerid);
            SetVehicleToRespawn(MyPricep[playerid]);
            Checkpoint[playerid] = 0;
            return 1;
        }
        if (GetVehicleTrailer(GetPlayerVehicleID(playerid)) != MyPricep[playerid])
        {
            SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]: {FF0000}Âû ïîïûòàëèñü îáìàíóòü è äîñòàâèëè íå ñâîé ãðóç!");
            DisablePlayerCheckpoint(playerid);
            SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
            Checkpoint[playerid] = 0;
            return 1;
        }
        DisablePlayerCheckpoint(playerid);
        TogglePlayerControllable(playerid, false);
        SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFF00} Ïîäîæäèòå êàêîå-òî âðåìÿ, ïîêà ðàçãðóçÿò ôóðó!");
        SetTimerEx("RazgruzFurui", 15000, false, "i", playerid);
    }
    else if (Checkpoint[playerid] == 2)
    {
        if (IsPlayerInAnyVehicle(playerid))
        {
            if (!IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
            {
                SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FF0000} Âû ïîòåðÿëè ïðèöåï!");
                DisablePlayerCheckpoint(playerid);
                Checkpoint[playerid] = 0;
                SetVehicleToRespawn(MyPricep[playerid]);
                return 1;
            }
            if (GetVehicleTrailer(GetPlayerVehicleID(playerid)) != MyPricep[playerid])
            {
                SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]: {FF0000}Âû ïîïûòàëèñü îáìàíóòü è äîñòàâèëè íå ñâîé ãðóç!");
                DisablePlayerCheckpoint(playerid);
                SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
                Checkpoint[playerid] = 0;
                return 1;
            }
            new zarplata = 150000 + random(100000);
            new string[144];
            format(string, sizeof(string), "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFFFF} Âû äîñòàâèëè ãðóç è ïîëó÷èëè {CCFF00}$%d", zarplata);
            SendClientMessage(playerid, COLOR_VIOLET, string);
            MoneyK(playerid, zarplata);
            Checkpoint[playerid] = 0;
            DisablePlayerCheckpoint(playerid);
            SetVehicleToRespawn(GetVehicleTrailer(GetPlayerVehicleID(playerid)));
        }
    }
    return 1;
}

fpub:RazgruzFurui(playerid)
{
    TogglePlayerControllable(playerid, true);
    SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{CCFF00} Ðàçãðóçêà ôóðû çàâåðøåíà...");
    SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]:{FFFFFF} Âåðíèòå ïðèöåï îáðàòíî ãäå âçÿëè, òàì æå âàì âûäàäóò çàðïëàòó çà ðåéñ");
    Checkpoint[playerid] = 2;
    SetPlayerCheckpoint(playerid, -0.8136, -249.4456, 5.0401, 8.0);
    return true;
}

public OnPlayerLeaveCheckpoint(playerid)
{
    return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
    if (GetPVarInt(playerid, "chekpoint_fire") == 1)
    {
        PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
        SetPVarInt(playerid, "on_zone", 1);
        DeletePVar(playerid, "chekpoint_fire");
        DisablePlayerRaceCheckpoint(playerid);
    }
    return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
    return 1;
}

public OnRconCommand(cmd[])
{
    return 1;
}

public OnPlayerRequestSpawn(playerid)
{
    return 1;
}

public OnObjectMoved(objectid)
{
    return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
    return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
    if (pickupid == drak)
    {
        Teleport(playerid, 2016.1156, 1017.1541, 996.8750, 0, 10, false, 0, false);
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû âîøëè â Êàçèíî 4 äðàêîíà!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Íà äàííûé ìîìåíò ó íàñ äîñòóïíà èãðû Êîñòè, ââåäèòå {FFFFFF}/dice [ID èãðîêà] [ñóììà ñòàâêè]");
    }
    if (pickupid == drak_exit)
    {
        Teleport(playerid, 2024.6577, 1007.5568, 10.820, 0, 0, false, 0, false);
    }
    if (pickupid == police)
    {
        Teleport(playerid, 246.783996, 63.900199, 1003.640625, 0, 6, false, 0, false);
    }
    if (pickupid == police_exit)
    {
        Teleport(playerid, 1552.8809, -1675.0687, 16.1953, 0, 0, false, 0, false);
    }
    if (pickupid == juzzi) //â äæèçè
    {
        Teleport(playerid, -2640.762939, 1406.682006, 906.460937, 0, 3, false, 0, false);
    }
    if (pickupid == juzzi_exit) //èç äæèçè
    {
        Teleport(playerid, -2624.3772, 1409.6277, 7.0938, 0, 0, false, 0, false);
    }
    if (pickupid == mayak[0]) //Íà ìàÿê
    {
        Teleport(playerid, 156.7651, -1951.8878, 47.8750, 0, 0, false, 0, false);
    }
    if (pickupid == mayak[1]) //Ñ ìàÿêà
    {
        Teleport(playerid, 154.1349, -1943.0841, 3.7734, 0, 0, false, 0, false);
    }

    if (pickupid == MoneyBagPickup) //Çàêëàäêè
    {
        new string[256], money = MoneyBagCash;
        switch (random(3))
        {
            case 0: //Ïîéìàëè ìåíòû è ïîñàäèëè â äåìîðãàí
            {
                format(string, sizeof(string), "[Treasure] {FFFFFF}Èãðîê {CCFF00}%s{FFFFFF} ñïàëèëñÿ ñ çàêëàäêîé â {CCFF00}%s{FFFFFF}. Ñðîê òþðüìû: 5 ìèíóò!", PlayerInfo[playerid][pName], MoneyBagLocation);
                MoneyBagFound = 1;
                SendClientMessageToAll(COLOR_VIOLET, string);
                DestroyPickup(MoneyBagPickup);

                Prison[playerid] = gettime() + (60 * 5);
                new timemute = gettime() + (60 * 5);
                mysql_format(ServerDB, string, sizeof(string), "INSERT INTO `prisonlist` (`IDDB`, `getprison`, `endprison`, `admin`, `reason`, `leavetime`) VALUES ('%d','%d','%d','SYSTEM','Ñïàëèëñÿ ñ çàêëàäêîé','0')", PlayerInfo[playerid][pMID], gettime(), timemute);
                mysql_tquery(ServerDB, string, "", "");
                Teleport(playerid, 1104.6355, 1098.7548, 1098.0000, 0, 0, false, 88.7659, true);
                prisontimer[playerid] = SetTimerEx("CheckPrison", 5000, false, "i", playerid);
                ResetPlayerWeapons(playerid);

                KillTimer(Timer[1]);
                Timer[1] = SetTimer("MoneyBag", MB_DELAY, true);
                MoneyBag();
            }
            case 1: //ïîòåðÿë â ïîáåãå
            {
                format(string, sizeof(string), "[Treasure] {CCFF00}%s{FFFFFF} óáåãàÿ îò ìåíòîâ îáðîíèë êëàä! Ìåñòî: {CCFF00}%s", PlayerInfo[playerid][pName], MoneyBagLocation);
                MoneyBagFound = 1;
                SendClientMessageToAll(COLOR_VIOLET, string);
                DestroyPickup(MoneyBagPickup);
                KillTimer(Timer[1]);
                Timer[1] = SetTimer("MoneyBag", MB_DELAY, true);
                MoneyBag();
            }
            case 2: //íàøåë è ïðîäàë
            {
                format(string, sizeof(string), "[Treasure] {CCFF00}%s{FFFFFF} íàøåë êëàä è ïîëó÷èë {CCFF00}$%d{FFFFFF}! Ìåñòî: {CCFF00}%s", PlayerInfo[playerid][pName], money, MoneyBagLocation);
                MoneyBagFound = 1;
                SendClientMessageToAll(COLOR_VIOLET, string);
                DestroyPickup(MoneyBagPickup);
                MoneyK(playerid, money);
                ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.0, false, false, false, false, 0);
                KillTimer(Timer[1]);
                Timer[1] = SetTimer("MoneyBag", MB_DELAY, true);
                MoneyBag();
            }
        }
    }
    return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
    return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
    return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
    return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    return 1;
}

public OnPlayerExitedMenu(playerid)
{
    return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
    return 1;
}

#define HOLDING(%0) ((newkeys & ( %0)) == ( %0))

public OnPlayerKeyStateChange(playerid, KEY:newkeys, KEY:oldkeys)
{
    if (HOLDING(KEY_FIRE) && GetPVarInt(playerid, "on_zone") == 1 && GetPVarInt(playerid, "press_fire") == 0)
    {
        new Float:object_x, Float:object_y, Float:object_z;
        GetObjectPos(object_fire[playerid], object_x, object_y, object_z);
        if (IsPlayerInRangeOfPoint(playerid, 17.0, object_x, object_y, object_z))
        {
            SetPVarInt(playerid, "press_fire", 1);
        }
    }
    else if (GetPVarInt(playerid, "on_zone") == 1 && GetPVarInt(playerid, "press_fire") == 1)
    {
        DeletePVar(playerid, "press_fire");
    }
    if (newkeys & KEY_SPRINT && newkeys & KEY_JUMP && job[playerid] == 1 && MeshokUp[playerid] == true)
    {
        MeshokUp[playerid] = false;
        if (IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
        ApplyAnimation(playerid, "CARRY", "crry_prtial", 4.0, false, false, false, false, 1, SYNC_ALL);
        SendClientMessage(playerid, COLOR_RED, "[ÃÐÓÇ×ÈÊ]: {FFFFFF}ÂÛ ÓÐÎÍÈËÈ ÌÅØÎÊ{FF0000}! {FFFFFF}Âåðíèòåñü çà íîâûì{FF0000}.");
        new randomCheck = random(5);
        SetPlayerCheckpoint(playerid, Gruz4ikCords[randomCheck][0], Gruz4ikCords[randomCheck][1], Gruz4ikCords[randomCheck][2], 2.0);
    }
    if ((newkeys & KEY:1024 && GetPVarInt(playerid, "MnMode") != 2) || (newkeys & KEY:65536 && GetPVarInt(playerid, "MnMode") == 2))
    {
        if (dmzone[playerid] != 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñèñòåìå ÄÌ èãðîâîå ìåíþ íå ðàáîòàåò! Äëÿ âûõîäÿ ñ äì ââåäèòå {CCFF00}/dmexit");
            return 1;
        }
        if (GetPlayerInterior(playerid) == 0)
        {
            for (new i; i < MAX_CREATED_HOUSE; i++)
            {
                if (HouseInfo[i][hID] < 1 || !IsPlayerInRangeOfPoint(playerid, 1.0, HouseInfo[i][hEnterCoord][0], HouseInfo[i][hEnterCoord][1], HouseInfo[i][hEnterCoord][2])) continue;
                PlayerInfo[playerid][pActionHouseID] = i;
                if (!HouseInfo[i][hOwned])
                {
                    new str[88];
                    format(str, sizeof str, "Ýòîò äîì ïðîäà¸òñÿ! Õîòèòå êóïèòü åãî çà %d$?", HouseInfo[i][hCost]);
                    ShowPlayerDialog(playerid, 9890, DIALOG_STYLE_MSGBOX, "Ìåíþ äîìà", str, "Äà", "Íåò");
                }
                else
                {
                    if (PlayerInfo[playerid][pHouseID] != HouseInfo[i][hID]) EnterHouse(playerid, i);
                    else ShowPlayerDialog(playerid, 9891, DIALOG_STYLE_LIST, "Ìåíþ äîìà", "Âîéòè\nÎòêðûòü/Çàêðûòü\nÏðîäàòü\nÑìåíèòü èíòåðüåð", "Âûáîð", "Îòìåíà");
                }
                return 1;
            }
        }
        else
        {
            if (PlayerInfo[playerid][pHouseChangeInt] >= 0)
            {
                new pInt = GetPlayerInterior(playerid);
                for (new i, s = sizeof(gHousesSetting); i < s; i++)
                {
                    if (pInt != gHousesSetting[i][g_hInt] || !IsPlayerInRangeOfPoint(playerid, 1.0, gHousesSetting[i][g_hCoordX], gHousesSetting[i][g_hCoordY], gHousesSetting[i][g_hCoordZ])) continue;
                    new str[88];
                    format(str, sizeof str, "Âû õîòèòå ïðèîáðåñòè ýòîò èíòåðüåð çà %d$?", gHousesSetting[i][g_hChangeCost]);
                    ShowPlayerDialog(playerid, 9894, DIALOG_STYLE_MSGBOX, "Ñìåíà èíòåðüåðà", str, "Äà", "Íåò");
                    return 1;
                }
            }
            new pVirt = GetPlayerVirtualWorld(playerid);
            for (new i; i < MAX_CREATED_HOUSE; i++)
            {
                if (HouseInfo[i][hID] != pVirt || !IsPlayerInRangeOfPoint(playerid, 1.0, gHousesSetting[HouseInfo[i][hInt]][g_hCoordX], gHousesSetting[HouseInfo[i][hInt]][g_hCoordY], gHousesSetting[HouseInfo[i][hInt]][g_hCoordZ])) continue;

                Teleport(playerid, HouseInfo[i][hEnterCoord][0], HouseInfo[i][hEnterCoord][1], HouseInfo[i][hEnterCoord][2], 0, 0, false, 0.0000, true);
                ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[ÄÎÌ]<<", "Âû çàìîðîæåíû íà 1 ñåêóíäó!\nÇàãðóçêà îáúåêòîâ!", "OK", "");
                return 1;
            }
        }
        for (new i = 0; i < MAX_BUSSINES; i++)
        {
            if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]))
            {
                if (BI[i][BuyID] == 0)
                {
                    ShowPlayerDialog(playerid, 4900, DIALOG_STYLE_MSGBOX, ">>[ÁÈÇÍÅÑ]<<", "Õîòèòå êóïèòü áèçíåñ?", "ÂÛÁÎÐ", "ÎÒÌÅÍÀ");
                }
                else
                {
                    if (BI[i][BuyID] != PlayerInfo[playerid][pMID])
                    {
                        ShowPlayerDialog(playerid, 4902, DIALOG_STYLE_LIST, ">>[ÁÈÇÍÅÑ]<<", "Âîéòè âíóòðü\nÇàïðîñèòü âûêóï\nÈíôîðìàöèÿ î íàêîïëåíèÿõ", "ÎÊ", "");
                    }
                    else
                    {
                        ShowPlayerDialog(playerid, 4901, DIALOG_STYLE_LIST, ">>[ÁÈÇÍÅÑ]<<", "Âîéòè âíóòðü\nÏðîäàòü\nÇàáðàòü äîõîä", "ÂÛÁÎÐ", "ÎÒÌÅÍÀ");
                    }
                }
                return 1;
            }
            if (IsPlayerInRangeOfPoint(playerid, 1.0, -1832.1133, 123.8611, 15.1200))
            {
                if (job[playerid] == 0) ShowPlayerDialog(playerid, 4311, DIALOG_STYLE_MSGBOX, ">>[Ïîæàðíèê]<<", "Âû õîòèòå óñòðîèòüñÿ íà ðàáîòó ïîæàðíèêà?", "ÄÀ", "ÍÅÒ");
                else if (job[playerid] == 2) ShowPlayerDialog(playerid, 4312, DIALOG_STYLE_MSGBOX, ">>[Ïîæàðíèê]<<", "Âû õîòèòå çàâåðøèòü ðàáîòó?", "ÄÀ", "ÍÅÒ");
                return 1;
            }
        }
        if (IsPlayerInRangeOfPoint(playerid, 1.0, Gruz4ikCords[6][0], Gruz4ikCords[6][1], Gruz4ikCords[6][2])) //ðàáîòû
        {
            if (job[playerid] == 0) ShowPlayerDialog(playerid, 2503, DIALOG_STYLE_MSGBOX, ">>[ÃÐÓÇ×ÈÊ]<<", "Âû äåéñòâèòåëüíî õîòèòå óñòðîèòüñÿ íà ðàáîòó ãðóç÷èêà?", "ÄÀ", "ÎÒÌÅÍÀ");
            if (job[playerid] == 1) ShowPlayerDialog(playerid, 2504, DIALOG_STYLE_MSGBOX, ">>[ÃÐÓÇ×ÈÊ]<<", "Âû õîòèòå çàâåðøèòü ðàáîòó ãðóç÷èêà è ïîëó÷èòü ñâîþ çàðàáîòàííóþ äîëþ?", "ÄÀ", "ÎÒÌÅÍÀ");
            return 1;
        }
        if (IsPlayerInRangeOfPoint(playerid, 1.0, -2926.0906, 2747.6855, 907.7678)) //Ëàáèðèíò
        {
            if (PlayerInfo[playerid][Labirint1] > gettime())
            {
                Events[playerid][0] = false;
                SpawnPlayer(playerid);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñåãîäíÿ âû óæå ïîëó÷àëè ïðèç çà ëàáèðèíò, çàõîäèòå ÷åðåç ñóòêè!");
            }
            else
            {
                new str[256];
                format(str, sizeof(str), ""NS" {CCFF00}%s[%d] {FFFFFF}ïðîø¸ë ëàáèðèíò è ïîëó÷èë ïðèç!", PlayerInfo[playerid][pName], playerid);
                SendClientMessageToAll(COLOR_VIOLET, str);
                MoneyK(playerid, 50000);
                PlayerInfo[playerid][Labirint1] = gettime() + 1 * 86400;
                Events[playerid][0] = false;
                SpawnPlayer(playerid);
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `Labirint1`='%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][Labirint1], PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, str, "", "");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çà ïðîõîæäåíèå ëàáèðèíòà âû ïîëó÷àåòå {CCFF00}$50.000");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}×òîáû ïîëó÷èòü ïðèç ïîâòîðíî, ïðèõîäèòå ÷åðåç ñóòêè!");
            }
            return 1;
        }
        PlayerDialogMenu(playerid);
    }
    if ((newkeys & KEY:512 && GetPVarInt(playerid, "MnMode") != 2) || (newkeys & KEY:65536 && GetPVarInt(playerid, "MnMode") == 2))
    {
        if (IsPlayerInAnyVehicle(playerid))
        {
            PlayerDialogMenu(playerid);
        }
    }
    if (newkeys == KEY:1 || newkeys == KEY:9 || newkeys == KEY:33 && oldkeys != KEY:1 || oldkeys != KEY:9 || oldkeys != KEY:33)
    {
        new car = GetPlayerVehicleID(playerid);
        new Model5 = GetVehicleModel(car);
        switch (Model5)
        {
            case 446, 432, 448, 452, 424, 453, 454, 461, 462, 463, 468, 471, 430, 472, 449, 473, 481, 484, 493, 495, 509, 510, 521, 538, 522, 523, 532, 537, 570, 581, 586, 590, 569, 595, 604, 611:
                return 0;
        }
        AddVehicleComponent(GetPlayerVehicleID(playerid), 1010);
    }

    if (newkeys == KEY_NO) //Ôëèï ïî êíîïêå N
    {
        if (AI[playerid][aSpectateID] == INVALID_PLAYER_ID)
        {
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
            {
                new Float:angle;
                GetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
                SetVehicleZAngle(GetPlayerVehicleID(playerid), angle);
            }
        }
    }
    return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
    return 1;
}

public OnPlayerUpdate(playerid)
{
    new Float:Coords[3] =
    {
        -2229.9729,
            -1743.9297,
            481.3593
        };
    if (!IsPlayerInRangeOfPoint(playerid, 20000.0, 0.0, 0.0, 0.0))
    {
        SendClientMessage(playerid, COLOR_RED, "[Anti-Cheat]: {FFCC00}Âàñ ïîïûòàëèñü êèíóòü â çàãðóçêó.");
        SetPlayerPos(playerid, Coords[0], Coords[1], Coords[2]);
        BugTicks[playerid]++;
        if (BugTicks[playerid] > 500) return SpawnPlayer(playerid);
    }
    else BugTicks [playerid] = 0;

    for (new i = 0; i < MAX_CREATED_HOUSE; i++)
    {
        if (IsPlayerInRangeOfPoint(playerid, 1.0, HouseInfo[i][hEnterCoord][0], HouseInfo[i][hEnterCoord][1], HouseInfo[i][hEnterCoord][2]))
        {
            if (GetPVarInt(playerid, "MnMode") == 1)
            {
                GameTextForPlayer(playerid, "~y~Press ~G~ALT", 1000, 1);
            }
            else
            {
                GameTextForPlayer(playerid, "~y~Press ~G~Y", 1000, 1);
            }
        }
    }

    for (new i = 0; i < MAX_BUSSINES; i++)
    {
        if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]))
        {
            if (GetPVarInt(playerid, "MnMode") == 1)
            {
                GameTextForPlayer(playerid, "~y~Press ~G~ALT", 1000, 1);
            }
            else
            {
                GameTextForPlayer(playerid, "~y~Press ~G~Y", 1000, 1);
            }
        }
    }

    if (IsPlayerInRangeOfPoint(playerid, 1.0, Gruz4ikCords[6][0], Gruz4ikCords[6][1], Gruz4ikCords[6][2]) || //ãðóç÷èê
            IsPlayerInRangeOfPoint(playerid, 1.0, -2926.0906, 2747.6855, 907.7678) ||//Ëàáèðèíò
            IsPlayerInRangeOfPoint(playerid, 1.0, -1832.1133, 123.8611, 15.1200)) //ïîæàðíèê
    {
        if (GetPVarInt(playerid, "MnMode") == 1)
        {
            GameTextForPlayer(playerid, "~y~Press ~G~ALT", 1000, 1);
        }
        else
        {
            GameTextForPlayer(playerid, "~y~Press ~G~Y", 1000, 1);
        }
    }
    return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
    return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
    return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
    return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
    return 1;
}

fpub:Freeze1sec(playerid)
{
    TogglePlayerControllable(playerid, true);
}

fpub:OnPlayerRegistered(playerid, pass[])
{
    new string[1024];
    for (new i; i < 26; i++) gPlayerWeapon[playerid][i] = WEAPON_FIST;
    SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Âû óñïåøíî çàðåãèñòðèðîâàëèñü!");
    SetPVarInt(playerid, "PlMon", 50000);
    PlayerInfo[playerid][pDriftExp] = 5;
    printf("Èãðîê %s [%d] --> (ðåãèñòðàöèÿ) .", PlayerInfo[playerid][pName], playerid);

    mysql_format(ServerDB, string, sizeof(string), "SELECT `Pass`,`Hash` FROM `players` WHERE `PlayerName` = '%e' LIMIT 1", PlayerInfo[playerid][pName]);
    mysql_tquery(ServerDB, string, "CheckRegister", "d", playerid);
    return 1;
}

fpub:OnPlayerLogin(playerid)
{
    if (cache_num_rows() > 0)
    {
        new string[256];
        new dop1 = 0;
        cache_get_value_int(0, "PID", PlayerInfo[playerid][pMID]);
        cache_get_value_int(0, "Money", dop1);
        SetPVarInt(playerid, "PlMon", dop1);
        dop1 = 0;
        cache_get_value_int(0, "Kills", PlayerInfo[playerid][pKills]);
        cache_get_value_int(0, "MinLog", PlayerInfo[playerid][pMinlog]);
        cache_get_value_int(0, "Deaths", PlayerInfo[playerid][pDeaths]);
        cache_get_value_int(0, "Combo", PlayerInfo[playerid][pCombo]);
        cache_get_value_int(0, "RecPM", PlayerInfo[playerid][pRecPM]);
        cache_get_value_int(0, "TDReg", PlayerInfo[playerid][pTDReg]);
        cache_get_value_int(0, "DriftExp", PlayerInfo[playerid][pDriftExp]);
        cache_get_value_int(0, "ExpRecord", PlayerInfo[playerid][pExpRecord]);
        cache_get_value_int(0, "houseid", PlayerInfo[playerid][pHouseID]);
        cache_get_value_int(0, "VIP", PlayerInfo[playerid][pVIP]);
        cache_get_value_int(0, "Warns", PlayerInfo[playerid][pWarns]);
        cache_get_value_int(0, "keymenu", dop1);
        cache_get_value_int(0, "Skin", PlayerInfo[playerid][pSkin]);
        SetPVarInt(playerid, "MnMode", dop1);
        cache_get_value_int(0, "ColorPlayer", PlayerInfo[playerid][pColorNickname]);
        cache_get_value_int(0, "SpawnChange", PlayerInfo[playerid][pSpawnChange]);
        cache_get_value_int(0, "sex", PlayerInfo[playerid][pSex]);

        cache_get_value_float(0, "vsx", PlayerInfo[playerid][pvsx]);
        cache_get_value_float(0, "vsy", PlayerInfo[playerid][pvsy]);
        cache_get_value_float(0, "vsz", PlayerInfo[playerid][pvsz]);
        cache_get_value_float(0, "vsa", PlayerInfo[playerid][pvsa]);

        //äëÿ áîëüøèõ ïðèçîâ
        cache_get_value_int(0, "Labirint1", PlayerInfo[playerid][Labirint1]);
        cache_get_value_int(0, "TrackMania1", PlayerInfo[playerid][TrackMania1]);
        cache_get_value_int(0, "TrackMania2", PlayerInfo[playerid][TrackMania2]);
        cache_get_value_int(0, "TrackMania3", PlayerInfo[playerid][TrackMania3]);

        new pWeapon[26 * 11], pWeaponEx[26][11];
        cache_get_value_name(0, "weapons", pWeapon, 26 * 11);
        split(pWeapon, pWeaponEx, '|');
        for (new i; i < 26; i++) gPlayerWeapon[playerid][i] = WEAPON:strval(pWeaponEx[i]);

        cache_get_value_int(0, "Gang", PlayerInfo[playerid][pGang]);
        cache_get_value_int(0, "GangLvl", PlayerInfo[playerid][pGangLvl]);

        printf("Èãðîê %s --> (ëîãèðîâàíèå) .", PlayerInfo[playerid][pName]);
        gPlayerLogged[playerid] = true;

        new str[128];
        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `bans` WHERE `NameBan` = '%e' LIMIT 1", PlayerInfo[playerid][pName]);
        mysql_tquery(ServerDB, str, "CheckBann", "d", playerid);

        for (new i; i < sizeof(RandomSpawns); i++)
        {
            if (GetPVarInt(playerid, "MnMode") == 1)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}ALT/2(â ìàøèíå)\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
            else if (GetPVarInt(playerid, "MnMode") == 2)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}Y\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
            SpawnTextDraw[playerid][i] = CreatePlayer3DTextLabel(playerid, string, 0x8F30E4AA, RandomSpawns[i][0], RandomSpawns[i][1], RandomSpawns[i][2], 20.0);
        }

        if (PlayerInfo[playerid][pSex] == 0)
        {
            ShowPlayerDialog(playerid, 300, DIALOG_STYLE_MSGBOX, "{FFFF00}>>[ÂÛÁÎÐ ÏÎËÀ]<<", "{FFFF00}Âûáåðèòå ïîë ñâîåãî ïåðñîíàæà", "{CCFF00}Ìóæñêîé", "{FF00FF}Æåíñêèé");
            PlayerInfo[playerid][pSkin] = -1;
        }
        else if (GetPVarInt(playerid, "MnMode") == 0)
        {
            ShowPlayerDialog(playerid, 302, DIALOG_STYLE_MSGBOX, "{8F30E4}>>[Âûáîð êëàâèøè ìåíþ]<<", "{FFFFFF}Âûáåðèòå, íà êàêóþ êíîïêó áóäåòå îòêðûâàòü {8F30E4}ìåíþ {FFFFFF}è {8F30E4}àêòèâèðîâàòü ïèêàïû", "{CCFF00}ALT/2", "{FF0000}Y");
        }

        SetTimerEx("SpawnLogin", 300, false, "i", playerid);
    }
    else
    {
        Kick(playerid);
    }
    return 1;
}

fpub:SpawnLogin(playerid)
{
    gPlayerSpawned[playerid] = true;
    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Æåëàåì Âàì ïðèÿòíîé èãðû {CCFF00}:3");
    StopAudioStreamForPlayer(playerid);

    if (PlayerInfo[playerid][pVIP] > 0)
    {
        if (PlayerInfo[playerid][pColorNickname] > 0)
        {
            ColorPlay[playerid] = ColNick[PlayerInfo[playerid][pColorNickname] - 1];
            SetPlayerColor(playerid, ColorPlay[playerid]);
            for (new i = 0; i < MAX_PLAYERS; i++)
            {
                SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
            }
        }
    }
    else
    {
        if (PlayerInfo[playerid][pColorNickname] > 0)
        {
            if (PlayerInfo[playerid][pGang] == 0)
            {
                ColorPlay[playerid] = ColNick[PlayerInfo[playerid][pColorNickname] - 1];
                SetPlayerColor(playerid, ColorPlay[playerid]);
                for (new i = 0; i < MAX_PLAYERS; i++)
                {
                    SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
                }
            }
            else
            {
                ColorPlay[playerid] = HexToInt(GangInfo[PlayerInfo[playerid][pGang]][gColor]);
                SetPlayerColor(playerid, HexToInt(GangInfo[PlayerInfo[playerid][pGang]][gColor]));
                for (new i = 0; i < MAX_PLAYERS; i++)
                {
                    SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
                }
            }
        }
    }

    /*	if(PlayerInfo[playerid][pColorNickname] > 0){
    		ColorPlay[playerid] = ColNick[PlayerInfo[playerid][pColorNickname]-1];
    		SetPlayerColor(playerid, ColorPlay[playerid]);
    		for(new i=0;i<MAX_PLAYERS;i++)
    		{
    			SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
    		}
    	}else if(PlayerInfo[playerid][pGang] > 0){
    		ColorPlay[playerid] = HexToInt(GangInfo[PlayerInfo[playerid][pGang]][gColor]);
    		SetPlayerColor(playerid, HexToInt(GangInfo[PlayerInfo[playerid][pGang]][gColor]));
    		for(new i=0;i<MAX_PLAYERS;i++)
    		{
    			SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
    		}
    	}*/

    SpawnPlayer(playerid);

    return 1;
}

fpub:CheckLoginPrison(playerid)
{
    new timeprison, timeleave, adminprison[MAX_PLAYER_NAME], reason[128], str[256];
    if (cache_num_rows() > 0)
    {
        cache_get_value_int(0, "endprison", timeprison);
        cache_get_value_int(0, "leavetime", timeleave);
        cache_get_value_name(0, "admin", adminprison, MAX_PLAYER_NAME);
        cache_get_value_name(0, "reason", reason, 128);
        Prison[playerid] = gettime() + (timeprison - timeleave);
        if (Prison[playerid] > gettime())
        {
            format(str, sizeof(str), "[JAIL]: {FFFFFF}Èãðîê {CCFF00}%s[%d] {FFFFFF}ðàíåå áûë ïîñàæåí â òþðüìó. Âîçâðàùåíèå. Äî îêîí÷àíèÿ: {CCFF00}%d {FFFFFF}ñåêóíä.", PlayerInfo[playerid][pName], playerid, Prison[playerid] - gettime());
            SendClientMessageToAll(COLOR_VIOLET, str);
            format(str, sizeof(str), "[JAIL]: {FFFFFF}Â òþðüìó ñàäèë àäìèí: {CCFF00}%s. {FFFFFF}Ïðè÷èíà: {CCFF00}%s", adminprison, reason);
            SendClientMessageToAll(COLOR_VIOLET, str);

            if (Prison[playerid] > gettime())
            {
                Teleport(playerid, 1104.6355, 1098.7548, 1098.0000, 0, 0, false, 88.7659);
                prisontimer[playerid] = SetTimerEx("CheckPrison", 5000, false, "i", playerid);
            }
        }
        else
        {
            mysql_format(ServerDB, str, sizeof(str), "DELETE FROM `prisonlist` WHERE `IDDB`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, str, "", "");
        }
    }
    return 1;
}

fpub:CheckBann(playerid)
{
    new ban, unban, who[24], reason[64], str[512];
    if (cache_num_rows() > 0)
    {
        cache_get_value_int(0, "UnbanDate", unban);
        cache_get_value_int(0, "BanDate", ban);
        cache_get_value_name(0, "Who", who, 24);
        cache_get_value_name(0, "Reason", reason, 64);
        if (unban > gettime())
        {
            format(str, sizeof(str), "{FF0000}ÂÛ ÁÛËÈ ÇÀÁÀÍÅÍÛ!!!\n{FFFFFF}Äàòà áàíà: %s\nÄàòà ðàçáàíà: %s\nÇàáàíèë: %s\nÏðè÷èíà: %s\n\n{FFFFFF}Âû ìîæåòå ïîäàòü çàÿâëåíèå ïî ðàçáàíó â îáñóæäåíèÿõ ãðóïïû\n{CCFF00}"VK_G"", date("%dd/%mm/%yyyy â %hh:%ii:%ss", ban), date("%dd/%mm/%yyyy â %hh:%ii:%ss", unban), who, reason);
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[ÂÛ ÇÀÁÀÍÅÍÛ!]<<", str, "Ok", "");

            Kick(playerid);
        }
        else
        {
            mysql_format(ServerDB, str, sizeof(str), "DELETE FROM `bans` WHERE `NameBan`='%e' LIMIT 1", PlayerInfo[playerid][pName]);
            mysql_tquery(ServerDB, str, "", "");
        }
    }
    else
    {
        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `bans` WHERE `IP` = '%e' LIMIT 1", PlayerInfo[playerid][pIPAdr]);
        mysql_tquery(ServerDB, str, "CheckBannTwo", "d", playerid);
    }
    return 1;
}

fpub:CheckBannTwo(playerid)
{
    new ban, unban, who[24], reason[64], str[512];
    if (cache_num_rows() > 0)
    {
        cache_get_value_int(0, "UnbanDate", unban);
        cache_get_value_int(0, "BanDate", ban);
        cache_get_value_name(0, "Who", who, 24);
        cache_get_value_name(0, "Reason", reason, 64);
        if (unban > gettime())
        {
            format(str, sizeof(str), "{FF0000}ÂÛ ÁÛËÈ ÇÀÁÀÍÅÍÛ!!!\n{FFFFFF}Äàòà áàíà: %s\nÄàòà ðàçáàíà: %s\nÇàáàíèë: %s\nÏðè÷èíà: %s\n\n{FFFFFF}Âû ìîæåòå ïîäàòü çàÿâëåíèå ïî ðàçáàíó â îáñóæäåíèÿõ ãðóïïû\n{CCFF00}"VK_G"", date("%dd/%mm/%yyyy â %hh:%ii:%ss", ban), date("%dd/%mm/%yyyy â %hh:%ii:%ss", unban), who, reason);
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[ÂÛ ÇÀÁÀÍÅÍÛ!]<<", str, "Ok", "");

            Kick(playerid);
        }
        else
        {
            mysql_format(ServerDB, str, sizeof(str), "DELETE FROM `bans` WHERE `NameBan`='%e' LIMIT 1", PlayerInfo[playerid][pName]);
            mysql_tquery(ServerDB, str, "", "");
        }
    }
    else
    {
        mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `ipbans` WHERE `IP` = '%s' LIMIT 1", PlayerInfo[playerid][pIPAdr]);
        mysql_tquery(ServerDB, str, "CheckBanIP", "d", playerid);
    }
    return 1;
}


fpub:CheckBanIP(playerid)
{

    new ban, unban, who[24], reason[144], str[512];
    if (cache_num_rows() > 0)
    {
        cache_get_value_int(0, "DATEUNBAN", unban);
        cache_get_value_int(0, "DATEBAN", ban);
        cache_get_value_name(0, "ADMINBAN", who, MAX_PLAYER_NAME);
        cache_get_value_name(0, "REASON", reason, 144);
        if (unban > gettime())
        {
            format(str, sizeof(str), "{FF0000}ÂÀØ IP ÁÛË ÇÀÁÀÍÅÍÛ!!!\n{FFFFFF}Äàòà áàíà: %s\nÄàòà ðàçáàíà: %s\nÇàáàíèë: %s\nÏðè÷èíà: %s\n\n{FFFFFF}Âû ìîæåòå ïîäàòü çàÿâëåíèå ïî ðàçáàíó â îáñóæäåíèÿõ ãðóïïû\n{CCFF00}"VK_G"", date("%dd/%mm/%yyyy â %hh:%ii:%ss", ban), date("%dd/%mm/%yyyy â %hh:%ii:%ss", unban), who, reason);
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[ÂÛ ÇÀÁÀÍÅÍÛ!]<<", str, "Ok", "");

            Kick(playerid);
        }
        else
        {
            mysql_format(ServerDB, str, sizeof(str), "DELETE FROM `ipbans` WHERE `IP`='%s' LIMIT 1", PlayerInfo[playerid][pIPAdr]);
            mysql_tquery(ServerDB, str, "", "");
        }
    }
    else
    {
        format(str, sizeof(str), ""MNS" {FFFFFF}Èãðîê {8F30E4}%s {FFFFFF}ïðèñîåäèíèëñÿ ê íàì!", PlayerInfo[playerid][pName]);
        foreach (Player, i)
        {
            if (i != playerid)SendClientMessage(i, COLOR_VIOLET, str);
        }
        gPlayerLogged[playerid] = true;
    }
    return 1;
}

fpub:CheckMuted(playerid)
{
    new timeleave, timemute, adminmute[MAX_PLAYER_NAME], reason[128];
    new str[256];
    if (cache_num_rows() > 0)
    {
        cache_get_value_int(0, "endmute", timemute);
        cache_get_value_int(0, "leavetime", timeleave);
        cache_get_value_name(0, "admin", adminmute, MAX_PLAYER_NAME);
        cache_get_value_name(0, "reason", reason, 128);
        if (timemute > timeleave)
        {
            Muted[playerid] = gettime() + (timemute - timeleave);
            format(str, sizeof(str), "[MUTE]: {FFFFFF}Èãðîê {CCFF00}%s[%d] {FFFFFF}ðàíåå áûë çàìó÷åí. Âîçâðàùåíèå ìóòà. Äî îêîí÷àíèÿ: {CCFF00}%d {FFFFFF}ñåêóíä.", PlayerInfo[playerid][pName], playerid, Muted[playerid] - gettime());
            SendClientMessageToAll(COLOR_VIOLET, str);
            format(str, sizeof(str), "[MUTE]: {FFFFFF}Ìóò âûäàâàë àäìèí: {CCFF00}%s. {FFFFFF}Ïðè÷èíà: {CCFF00}%s", adminmute, reason);
            SendClientMessageToAll(COLOR_VIOLET, str);
        }
        else
        {
            mysql_format(ServerDB, str, sizeof(str), "DELETE FROM `mutedlist` WHERE `IDDB`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, str, "", "");
        }
    }
    return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    new string[256], strdln[5000];
    switch (dialogid)
    {
        case 4311:
        {
            if (!response)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû îòêàçàëèñü îò ðàáîòû ïîæàðíîãî{FF0000}!");
            }
            else
            {
                SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Ñàäèòåñü â ñëóæåáíóþ ìàøèíó äëÿ ïîëó÷åíèÿ äàëüíåéøèõ óêàçàíèé{CCFF00}!");
                SetPlayerSkin(playerid, 277);
                job[playerid] = 2;
            }
            return 1;
        }
        case 4312:
        {
            if (!response) return 1;
            job[playerid] = 0;
            DestroyObject(object_fire[playerid]);
            DisablePlayerRaceCheckpoint(playerid);
            SendClientMessage(playerid, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Âû óøëè ñ ðàáîòû ïîæàðíèêà{CCFF00}!");
            SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
            return 1;
        }

        // ñèñòåìà äîìîâ. by Uporoty
        case 9890:
        {
            if (!response) return 1;
            new hid = PlayerInfo[playerid][pActionHouseID];
            if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1 || HouseInfo[hid][hOwned]) return 1;
            if (GetPVarInt(playerid, "PlMon") < HouseInfo[hid][hCost]) return SendClientMessage(playerid, -1, "Ó Âàñ íå õâàòàåò äåíåã!");
            if (PlayerInfo[playerid][pHouseID]) return SendClientMessage(playerid, -1, "Ó Âàñ óæå åñòü äîì!");
            MoneyK(playerid, -HouseInfo[hid][hCost]);
            PlayerInfo[playerid][pHouseID] = HouseInfo[hid][hID];
            HouseInfo[hid][hOwned] = true;
            format(HouseInfo[hid][hOwner], MAX_PLAYER_NAME, PlayerInfo[playerid][pName]);
            UpdateHouseInfo(hid);
            SaveHouse(hid);

            new query[100];
            mysql_format(ServerDB, query, sizeof(query), "UPDATE `players` SET `houseid` = '%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][pHouseID], PlayerInfo[playerid][pName]);
            mysql_tquery(ServerDB, query, "", "");
        }
        case 9891:
        {
            if (!response) return 1;
            new hid = PlayerInfo[playerid][pActionHouseID];
            if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1 || !HouseInfo[hid][hOwned] || HouseInfo[hid][hID] != PlayerInfo[playerid][pHouseID]) return 1;
            switch (listitem)
            {
                case 0: EnterHouse(playerid, hid, false);
                case 1:
                {
                    if (HouseInfo[hid][hLocked])
                    {
                        HouseInfo[hid][hLocked] = false;
                        SendClientMessage(playerid, -1, "Âû îòêðûëè äâåðè äîìà!");
                    }
                    else
                    {
                        HouseInfo[hid][hLocked] = true;
                        SendClientMessage(playerid, -1, "Âû çàêðûëè äâåðè äîìà!");
                    }

                    new query[100];
                    mysql_format(ServerDB, query, sizeof(query), "UPDATE `houses` SET `lock`='%d' WHERE `id`='%d' LIMIT 1", HouseInfo[hid][hLocked], HouseInfo[hid][hID]);
                    mysql_tquery(ServerDB, query, "", "");
                }
                case 2:
                {
                    new cost = floatround((float(HouseInfo[hid][hCost]) / 4.0) * 3.0), str[88];
                    format(str, sizeof str, "Âû óâåðåíû, ÷òî õîòèòå ïðîäàòü äîì çà %d$?", cost);
                    ShowPlayerDialog(playerid, 9892, DIALOG_STYLE_MSGBOX, "Ìåíþ äîìà", str, "Äà", "Íåò");
                }
                case 3:
                {
                    new str[sizeof(gHousesSetting) * 40];
                    for (new i, s = sizeof(gHousesSetting); i < s; i++)
                        format(str, sizeof str, "%sÈíòåðüåð ¹ %d [ %d$ ]\n", str, i + 1, gHousesSetting[i][g_hChangeCost]);
                    ShowPlayerDialog(playerid, 9893, DIALOG_STYLE_LIST, "Âûáåðèòå èíòåðüåð äëÿ ïðîñìîòðà", str, "Âûáðàòü", "Îòìåíà");
                }
            }
        }
        case 9892:
        {
            if (!response) return 1;
            new hid = PlayerInfo[playerid][pActionHouseID];
            if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1 || !HouseInfo[hid][hOwned] || HouseInfo[hid][hID] != PlayerInfo[playerid][pHouseID]) return 1;
            new cost = floatround((float(HouseInfo[hid][hCost]) / 4.0) * 3.0);
            new str[100];
            format(str, sizeof str, "Âû ïðîäàëè ñâîé äîì çà %d$", cost);
            SendClientMessage(playerid, -1, str);
            MoneyK(playerid, cost);
            PlayerInfo[playerid][pHouseID] = 0;
            ClearHouse(hid);

            new query[100];
            mysql_format(ServerDB, query, sizeof(query), "UPDATE `players` SET `houseid` = '%d' WHERE `PlayerName`='%e' LIMIT 1", PlayerInfo[playerid][pHouseID], PlayerInfo[playerid][pName]);
            mysql_tquery(ServerDB, query, "", "");
        }
        case 9893:
        {
            if (!response) return 1;
            new hid = PlayerInfo[playerid][pActionHouseID];
            if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1 || !HouseInfo[hid][hOwned] || HouseInfo[hid][hID] != PlayerInfo[playerid][pHouseID]) return 1;
            SetPlayerVirtualWorld(playerid, HouseInfo[hid][hID]);
            SetPlayerInterior(playerid, gHousesSetting[listitem][g_hInt]);
            SetPlayerPos(playerid, gHousesSetting[listitem][g_hCoordX], gHousesSetting[listitem][g_hCoordY], gHousesSetting[listitem][g_hCoordZ]);
            PlayerInfo[playerid][pHouseChangeInt] = listitem;
        }
        case 9894:
        {
            new change_int = PlayerInfo[playerid][pHouseChangeInt];
            PlayerInfo[playerid][pHouseChangeInt] = -1;
            new hid = PlayerInfo[playerid][pActionHouseID];
            if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1 || !HouseInfo[hid][hOwned] || HouseInfo[hid][hID] != PlayerInfo[playerid][pHouseID]) return 1;
            SetPlayerVirtualWorld(playerid, 0);
            SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2]);
            if (!response) return 1;
            if (GetPVarInt(playerid, "PlMon") < gHousesSetting[change_int][g_hChangeCost]) return SendClientMessage(playerid, -1, "Ó Âàñ íå õâàòàåò äåíåã!");
            if (HouseInfo[hid][hKlass] != gHousesSetting[change_int][g_hKlass]) return SendClientMessage(playerid, -1, "Âû íå ìîæåòå ïðèîáðåñòè äàííûé èíòåðüåð. Âàø êëàññ äîìà íå ñîîòâåòñòâóåò");
            MoneyK(playerid, -gHousesSetting[change_int][g_hChangeCost]);
            SendClientMessage(playerid, -1, "Èíòåðüåð óñïåøíî êóïëåí!");
            HouseInfo[hid][hInt] = change_int;
            SaveHouse(hid);
        }
        // the end houses dialogs. by Uporoty
        case 1:
        {
            if (!response)
            {
                Kick(playerid);
                return 1;
            }
            if (PassControl(inputtext) == 0)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ïàðîëå ìîæíî èñïîëüçîâàòü ÒÎËÜÊÎ ëàòèíñêèå");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}ñèìâîëû: îò a äî z , îò A äî Z , è öèôðû îò 0 äî 9 !");
                ShowPlayerLoginDialog(playerid);
                return 1;
            }
            if (strlen(inputtext) < 6) return ShowPlayerLoginDialog(playerid);
            new hashed_pass[65];
            SHA256_Hash(inputtext, PlayerInfo[playerid][pHASH], hashed_pass, 65);
            if (strcmp(PlayerInfo[playerid][pKey], hashed_pass) == 0)
            {
                //ãîòîâî
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Âû óñïåøíî àâòîðèçèðîâàëèñü!");
                new query[256];
                mysql_format(ServerDB, query, sizeof(query), "SELECT * FROM `players` WHERE `PlayerName`='%s' LIMIT 1", PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, query, "OnPlayerLogin", "i", playerid);
            }
            else
            {
                //îòñîñàëè õóé
                PlayerInfo[playerid][pPodbor]++;
                if (5 - PlayerInfo[playerid][pPodbor] == 0)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Âû áûëè êèêíóòû çà ïîäáîð ïàðîëÿ!");
                    Kick(playerid);
                    return 1;
                }
                ShowPlayerLoginDialog(playerid);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF}Âû ââåëè íåâåðíûé ïàðîëü!");
                format(string, 64, "%s{FFFFFF} Ó Âàñ îñòàëîñü %d ïîïûòêè!", NS, 5 - PlayerInfo[playerid][pPodbor]);
                SendClientMessage(playerid, COLOR_VIOLET, string);
            }
            return 1;
        }

        case 0:
        {
            new strr[1024];
            if (!response)
            {
                Kick(playerid);
                return 1;
            }
            if (PassControl(inputtext) == 0)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ïàðîëå ìîæíî èñïîëüçîâàòü ÒÎËÜÊÎ ëàòèíñêèå");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}ñèìâîëû: îò a äî z , îò A äî Z , è öèôðû îò 0 äî 9 !");
                format(strr, sizeof(strr), "{FF0000}ÊÐÀÒÊÈÅ ÏÐÀÂÈËÀ ÑÅÐÂÅÐÀ:\
\n- {8F30E4}Çàïðåùåíî èñïîëüçîâàòü íèêè äðóãèõ èãðîêîâ èëè àäìèíèñòðàöèè.\
\n- {8F30E4}Çàïðåùåíî îñêîðáëÿòü äðóãèõ èãðîêîâ è ìåøàòü èì èãðàòü.\
\n- {8F30E4}Çàïðåùåíî ïðîñèòü àäìèíêó.\
\n- {8F30E4}Çàïðåùåíî ðåêëàìèðîâàòü ïîñòîðîííèå ñàéòû/ñåðâåðà.");
                format(strr, sizeof(strr), "%s\
\n- {8F30E4}Çàïðåùåíî óáèâàòü èãðîêîâ òðàíñïîðòíûì ñðåäñòâîì (ÄÁ).\
\n- {8F30E4}Çàïðåùåíî ìàòåðèòñÿ è ôëóäèòü â ÷àò.\
\n- {8F30E4}Çàïðåùåíî èñïîëüçîâàòü ëþáûå ÷èòû, â îñîáåííîñòè âðåäîíîñíûå!\
\n- {8F30E4}Çàïðåùåíà ïðîäàæà ÷åãî ëèáî, çà ðåàëüíûå äåíüãè.\
\n\n{FF0000}ÍÅÁÎËÜØÎÉ FAQ ÏÎ ÑÅÐÂÅÐÓ:", strr);
                format(strr, sizeof(strr), "%s\
\n- {8F30E4}Äëÿ âûçîâà êîìàíä ñåðâåðà èñïîëüçóéòå /cmd.\
\n- {8F30E4}Íà ñåðâåðå ïðèñóòñòâóåò óäîáíîå ìåíþ (ALT - ïåøêîì, êíîïêà 2 - â ìàøèíå)\
\n\n{FF0000}Ïðèäóìàéòå ñëîæíûé ïàðîëü, ÷òîáû èçáåæàòü âçëîìà âàøåãî àêêàóíòà.\
\n{FF0000}Àäìèíèñòðàöèÿ {00FFAA}DDP ñåðâåðà {FF0000}- íå íåñ¸ò îòâåòñòâåííîñòè çà ïîòåðÿíûå àêêàóíòû.\
\n\n{FF0000}Âàø íèê: {8F30E4}%s", strr, PlayerInfo[playerid][pName]);
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_INPUT, ">>[ÐÅÃÈÑÒÐÀÖÈß ÍÀ DREAMS]<<", strr, "Âîéòè", "Îòìåíà");
                return 1;
            }
            if (strlen(inputtext) < 6)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñèìâîëîâ â ïàðîëå äîëæíî áûòü íå ìåíüøå 6!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}ñèìâîëû: îò a äî z , îò A äî Z , è öèôðû îò 0 äî 9 !");
                format(strr, sizeof(strr), "{FF0000}ÊÐÀÒÊÈÅ ÏÐÀÂÈËÀ ÑÅÐÂÅÐÀ:\
\n- {8F30E4}Çàïðåùåíî èñïîëüçîâàòü íèêè äðóãèõ èãðîêîâ èëè àäìèíèñòðàöèè.\
\n- {8F30E4}Çàïðåùåíî îñêîðáëÿòü äðóãèõ èãðîêîâ è ìåøàòü èì èãðàòü.\
\n- {8F30E4}Çàïðåùåíî ïðîñèòü àäìèíêó.\
\n- {8F30E4}Çàïðåùåíî ðåêëàìèðîâàòü ïîñòîðîííèå ñàéòû/ñåðâåðà.");
                format(strr, sizeof(strr), "%s\
\n- {8F30E4}Çàïðåùåíî óáèâàòü èãðîêîâ òðàíñïîðòíûì ñðåäñòâîì (ÄÁ).\
\n- {8F30E4}Çàïðåùåíî ìàòåðèòñÿ è ôëóäèòü â ÷àò.\
\n- {8F30E4}Çàïðåùåíî èñïîëüçîâàòü ëþáûå ÷èòû, â îñîáåííîñòè âðåäîíîñíûå!\
\n- {8F30E4}Çàïðåùåíà ïðîäàæà ÷åãî ëèáî, çà ðåàëüíûå äåíüãè.\
\n\n{FF0000}ÍÅÁÎËÜØÎÉ FAQ ÏÎ ÑÅÐÂÅÐÓ:", strr);
                format(strr, sizeof(strr), "%s\
\n- {8F30E4}Äëÿ âûçîâà êîìàíä ñåðâåðà èñïîëüçóéòå /cmd.\
\n- {8F30E4}Íà ñåðâåðå ïðèñóòñòâóåò óäîáíîå ìåíþ (ALT - ïåøêîì, êíîïêà 2 - â ìàøèíå)\
\n\n{FF0000}Ïðèäóìàéòå ñëîæíûé ïàðîëü, ÷òîáû èçáåæàòü âçëîìà âàøåãî àêêàóíòà.\
\n{FF0000}Àäìèíèñòðàöèÿ {00FFAA}DDP ñåðâåðà {FF0000}- íå íåñ¸ò îòâåòñòâåííîñòè çà ïîòåðÿíûå àêêàóíòû.\
\n\n{FF0000}Âàø íèê: {8F30E4}%s", strr, PlayerInfo[playerid][pName]);
                ShowPlayerDialog(playerid, 0, DIALOG_STYLE_INPUT, ">>[ÐÅÃÈÑÒÐÀÖÈß ÍÀ DREAMS]<<", strr, "Âîéòè", "Îòìåíà");
                return 1;
            }
            new hashed_pass[65];
            new salt[17];
            for (new i; i < 16; i++)
            {
                salt[i] = inc_gLetters[random(sizeof(inc_gLetters))];
            }
            SHA256_Hash(inputtext, salt, hashed_pass, 65);
            new query[512];
            mysql_format(ServerDB, query, sizeof(query), "INSERT INTO `players` (`PlayerName`, `Pass`, `HASH`, `Money`, `Kills`, `Deaths`, `TDReg`, `Combo`, `IPAdr`, `Skin`) VALUES ('%e','%s','%e','50000','0','0','%d','1','%e','-1')", PlayerInfo[playerid][pName], hashed_pass, salt, gettime(), PlayerInfo[playerid][pIPAdr]);
            mysql_tquery(ServerDB, query, "OnPlayerRegistered", "is", playerid, inputtext);
            PlayerInfo[playerid][pTDReg] = gettime();
            return 1;
        }
    }
    if (dialogid == DIALOG_DUELWEAPONS)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå äóýëü íåäîñòóïíà!");
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_DEAGLE);
                }
                case 1:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SHOTGUN);
                }
                case 2:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SAWEDOFF);
                }
                case 3:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SHOTGSPA);
                }
                case 4:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_UZI);
                }
                case 5:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_MP5);
                }
                case 6:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_AK47);
                }
                case 7:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_M4);
                }
                case 8:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_TEC9);
                }
                case 9:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_RIFLE);
                }
                case 10:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SNIPER);
                }
                case 11:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_COLT45);
                }
                case 12:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SILENCED);
                }
            }
        }
        return 1;
    }
    if (dialogid == DIALOG_DUELWEAPONSTWO)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå äóýëü íåäîñòóïíà!");
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_DEAGLE);
                }
                case 1:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SHOTGUN);
                }
                case 2:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SAWEDOFF);
                }
                case 3:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SHOTGSPA);
                }
                case 4:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_UZI);
                }
                case 5:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_MP5);
                }
                case 6:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_AK47);
                }
                case 7:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_M4);
                }
                case 8:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_TEC9);
                }
                case 9:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_RIFLE);
                }
                case 10:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SNIPER);
                }
                case 11:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_COLT45);
                }
                case 12:
                {
                    PrepareDuelWeapon2(playerid, WEAPON_SILENCED);
                }
            }
        }
        else
        {
            EndDuel(playerid);
        }
        return 1;
    }
    if (dialogid == 10011)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå êëàíû íåäîñòóïíû!");
        if (response) ShowGangDialog(playerid, ++listitem);
        else PlayerDialogMenu(playerid);
    }
    else if (dialogid == 2002)
    {
        if (!response) return 1;
        if (!(1 <= strlen(inputtext) <= 30)) return ShowGangDialog(playerid, g_SetNamePage);
        if (strfind(inputtext, "{") != -1 || strfind(inputtext, "}") != -1 || strfind(inputtext, "'") != -1)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" Â íàçâàíèè íå äîëæíî áûòü ñèìâîëîâ { } '");
            return ShowGangDialog(playerid, g_SetNamePage);
        }
        SetPVarString(playerid, "GangName", inputtext), ShowGangDialog(playerid, g_cSetColorPage);
    }
    else if (dialogid == 2003)
    {
        if (response)
        {
            if (strlen(inputtext) != 6)
            {
                SendClientMessage(playerid, 0xFF0000, "Çíà÷åíèå äîëæíî áûòü èç 6 ñèìâîëîâ ôîðìàòà RRGGBB!");
                return ShowGangDialog(playerid, g_cSetColorPage);
            }

            for (new i = 1; i < MAX_GANGS; i++)
            {
                if (GangInfo[i][gCreated]) continue;
                PlayerInfo[playerid][pGang] = i;
                PlayerInfo[playerid][pGangLvl] = 6;
                GangInfo[i][gCreated] = true;
                for (new j; j < 3; j++) GangInfo[i][gSpawns][j] = 0.0;
                GangInfo[i][gSpawnInt] = 0;
                GangInfo[i][gPlayers] = 1;
                GangInfo[i][gVerifyCapt] = false;
                GangInfo[i][gCDate] = gettime();
                sscanf(PlayerInfo[playerid][pName], "s[24]", GangInfo[i][gGlawa]);
                for (new j; j < 6; j++) GangInfo[i][gSkins][j] = 0;
                GetPVarString(playerid, "GangName", GangInfo[i][gName], 31);

                format(GangInfo[i][gColor], 10, "%sFF", inputtext);
                SetPlayerColor(playerid, HexToInt(GangInfo[i][gColor]));
                format(string, sizeof(string), "Êëàí óñïåøíî ñîçäàí!\r\nÍàçâàíèå êëàíà: %s\r\nÖâåò êëàíà: %s", GangInfo[i][gName], GangInfo[i][gColor]);
                ShowPlayerDialog(playerid, 2, DIALOG_STYLE_MSGBOX, "Ñîçäàíèå êëàíà", string, "OK", "");
                MoneyK(playerid, -1000000);

                mysql_format(ServerDB, string, sizeof(string), "INSERT INTO `gangs` (`gID`,`gName`,`gColor`,`g_cDate`,`g_Glawa`,`g_Players`) VALUES ('%d','%s','%s','%d','%e','1')", i, GangInfo[i][gName], GangInfo[i][gColor], gettime(), PlayerInfo[playerid][pName]);
                mysql_tquery(ServerDB, string, "", "");
                GangInfo[i][gName] = i;
                DeletePVar(playerid, "GangName");
                return 1;
            }
            SendClientMessage(playerid, 0xFF0000, "Ïðîèçîøëà îøèáêà! Êîä: GANGS #1");
        }
        DeletePVar(playerid, "GangName");
    }
    else if (dialogid == 3001)
    {
        if (response)
        {
            new plid = strval(inputtext);
            if (!IsPlayerConnected(plid))
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê íå â èãðå!");
                return ShowGangDialog(playerid, g_InvitePage);
            }
            if (PlayerInfo[plid][pGang] != 0)
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê óæå â êëàíå!");
                return ShowGangDialog(playerid, g_InvitePage);
            }
            SetPVarInt(plid, "invitegang", PlayerInfo[playerid][pGang]);
            format(string, sizeof(string), "Ëèäåð %s ïðèãëàñèë âàñ â êëàí - {FF0000}%s", PlayerInfo[playerid][pName], GangInfo[PlayerInfo[playerid][pGang]][gName]);
            ShowPlayerDialog(strval(inputtext), 3002, DIALOG_STYLE_MSGBOX, "Ïðèãëàøåíèå â êëàí", string, "Ïðèíÿòü", "Îòêàçàòü");
            format(string, sizeof(string), "Ëèäåð %s ïðèãëàñèë %s â êëàí.", PlayerInfo[playerid][pName], PlayerInfo[plid][pName]);
            foreach(Player, i) if (PlayerInfo[i][pGang] == PlayerInfo[playerid][pGang]) SendClientMessage(i, 0xFF0000FF, string);
        }
    }
    else if (dialogid == 3002)
    {
        if (response)
        {
            PlayerInfo[playerid][pGangLvl] = 1;
            PlayerInfo[playerid][pGang] = GetPVarInt(playerid, "invitegang");
            SetPlayerSkin(playerid, GangInfo[PlayerInfo[playerid][pGang]][gSkins][0]);
            SetPlayerColor(playerid, HexToInt(GangInfo[PlayerInfo[playerid][pGang]][gColor]));
            format(string, sizeof(string), "Âû âñòóïèëè â êëàí {FF0000}%s", GangInfo[PlayerInfo[playerid][pGang]][gName]);
            SendClientMessage(playerid, 0xFFFFFFFF, string);
            format(string, sizeof(string), "%s âñòóïèë â êëàí!", PlayerInfo[playerid][pName]);
            foreach(Player, i) if (PlayerInfo[i][pGang] == PlayerInfo[playerid][pGang] && i != playerid) SendClientMessage(i, 0xFF0000FF, string);
            GangInfo[PlayerInfo[playerid][pGang]][gPlayers]++;
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `g_Players`='%d' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[playerid][pGang]][gPlayers], PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
        }
        DeletePVar(playerid, "invitegang");
    }
    else if (dialogid == 4001)
    {
        if (response)
        {
            new plid = strval(inputtext);
            if (!IsPlayerConnected(plid))
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê íå â èãðå!");
                return ShowGangDialog(playerid, g_UnInvitePage);
            }
            if (PlayerInfo[plid][pGang] != PlayerInfo[playerid][pGang])
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê íå â âàøåì êëàíå!");
                return ShowGangDialog(playerid, g_UnInvitePage);
            }
            GangInfo[PlayerInfo[plid][pGang]][gPlayers]--;
            PlayerInfo[plid][pGang] = 0, PlayerInfo[plid][pGangLvl] = 0;
            format(string, 144, "Âû áûëè âûãíàíû èç êëàíà èãðîêîì %s", PlayerInfo[playerid][pName]);
            SendClientMessage(plid, 0xFF0000FF, string);
            format(string, 144, "Âû âûãíàëè èç êëàíà èãðîêà %s", PlayerInfo[plid][pName]);
            SendClientMessage(playerid, 0xFF0000FF, string);
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `g_Players`='%d' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[playerid][pGang]][gPlayers], PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
        }
    }
    else if (dialogid == 5001)
    {
        if (response)
        {
            if (strlen(inputtext) != 6)
            {
                SendClientMessage(playerid, 0xFF0000FF, "Çíà÷åíèå äîëæíî áûòü èç 6 ñèìâîëîâ ôîðìàòà RRGGBB!");
                return ShowGangDialog(playerid, g_SetColorPage);
            }
            format(GangInfo[PlayerInfo[playerid][pGang]][gColor], 10, "%sFF", inputtext);
            format(string, sizeof(string), "Òåïåðü öâåò âàøåãî êëàíà: %s", GangInfo[PlayerInfo[playerid][pGang]][gColor]);
            SendClientMessage(playerid, 0xFFFFFFFF, string);
            foreach(Player, i) if (PlayerInfo[i][pGang] == PlayerInfo[playerid][pGang]) SetPlayerColor(i, HexToInt(GangInfo[PlayerInfo[i][pGang]][gColor]));
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `gColor`='%s' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[playerid][pGang]][gColor], PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
        }
    }
    else if (dialogid == 6001)
    {
        if (response)
        {
            format(string, sizeof(string), "%s óø¸ë èç êëàíà!", PlayerInfo[playerid][pName]);
            foreach(Player, i) if (PlayerInfo[i][pGang] == PlayerInfo[playerid][pGang]) SendClientMessage(i, 0xFFFF00, string);
            GangInfo[PlayerInfo[playerid][pGang]][gPlayers]--;
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `g_Players`='%d' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[playerid][pGang]][gPlayers], PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
            PlayerInfo[playerid][pGang] = 0, PlayerInfo[playerid][pGangLvl] = 0;
        }
    }
    else if (dialogid == 7001)
    {
        if (response)
        {
            GetPlayerPos(playerid, GangInfo[PlayerInfo[playerid][pGang]][gSpawns][0], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][1], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][2]);
            GangInfo[PlayerInfo[playerid][pGang]][gSpawnInt] = GetPlayerInterior(playerid);
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `gSpawnX`='%.4f',`gSpawnY`='%.4f',`gSpawnZ`='%.4f',`gSpawnInt`='%d' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[playerid][pGang]][gSpawns][0], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][1], GangInfo[PlayerInfo[playerid][pGang]][gSpawns][2], GangInfo[PlayerInfo[playerid][pGang]][gSpawnInt], PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
        }
    }
    else if (dialogid == 8001)
    {
        if (response)
        {
            SetPVarInt(playerid, "setgangskin", ++listitem);
            ShowGangDialog(playerid, g_SetSkinTwoPage);
        }
    }
    else if (dialogid == 8002)
    {
        if (response)
        {
            new skinid = strval(inputtext), skinlevel = GetPVarInt(playerid, "setgangskin");
            if (!(1 <= skinid <= 299) || skinid == 74) return ShowGangDialog(playerid, g_SetSkinTwoPage);
            format(string, sizeof(string), "Ñêèí óñïåøíî óñòàíîâëåí! ID ñêèíà: %i", skinid);
            SendClientMessage(playerid, 0xFFFF00FF, string);
            GangInfo[PlayerInfo[playerid][pGang]][gSkins][skinlevel - 1] = skinid;
            foreach(Player, i) if (PlayerInfo[i][pGang] == PlayerInfo[playerid][pGang] && PlayerInfo[i][pGangLvl] == skinlevel) SetPlayerSkin(i, skinid);
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `gangs` SET `gSkin%d`='%d' WHERE `gID`='%d' LIMIT 1", skinlevel - 1, skinid, PlayerInfo[playerid][pGang]);
            mysql_tquery(ServerDB, string, "", "");
        }
        DeletePVar(playerid, "setgangskin");
    }
    else if (dialogid == 9001)
    {
        if (response)
        {
            new plid = strval(inputtext);
            if (!IsPlayerConnected(plid))
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê íå â èãðå!");
                return ShowGangDialog(playerid, g_SetPlayerLevelPage);
            }
            if (PlayerInfo[plid][pGang] != PlayerInfo[playerid][pGang])
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "Ýòîò èãðîê íå â âàøåì êëàíå!");
                return ShowGangDialog(playerid, g_SetPlayerLevelPage);
            }
            SetPVarInt(playerid, "plidforlevel", plid);
            ShowGangDialog(playerid, g_SetPlayerLevelTwoPage);
        }
    }
    else if (dialogid == 9002)
    {
        if (response)
        {
            new plid = GetPVarInt(playerid, "plidforlevel");
            PlayerInfo[plid][pGangLvl] = ++listitem;
            format(string, sizeof(string), "Âû âûäàëè èãðîêó %s óðîâåíü %i", PlayerInfo[plid][pName], PlayerInfo[plid][pGangLvl]);
            SendClientMessage(playerid, 0xFFFF00FF, string);
            format(string, sizeof(string), "Ëèäåð %s âûäàë âàì óðîâåíü %i", PlayerInfo[playerid][pName], PlayerInfo[plid][pGangLvl]);
            SendClientMessage(plid, 0xFFFF00FF, string);
            if (GangInfo[PlayerInfo[playerid][pGang]][gSkins][PlayerInfo[plid][pGangLvl] - 1] > 0) SetPlayerSkin(plid, GangInfo[PlayerInfo[playerid][pGang]][gSkins][PlayerInfo[plid][pGangLvl] - 1]);
        }
        DeletePVar(playerid, "plidforlevel");
    }
    else if (dialogid == 9510)
    {
        if (!response) ShowGangDialog(playerid);
        else
        {
            new i = PlayerInfo[playerid][pGang];
            format(string, sizeof(string), "%s óäàëèë êëàí!", PlayerInfo[playerid][pName]);
            foreach (Player, j)
            {
                if (PlayerInfo[j][pGang] == i)
                {
                    SendClientMessage(j, 0xFFFF00, string);
                    PlayerInfo[j][pGang] = 0;
                    PlayerInfo[j][pGangLvl] = 0;
                }
            }
            PlayerInfo[playerid][pGang] = 0;
            PlayerInfo[playerid][pGangLvl] = 0;
            GangInfo[i][gCreated] = false;
            for (new j; j < 3; j++) GangInfo[i][gSpawns][j] = 0.0;
            GangInfo[i][gSpawnInt] = 0;
            for (new j; j < 6; j++) GangInfo[i][gSkins][j] = 0;
            format(GangInfo[i][gColor], 3, "\0");
            format(GangInfo[i][gName], 3, "\0");
            mysql_format(ServerDB, string, sizeof(string), "DELETE FROM `gangs` WHERE `gID`='%d' LIMIT 1", i);
            mysql_tquery(ServerDB, string, "", "");
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `players` SET `Gang`='0',`GangLvl`='0' WHERE `Gang`='%d'", i);
            mysql_tquery(ServerDB, string, "", "");
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, " ", "Êëàí óñïåøíî óäàëåí!", "Îê", "");
        }
        return 1;
    }

    if (dialogid == 4900) //Ïîêóïêà áèçíåñà
    {
        if (!response) return 1;
        else
        {
            for (new i = 0; i < MAX_BUSSINES; i++)
            {
                if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]))
                {
                    new buschecked = 0;
                    for (new ii = 0; ii < MAX_BUSSINES; ii++)
                    {
                        if (BI[ii][BuyID] == PlayerInfo[playerid][pMID]) buschecked++;
                    }
                    if (BI[i][Price] > GetPVarInt(playerid, "PlMon")) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã äëÿ ïîêóïêè áèçíåñà{FF0000}!");
                    else if (buschecked > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå 1 áèçíåñà êóïèòü íåëüçÿ{FF0000}!");
                    else
                    {
                        MoneyK(playerid, -BI[i][Price]);
                        format(string, sizeof(string), ""NS" {FFFFFF}Ïîçäðàâëÿåì èãðîêà {CCFF00}%s[%d] {FFFFFF}ñ ïðèîáðèòåíèåì áèçíåñà {CCFF00} %s{FFFFFF}!", PlayerInfo[playerid][pName], playerid, btipname[BI[i][Type]]);
                        SendClientMessageToAll(COLOR_VIOLET, string);
                        strdel(string, 0, sizeof(string));

                        mysql_format(ServerDB, string, sizeof(string), "UPDATE `bussines` SET `BuyID`='%d' WHERE `ID`='%d'", PlayerInfo[playerid][pMID], BI[i][bID]);
                        mysql_tquery(ServerDB, string, "", "");
                        BI[i][BuyID] = PlayerInfo[playerid][pMID];
                        UpdateBussines(i);
                    }
                }
            }
        }
        return 1;
    }

    if (dialogid == 4901)
    {
        if (!response) return 1;
        if (listitem == 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïîêà íåäîñòóïíî! Æäèòå ñëåäóþùåãî îáíîâëåíèÿ!");
            return 1;
        }
        if (listitem == 1)
        {
            ShowPlayerDialog(playerid, 4903, DIALOG_STYLE_MSGBOX, ">>[ÏÐÎÄÀÆÀ ÁÈÇÍÅÑÀ]<<", "Âû äåéñòâèòåëüíî æåëàåòå ïðîäàòü áèçíåñ?\nÑ åãî ïðîäàæè âû ïîëó÷èòå ïîëîâèíó åãî öåíû!", "ÏÐÎÄÀÒÜ", "ÎÒÌÅÍÀ");
            return 1;
        }
        if (listitem == 2)
        {
            for (new i = 0; i < MAX_BUSSINES; i++)
            {
                if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]) && BI[i][BuyID] == PlayerInfo[playerid][pMID])
                {
                    format(string, sizeof(string), "{FFFF33}Âû äåéñòâèòåëüíî õîòèòå âûâåñòè {CCFF00}$%d {FFFF33}ñî ñ÷¸òà áèçíåñà?", BI[i][accumulation]);
                }
            }
            ShowPlayerDialog(playerid, 4904, DIALOG_STYLE_MSGBOX, "{CCFF00}>>$[Âûâîä ñðåäñòâ]$<<", string, "ÄÀ", "ÎÒÌÅÍÀ");
            return 1;
        }
        return 1;
    }

    if (dialogid == 4902)
    {
        if (!response) return 1;
        if (listitem == 0)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïîêà íåäîñòóïíî! Æäèòå ñëåäóþùåãî îáíîâëåíèÿ!");
            return 1;
        }
        if (listitem == 1)
        {
            ShowPlayerDialog(playerid, 4905, DIALOG_STYLE_INPUT, "{CCFF00}>>[ÂÛÊÓÏ ÁÈÇÍÅÑÀ]<<", "Äëÿ âûêóïà áèçíåñà ïðåäëîæèòå öåíó çà íåãî!", "ÂÂÎÄ", "ÎÒÌÅÍÀ");
            return 1;
        }
        if (listitem == 2)
        {
            for (new i = 0; i < MAX_BUSSINES; i++)
            {
                if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]))
                {
                    format(string, sizeof(string), "{FFFFFF}Ñ ïîñëåäíåãî ïîñåùåíèÿ âëàäåëüöà íàêîïèëîñü: {CCFF00}$%d {FFFFFF}ñðåäñòâ íà ñ÷¸òå!", BI[i][accumulation]);
                    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[Ñ×¨Ò Â ÁÈÇÍÅÑÅ]<<", string, "ÎÊ", "");
                }
            }
            return 1;
        }
        return 1;
    }

    if (dialogid == 4903)
    {
        if (!response) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû îòìåíèëè ïðîäàæó áèçíåñà!");
        else
        {
            for (new i = 0; i < MAX_BUSSINES; i++)
            {
                if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]) && BI[i][BuyID] == PlayerInfo[playerid][pMID])
                {
                    mysql_format(ServerDB, string, sizeof(string), "UPDATE `bussines` SET `BuyID`='0' WHERE `ID`='%d'", BI[i][bID]);
                    mysql_tquery(ServerDB, string, "", "");
                    BI[i][BuyID] = 0;
                    UpdateBussines(i);
                    MoneyK(playerid, BI[i][Price] / 2);
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû ïðîäàëè ñâîé áèçíåñ!");
                }
            }
        }
        return 1;
    }

    if (dialogid == 4904)
    {
        if (!response) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû îñòàâèëè äåíüãè íà ñ÷¸òå áèçíåñà");
        else
        {
            for (new i = 0; i < MAX_BUSSINES; i++)
            {
                if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]) && BI[i][BuyID] == PlayerInfo[playerid][pMID])
                {
                    MoneyK(playerid, BI[i][accumulation]);
                    BI[i][accumulation] = 0;
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Ñðåäñòâà âûâåäåíû!");
                    mysql_format(ServerDB, string, sizeof(string), "UPDATE `bussines` SET `accumulation`='%d' WHERE `ID`='%d'", BI[i][accumulation], BI[i][bID]);
                    mysql_tquery(ServerDB, string, "", "");
                }
            }
        }
        return 1;
    }

    if (dialogid == 4905)
    {
        if (!response) return 1;
        for (new i = strlen(inputtext) - 1; i != -1; i--)
        {
            switch (inputtext[i])
            {
                case '0'..'9': continue;
                default:
                    return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Òîëüêî öèôðû!");
            }
        }
        for (new i = 0; i < MAX_BUSSINES; i++)
        {
            if (IsPlayerInRangeOfPoint(playerid, 1.0, BI[i][xX], BI[i][yY], BI[i][zZ]))
            {
                new idpb = GetPlayerID(BI[i][bOwner]);
                if (IsPlayerConnected(idpb))
                {

                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïîêà íåäîñòóïíî! Æäèòå ñëåäóþùåãî îáíîâëåíèÿ!");

                }
                else SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âëàäåëåö áèçíåñà íå íà ñåðâåðå! Ïðåäëîæèòü âûêóï ìîæíî òîëüêî ëè÷íî âëàäåëüöó.");
            }
        }
        return 1;
    }

    if (dialogid == 2502)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå ðàáîòû íåäîñòóïíû!");
        if (!response) return PlayerDialogMenu(playerid);
        Teleport(playerid, JobTeleport[listitem][0], JobTeleport[listitem][1], JobTeleport[listitem][2], 0, 0, false, 0, false);
        return 1;
    }
    if (dialogid == 2503)
    {
        if (!response) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû îòêàçàëèñü îò ðàáîòû ãðóç÷èêà!");
        job[playerid] = 1; //óñòàíàâëèâàåì àéäè ðàáîòû ãðóç÷èêà
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïîçäðàâëÿåì ñ íà÷àëîì ðàáî÷åãî äíÿ! Ïðîéäèòå ê ïåðâîìó ÷åêïîèíòó äëÿ ïîäíÿòèÿ ìåøêà.");
        indexMeshok[playerid] = 0;
        oldskin[playerid] = GetPlayerSkin(playerid);
        SetPlayerSkin(playerid, 16);
        new randomCheck = random(5);
        SetPlayerCheckpoint(playerid, Gruz4ikCords[randomCheck][0], Gruz4ikCords[randomCheck][1], Gruz4ikCords[randomCheck][2], 2.0);
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ìû îòìåòèëè íà âàøåé êàðòå ÷åêïîèíò. Èäèòå ê íåìó è âîçüìèòå ìåøîê!");
        if (GetPVarInt(playerid, "goodspawn") == 0) SetPVarInt(playerid, "goodspawn", 1);
        return 1;
    }
    if (dialogid == 2504)
    {
        if (!response) return 1;
        if (MeshokUp[playerid] == true) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñíà÷àëà ïîëîæèòå ìåøîê íà ìåñòî!");
        if (job[playerid] <= 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû óæå óâîëèëèñü!");
        SetPlayerSkin(playerid, oldskin[playerid]);
        oldskin[playerid] = -1;
        job[playerid] = 0;
        format(string, sizeof(string), ""NS" {FFFFFF}Âû çàêîí÷èëè ñâîþ ñìåíó! Çà ðàáîòó âû ïîëó÷èëè: {CCFF00}$%d! {FFFFFF}Ïðèõîäèòå åù¸!", indexMeshok[playerid] * 15000);
        SendClientMessage(playerid, COLOR_VIOLET, string);
        MoneyK(playerid, indexMeshok[playerid] * 15000);
        indexMeshok[playerid] = 0;
        DisablePlayerCheckpoint(playerid);
    }
    if (dialogid == 4) //èãðîâîå ìåíþ
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå ìåíþ íåäîñòóïíî!");
        if (dmzone[playerid] != 0)return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ÄÌ ìåíþ íå ðàáîòàåò! Ââåäèòå êîìàíäó {CCFF00}/dmexit {FFFFFF}äëÿ âûõîäà!");
        if (response)
        {
            if (listitem == 0) //Òðàíñïîðò
            {
                new dopper;
                dopper = GetPlayerVirtualWorld(playerid);
                if (dopper > 16999 && dopper < 18000)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Â DM-çîíàõ ÍÅÒ âîçìîæíîñòè âûáîðà òðàíñïîðòà !");
                    PlayerDialogMenu(playerid);
                    return 1;
                }
                if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
                ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Òðàíñïîðòíîå ñðåäñòâî", "Òèï òðàíñïîðòà\nÒþíèíã\nÎòêëþ÷èòü / âêëþ÷èòü àâòîìàòè÷åñêèé ðåìîíò\nÓíè÷òîæèòü ëþáîé òðàíñïîðò\nÔëèïíóòü\nËè÷íûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 1) //ìåíþ èãðîêà
            {
                if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
                ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
				\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
				\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
                return 1;
            }
            if (listitem == 2) //Ðàáîòû
            {
                ShowPlayerDialog(playerid, 2502, DIALOG_STYLE_LIST, "Ðàáîòû", "Ãðóç÷èê\nÄàëüíîáîéùèê\nÏîæàðíèê", "ÒÅËÅÏÎÐÒ", "Íàçàä");
                return 1;
            }
            if (listitem == 3) //òåëåïîðòû
            {
                if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
                PlayerDialogTeleport(playerid);
                return 1;
            }
            if (listitem == 4) //ðàäèî
            {
                format(strdln, sizeof(strdln), "{027FFE}Âûêëþ÷èòü ðàäèî\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
                       NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
                       NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
                ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "Ðàäèî", strdln, "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 5) //îðóæèå
            {
                if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
                ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
                return 1;
            }
            if (listitem == 6) //ÄÌ
            {
                if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
                PlayerDialogDM(playerid);
                return 1;
            }
            if (listitem == 7) //áàíäû
            {
                ShowGangDialog(playerid);
                return 1;
            }
            if (listitem == 8) //Íàñòðîéêè àêêà
            {
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Íàñòðîéêè àêêàóíòà", "Ñìåíèòü ïàðîëü\nÑìåíèòü ñïàâí\nÑìåíèòü êëàâèøó ìåíþ", "Âûáîð", "Íàçàä");
                return 1;
            }
            if (listitem == 9) //Òîïû
            {
                ShowPlayerDialog(playerid, 4310, DIALOG_STYLE_LIST, ">>[ÒÎÏ ÈÃÐÎÊÎÂ & ÄÎÑÒÈÆÅÍÈß]<<", ">Ïî äåíüãàì\n>Ïî î÷êàì\n>Ïî ñìåðòÿì\n>Ïî óáèéñòâàì\n>Ïî ìèíóòàì íà ñåðâåðå\n>Äîñòèæåíèÿ èãðîêîâ ïî î÷êàì äðèôòà çà ðàç", "ÂÛÁÎÐ", "ÍÀÇÀÄ");
                return 1;
            }
        }
        return 1;
    }
    if (dialogid == 4310)
    {
        if (!response) return PlayerDialogMenu(playerid);
        if (listitem == 0) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `Money` FROM `players` ORDER BY `Money` DESC LIMIT 10", "TopMoney", "d", playerid);
        if (listitem == 1) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `DriftExp` FROM `players` ORDER BY `DriftExp` DESC LIMIT 10", "TopScore", "d", playerid);
        if (listitem == 2) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `Deaths` FROM `players` ORDER BY `Deaths` DESC LIMIT 10", "TopDeaths", "d", playerid);
        if (listitem == 3) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `Kills` FROM `players` ORDER BY `Kills` DESC LIMIT 10", "TopKills", "d", playerid);
        if (listitem == 4) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `MinLog` FROM `players` ORDER BY `MinLog` DESC LIMIT 10", "TopMinuteOnline", "d", playerid);
        if (listitem == 5) return mysql_tquery(ServerDB, "SELECT `PlayerName`, `ExpRecord` FROM `players` ORDER BY `ExpRecord` DESC LIMIT 10", "TopRecordDrift", "d", playerid);
        return 1;
    }
    if (dialogid == 900)
    {
        new strcc[2048];
        if (!response) return 1;
        if (listitem == 0) return pc_cmd_cmd(playerid);
        if (listitem == 1)
        {
            strcat(strcc, "{FFFFFF}Ïîìîùü ïî ÷àòó ñåðâåðà {FF0000}DRIFT DREAMS\r\n");
            strcat(strcc, "\n{FFFFFF}Äëÿ îòêðûòèÿ ñòðîêè ÷àòà æìÿêíè íà êëàâå {8F30E4}F6\r\n");
            strcat(strcc, "{FFFFFF}Ïðèâåòñòâîâàòü/ïðîùàòñÿ ñ èãðîêàìè ìîæíî êîìàíäàìè {8F30E4}/hh è /bb\r\n");
            strcat(strcc, "{FFFFFF}Àäìèí/ãàíã/âèï ÷àò êîìàíäàìè {8F30E4} /a | /g | /v\r\n");
            strcat(strcc, "{FFFFFF}Óïîìÿíóòü èãðîêà â ñîîáùåíèè ìîæíî íàïèñàâ {8F30E4} @playerid (ìåñòî playerid íàïèøèòå èä èãðîêà)\r\n");
            strcat(strcc, "\n{FF0000}ÏÐÀÂÈËÀ {FFFFFF}×ÀÒÀ:\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùàåòñÿ ôëóäèòü\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíû îñêîðáëåíèÿ èãðîêîâ, óïîìèíàíèå ðîäíûõ\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíî ñëèøêîì ÷àñòî ìàòåðèòüñÿ\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíî ïèñàòü ññûëêè è èï äðóãèõ ïðîåêòîâ\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíî óïîìèíàòü äðóãèå ïðîåêòû\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíî îáñóæäåíèå äåéñòâèé àäìèíèñòðàòîðîâ\r\n");
            strcat(strcc, "{8F30E4}> {FFFFFF}Â ÷àòå çàïðåùåíî ïèñàòü î ïðîäàæå èãðîâûõ àêêàóíòîâ çà ðåàëüíûå äåíüãè\r\n");
            strcat(strcc, "\n{FFFFFF}Âû îçíàêîìëåíû ñ {FF0000}îñíîâíûìè {FFFFFF}ïðàâèëàìè è âîçìîæíîñòÿìè ÷àòà äàííîãî ñåðâåðà!\r");
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Ïîìîùü ïî ÷àòó ñåðâåðà", strcc, "ÃÎÒÎÂÎ", "");
            return 1;
        }
        if (listitem == 2) return pc_cmd_rules(playerid);
        if (listitem == 3)
        {
            strcat(strcc, "\t\t\t\t\t{FFFFFF}Âû ÷èòàåòå {FFA500}èíôîðìàöèþ î ñåðâåðå Drift Dreams\r\n");
            strcat(strcc, "\t{FFFFFF}Âëàäåëåö ïðîåêòà: {8F30E4}"GEN_D"\r\n");
            strcat(strcc, "\t{FFFFFF}Íàä ìîäîì ðàáîòàë: {8F30E4}"DEVONE"\r\n");
            strcat(strcc, "\t{FFFFFF}Ïðîåêò ñîçäàí: {8F30E4}16.09.2020\r\n");
            strcat(strcc, "\t{FFFFFF}Çàìåñòèòåëü: {8F30E4}your_sister_my_slave\r\n");
            strcat(strcc, "\t{FFFFFF}smooke and fuck jinger: {8F30E4}Drevniy.oldsk\r\n");
            strcat(strcc, "\t{FFFFFF}Ñåðâåð îðèåíòèðîâàí íà ðàçâëå÷åíèÿ (Æàíðû: {8F30E4}Drift/DM/Stunt/Race/RPG{FFFFFF})\r\n");
            strcat(strcc, "\t{FFFFFF}Ññûëêà íà ãðóïïó ñåðâåðà: {8F30E4}"VK_G"\r\n");
            strcat(strcc, "\t{FFFFFF}Ññûëêà íà âëàäåëüöà ïðîåêòà: {8F30E4}"VK_GEN_D"\r\n");
            strcat(strcc, "\t{FFFFFF}Ðàñøèôðîâêà DDP - {8F30E4}Drift Dreams Project\r");
            strcat(strcc, "\t{FFFFFF}Ñåð¸ãà, ìû âñ¸{CCFF00}ïðîåáàëè :(\r");
            ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Èíôîðìàöèÿ î ñåðâåðå DD", strcc, "ÃÎÒÎÂÎ", "");
            return 1;
        }
        return 1;
    }
    if (dialogid == 10) //ìåíþ Òþíèíã
    {
        if (response)
        {
            if (listitem == 0)
            {
                ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Äèñêè", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
				\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nOffroad\nAhab\nVirtual\nAccess\nÑòàíäàðò", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 1)
            {
                new vehicleid;
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    vehicleid = GetPlayerVehicleID(playerid);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
					\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
					\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                    return 1;
                }
                if (StopHidrav[playerid] <= 0) //åñëè ïåðåìåííàÿ çàäåðæêè ìåíüøå èëè ðàâíà íóëþ, òî:
                {
                    AddVehicleComponent(vehicleid, 1087);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    StopHidrav[playerid] = 5;
                }
                else//èíà÷å (åñëè ïåðåìåííàÿ çàäåðæêè áîëüøå íóëÿ), òî:
                {
                    format(string, sizeof(string), "ÍÅËÜÇß! Æäèòå %d ñåê.!", StopHidrav[playerid]);
                    SendClientMessage(playerid, COLOR_RED, string);
                }
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
				\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
				\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 2)
            {
                new vehicleid;
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    vehicleid = GetPlayerVehicleID(playerid);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
					\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
					\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                    return 1;
                }
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_HYDRAULICS);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
				\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
				\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 3)
            {
                ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Öâåò", "{FF0000}Êðàñíûé\n{991E1E}Êèðïè÷íûé\n{332AE0}Ñèíèé\
				\n{A43FF9}Ôèîëåòîâûé\n{FFFF33}Æ¸ëòûé\n{FF9933}Ñâåòëî-æ¸ëòûé\n{28A937}Çåëåíûé\n{1E9999}Áèðþçîâûé\n{808080}Ñåðûé\
				\n{FFFFFF}×åðíûé\n{FFFFFF}Áåëûé", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 4)
            {
                ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Âèíèëû", "Âèíèë 1\nÂèíèë 2\nÂèíèë 3\nÓäàëèòü âèíèë\n{FF0000}Ñåêðåòíûé âèíèë", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 5)
            {
                ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Àðõàíãåë òþíèíã", "Ïåðåäíèé áàìïåð X-flow\nÏåðåäíèé áàìïåð Alien\
				\nÏåðåäíèé áàìïåð ñòàíäàðò\nÇàäíèé áàìïåð X-Flow\nÇàäíèé áàìïåð Alien\nÇàäíèé áàìïåð ñòàíäàðò\nÑïîéëåð X-Flow\
				\nÑïîéëåð Alien\nÓäàëèòü ñïîéëåð\nÁîêîâûå þáêè X-Flow\nÁîêîâûå þáêè Alien\nÁîêîâûå þáêè ñòàíäàðò\
				\nÂîçäóõîçàáîðíèê X-Flow\nÂîçäóõîçàáîðíèê Alien\nÓäàëèòü âîçäóõîçàáîðíèê\nÂûõëîï X-flow\nÂûõëîï Alien\
				\nÂûõëîï ñòàíäàðò", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 6)
            {
                ShowPlayerDialog(playerid, 3900, DIALOG_STYLE_LIST, "Äîïîëíèòåëüíûé òþíèíã", "Ñìåíèòü íîìåð\nÎòêðûòü áàãàæíèê\
				\nÇàêðûòü áàãàæíèê\nÎòêðûòü êàïîò\nÇàêðûòü êàïîò\nÂêëþ÷èòü ñâåò\nÂûêëþ÷èòü ñâåò\nÇàìêíóòü äâåðè\nÎòêðûòü äâåðè\
				\nÂêëþ÷èòü ñèãíàëèçàöèþ\nÂûêëþ÷èòü ñèãíàëèçàöèþ\nÇàâåñòè äâèãàòåëü\nÇàãëóøèòü äâèãàòåëü", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 7)
            {
                ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "Âûêëþ÷èòü ôàðû", "Ëåâóþ ïåðåäíþþ\nÏðàâóþ ïåðåäíþþ\nÎáå ïåðåäíèõ\
				\nÎáå çàäíèõ\nËåâóþ ïåðåäíþþ è îáå çàäíèõ\nÏðàâóþ ïåðåäíþþ è îáå çàäíèõ\nÂñå\
				\nÂêëþ÷èòü âñå ôàðû", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 8)
            {
                ShowPlayerDialog(playerid, 53, DIALOG_STYLE_LIST, "Óäàëèòü äåòàëè òðàíñïîðòà", "Êàïîò\nÁàãàæíèê\nÊàïîò è áàãàæíèê\
				\nËåâóþ äâåðü\nËåâóþ äâåðü è êàïîò\nËåâóþ äâåðü è áàãàæíèê\nËåâóþ äâåðü ' êàïîò è áàãàæíèê\nÏðàâóþ äâåðü\
				\nÏðàâóþ äâåðü è êàïîò\nÏðàâóþ äâåðü è áàãàæíèê\nÏðàâóþ äâåðü ' êàïîò è áàãàæíèê\nÎáå äâåðè\nÎáå äâåðè è êàïîò\
				\nÎáå äâåðè è áàãàæíèê\nÎáå äâåðè ' êàïîò è áàãàæíèê\nÂîññòàíîâèòü âñå äåòàëè", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 9)
            {
                ShowPlayerDialog(playerid, 54, DIALOG_STYLE_LIST, "Óäàëèòü áàìïåðà", "Ïåðåäíèé\nÇàäíèé\nÎáà\
				\nÂîññòàíîâèòü áàìïåðà", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 10)
            {
                ShowPlayerDialog(playerid, 51, DIALOG_STYLE_LIST, "Ïðîêîëîòü øèíû", "Ïðàâóþ çàäíþþ / çàäíþþ\nÏðàâóþ ïåðåäíþþ / ïåðåäíþþ\
				\nÎáå ïðàâûõ / îáå\nËåâóþ çàäíþþ\nÎáå çàäíèõ\nËåâóþ çàäíþþ è ïðàâóþ ïåðåäíþþ\nËåâóþ çàäíþþ è îáå ïðàâûõ\
				\nËåâóþ ïåðåäíþþ\nËåâóþ ïåðåäíþþ è ïðàâóþ çàäíþþ\nÎáå ïåðåäíèõ\nËåâóþ ïåðåäíþþ è îáå ïðàâûõ\nÎáå ëåâûõ\
				\nÎáå ëåâûõ è ïðàâóþ çàäíþþ\nÎáå ëåâûõ è ïðàâóþ ïåðåäíþþ\nÂñå\nÂóëêàíèçèðîâàòü âñå øèíû", "OK", "Îòìåíà");
            }
            if (listitem == 11) //íåîí
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    ShowPlayerDialog(playerid, 40, DIALOG_STYLE_LIST, "Íåîí", "{FF3300}Êðàñíûé\n{0033CC}Ñèíèé\n{33FF00}Çåë¸íûé\
					\n{FFFF00}Æ¸ëòûé\n{E63E85}Ðîçîâûé\nÁåëûé\nÓäàëèòü Íåîí", "OK", "Îòìåíà");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
					\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
					\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                }
                return 1;
            }
            if (listitem == 12) //ôàðû
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    ShowPlayerDialog(playerid, 1600, DIALOG_STYLE_LIST, "Óñòàíîâêà Ôàð", "Óñòàíîâèòü{ffffff}||||||\nÓñòàíîâèòü{ff0000}||||||\nÓñòàíîâèòü{00ff00}||||||\nÓñòàíîâèòü{42aaff}||||||\nÓñòàíîâèòü{ffffff}|||{1811F7}|||\n{ff0000}Óäàëèòü ôàðû", "Âûáðàòü", "Âûõîä");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                    ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
					\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
					\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
                }
                return 1;
            }
            if (listitem == 13) //óñòàíîâêà Áûñòðûé òþíèíã
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    new vehicleid = GetPlayerVehicleID(playerid);
                    new cartype = GetVehicleModel(vehicleid);
                    if (cartype == 562)
                    {
                        AddVehicleComponent(vehicleid, 1172);
                        AddVehicleComponent(vehicleid, 1148);
                        AddVehicleComponent(vehicleid, 1146);
                        AddVehicleComponent(vehicleid, 1041);
                        AddVehicleComponent(vehicleid, 1039);
                        AddVehicleComponent(vehicleid, 1035);
                        AddVehicleComponent(vehicleid, 1037);
                        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ó âàñ äîëæíà áûòü Elegy!");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                }
                return 1;
            }
            if (listitem == 14) return ShowPlayerDialog(playerid, 7840, DIALOG_STYLE_LIST, "-> Îñîáûé òþíèíã", "Óëó÷øèòü äâèãàòåëü\nÓëó÷øèòü òîðìîçíóþ ñèñòåìó {33AA33}$300000\n{FF0000}Ñáðîñèòü óëó÷øåíèÿ", "Âûáðàòü", "Íàçàä");
        }
        else
        {
            ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Òðàíñïîðòíîå ñðåäñòâî", "Òèï òðàíñïîðòà\nÒþíèíã\nÎòêëþ÷èòü / âêëþ÷èòü àâòîìàòè÷åñêèé ðåìîíò\nÓíè÷òîæèòü ëþáîé òðàíñïîðò\nÔëèïíóòü\nËè÷íûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 1600)
    {
        if (!response) return ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
								\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
								\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        switch (listitem)
        {
            case 0:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ObjectSelect[GetPlayerVehicleID(playerid)][0] = CreateObject(19281, 0, 0, 0, 0, 0, 0, 100.0);
                ObjectSelect[GetPlayerVehicleID(playerid)][1] = CreateObject(19281, 0, 0, 0, 0, 0, 0, 100.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][0], GetPlayerVehicleID(playerid), -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][1], GetPlayerVehicleID(playerid), 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
            case 1:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ObjectSelect[GetPlayerVehicleID(playerid)][0] = CreateObject(19282, 0, 0, 0, 0, 0, 0, 100.0);
                ObjectSelect[GetPlayerVehicleID(playerid)][1] = CreateObject(19282, 0, 0, 0, 0, 0, 0, 100.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][0], GetPlayerVehicleID(playerid), -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][1], GetPlayerVehicleID(playerid), 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
            case 2:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ObjectSelect[GetPlayerVehicleID(playerid)][0] = CreateObject(19283, 0, 0, 0, 0, 0, 0, 100.0);
                ObjectSelect[GetPlayerVehicleID(playerid)][1] = CreateObject(19283, 0, 0, 0, 0, 0, 0, 100.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][0], GetPlayerVehicleID(playerid), -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][1], GetPlayerVehicleID(playerid), 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
            case 3:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ObjectSelect[GetPlayerVehicleID(playerid)][0] = CreateObject(19284, 0, 0, 0, 0, 0, 0, 100.0);
                ObjectSelect[GetPlayerVehicleID(playerid)][1] = CreateObject(19284, 0, 0, 0, 0, 0, 0, 100.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][0], GetPlayerVehicleID(playerid), -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][1], GetPlayerVehicleID(playerid), 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
            case 4:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ObjectSelect[GetPlayerVehicleID(playerid)][0] = CreateObject(19293, 0, 0, 0, 0, 0, 0, 100.0);
                ObjectSelect[GetPlayerVehicleID(playerid)][1] = CreateObject(19293, 0, 0, 0, 0, 0, 0, 100.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][0], GetPlayerVehicleID(playerid), -0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                AttachObjectToVehicle(ObjectSelect[GetPlayerVehicleID(playerid)][1], GetPlayerVehicleID(playerid), 0.8, 2.25, 0.0, 0.0, 0.0, 180.0);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
            case 5:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
            }
        }
        return 1;
    }
    if (dialogid == 3900) //ìåíþ Äîïîëíèòåëüíûé òþíèíã
    {
        if (response)
        {
            new carid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                carid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 3900, DIALOG_STYLE_LIST, "Äîïîëíèòåëüíûé òþíèíã", "Ñìåíèòü íîìåð\nÎòêðûòü áàãàæíèê\
				\nÇàêðûòü áàãàæíèê\nÎòêðûòü êàïîò\nÇàêðûòü êàïîò\nÂêëþ÷èòü ñâåò\nÂûêëþ÷èòü ñâåò\nÇàìêíóòü äâåðè\nÎòêðûòü äâåðè\
				\nÂêëþ÷èòü ñèãíàëèçàöèþ\nÂûêëþ÷èòü ñèãíàëèçàöèþ\nÇàâåñòè äâèãàòåëü\nÇàãëóøèòü äâèãàòåëü", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 0) //ñìåíèòü íîìåð
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    ShowPlayerDialog(playerid, 41, DIALOG_STYLE_INPUT, "Ñìåíèòü íîìåð", "Ââåäèòå íîìåðà àâòî", "OK", "Îòìåíà");
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                    ShowPlayerDialog(playerid, 3900, DIALOG_STYLE_LIST, "Äîïîëíèòåëüíûé òþíèíã", "Ñìåíèòü íîìåð\nÎòêðûòü áàãàæíèê\
					\nÇàêðûòü áàãàæíèê\nÎòêðûòü êàïîò\nÇàêðûòü êàïîò\nÂêëþ÷èòü ñâåò\nÂûêëþ÷èòü ñâåò\nÇàìêíóòü äâåðè\nÎòêðûòü äâåðè\
					\nÂêëþ÷èòü ñèãíàëèçàöèþ\nÂûêëþ÷èòü ñèãíàëèçàöèþ\nÇàâåñòè äâèãàòåëü\nÇàãëóøèòü äâèãàòåëü", "Âûáîð", "Îòìåíà");
                }
                return 1;
            }
            new engine, lights, alarm, doors, bonnet, boot, objective;
            if (listitem == 1) //îòêðûòü áàãàæíèê
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, true, objective);
            }
            if (listitem == 2) //çàêðûòü áàãàæíèê
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, false, objective);
            }
            if (listitem == 3) //îòêðûòü êàïîò
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, doors, true, boot, objective);
            }
            if (listitem == 4) //çàêðûòü êàïîò
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, doors, false, boot, objective);
            }
            if (listitem == 5) //âêëþ÷èòü ñâåò
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, true, alarm, doors, bonnet, boot, objective);
            }
            if (listitem == 6) //âûêëþ÷èòü ñâåò
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, false, alarm, doors, bonnet, boot, objective);
            }
            if (listitem == 7) //çàìêíóòü äâåðè
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, true, bonnet, boot, objective);
            }
            if (listitem == 8) //îòêðûòü äâåðè
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, alarm, false, bonnet, boot, objective);
            }
            if (listitem == 9) //âêëþ÷èòü ñèãíàëèçàöèþ
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, true, doors, bonnet, boot, objective);
            }
            if (listitem == 10) //âûêëþ÷èòü ñèãíàëèçàöèþ
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, engine, lights, false, doors, bonnet, boot, objective);
            }
            if (listitem == 11) //çàâåñòè äâèãàòåëü
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, true, lights, alarm, doors, bonnet, boot, objective);
            }
            if (listitem == 12) //çàãëóøèòü äâèãàòåëü
            {
                GetVehicleParamsEx(carid, engine, lights, alarm, doors, bonnet, boot, objective);
                SetVehicleParamsEx(carid, false, lights, alarm, doors, bonnet, boot, objective);
            }
            ShowPlayerDialog(playerid, 3900, DIALOG_STYLE_LIST, "Äîïîëíèòåëüíûé òþíèíã", "Ñìåíèòü íîìåð\nÎòêðûòü áàãàæíèê\
			\nÇàêðûòü áàãàæíèê\nÎòêðûòü êàïîò\nÇàêðûòü êàïîò\nÂêëþ÷èòü ñâåò\nÂûêëþ÷èòü ñâåò\nÇàìêíóòü äâåðè\nÎòêðûòü äâåðè\
			\nÂêëþ÷èòü ñèãíàëèçàöèþ\nÂûêëþ÷èòü ñèãíàëèçàöèþ\nÇàâåñòè äâèãàòåëü\nÇàãëóøèòü äâèãàòåëü", "Âûáîð", "Îòìåíà");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 52) //ìåíþ Âûêëþ÷èòü ôàðû
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "Âûêëþ÷èòü ôàðû", "Ëåâóþ ïåðåäíþþ\nÏðàâóþ ïåðåäíþþ\nÎáå ïåðåäíèõ\
				\nÎáå çàäíèõ\nËåâóþ ïåðåäíþþ è îáå çàäíèõ\nÏðàâóþ ïåðåäíþþ è îáå çàäíèõ\nÂñå\
				\nÂêëþ÷èòü âñå ôàðû", "OK", "Îòìåíà");
                return 1;
            }
            new VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires;
            GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
            new dop;
            if (listitem == 0)dop = 3;
            if (listitem == 1)dop = 12;
            if (listitem == 2)dop = 15;
            if (listitem == 3)dop = 192;
            if (listitem == 4)dop = 195;
            if (listitem == 5)dop = 204;
            if (listitem == 6)dop = 207;
            if (listitem >= 0 && listitem <= 6)
            {
                autorepair[playerid] = false;
                UpdateVehicleDamageStatus(vehicleid, panels, doors, VEHICLE_LIGHT_STATUS:dop, tires);
                PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);

                ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "Âûêëþ÷èòü ôàðû", "Ëåâóþ ïåðåäíþþ\nÏðàâóþ ïåðåäíþþ\nÎáå ïåðåäíèõ\
				\nÎáå çàäíèõ\nËåâóþ ïåðåäíþþ è îáå çàäíèõ\nÏðàâóþ ïåðåäíþþ è îáå çàäíèõ\nÂñå\
				\nÂêëþ÷èòü âñå ôàðû", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 7)
            {
                autorepair[playerid] = true;
                if (lights != VEHICLE_LIGHT_STATUS_NONE)
                {
                    UpdateVehicleDamageStatus(vehicleid, panels, doors, VEHICLE_LIGHT_STATUS_NONE, tires);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                }

                ShowPlayerDialog(playerid, 52, DIALOG_STYLE_LIST, "Âûêëþ÷èòü ôàðû", "Ëåâóþ ïåðåäíþþ\nÏðàâóþ ïåðåäíþþ\nÎáå ïåðåäíèõ\
				\nÎáå çàäíèõ\nËåâóþ ïåðåäíþþ è îáå çàäíèõ\nÏðàâóþ ïåðåäíþþ è îáå çàäíèõ\nÂñå\
				\nÂêëþ÷èòü âñå ôàðû", "OK", "Îòìåíà");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
		\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
		\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 53) //ìåíþ Óäàëèòü äåòàëè òðàíñïîðòà
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 53, DIALOG_STYLE_LIST, "Óäàëèòü äåòàëè òðàíñïîðòà", "Êàïîò\nÁàãàæíèê\nÊàïîò è áàãàæíèê\
				\nËåâóþ äâåðü\nËåâóþ äâåðü è êàïîò\nËåâóþ äâåðü è áàãàæíèê\nËåâóþ äâåðü ' êàïîò è áàãàæíèê\nÏðàâóþ äâåðü\
				\nÏðàâóþ äâåðü è êàïîò\nÏðàâóþ äâåðü è áàãàæíèê\nÏðàâóþ äâåðü ' êàïîò è áàãàæíèê\nÎáå äâåðè\nÎáå äâåðè è êàïîò\
				\nÎáå äâåðè è áàãàæíèê\nÎáå äâåðè ' êàïîò è áàãàæíèê\nÂîññòàíîâèòü âñå äåòàëè", "OK", "Îòìåíà");
                return 1;
            }
            new VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires;
            GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
            new dop;
            if (listitem == 0)dop = 4;
            if (listitem == 1)dop = 1024;
            if (listitem == 2)dop = 1028;
            if (listitem == 3)dop = 262144;
            if (listitem == 4)dop = 262148;
            if (listitem == 5)dop = 263168;
            if (listitem == 6)dop = 263172;
            if (listitem == 7)dop = 67108864;
            if (listitem == 8)dop = 67108868;
            if (listitem == 9)dop = 67109888;
            if (listitem == 10)dop = 67109892;
            if (listitem == 11)dop = 67371008;
            if (listitem == 12)dop = 67371012;
            if (listitem == 13)dop = 67372032;
            if (listitem == 14)dop = 67372036;
            if (listitem >= 0 && listitem <= 14)
            {
                autorepair[playerid] = false;
                UpdateVehicleDamageStatus(vehicleid, panels, VEHICLE_DOOR_STATUS_NONE, lights, tires);
                UpdateVehicleDamageStatus(vehicleid, panels, VEHICLE_DOOR_STATUS:dop, lights, tires);
                PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);

                ShowPlayerDialog(playerid, 53, DIALOG_STYLE_LIST, "Óäàëèòü äåòàëè òðàíñïîðòà", "Êàïîò\nÁàãàæíèê\nÊàïîò è áàãàæíèê\
				\nËåâóþ äâåðü\nËåâóþ äâåðü è êàïîò\nËåâóþ äâåðü è áàãàæíèê\nËåâóþ äâåðü ' êàïîò è áàãàæíèê\nÏðàâóþ äâåðü\
				\nÏðàâóþ äâåðü è êàïîò\nÏðàâóþ äâåðü è áàãàæíèê\nÏðàâóþ äâåðü ' êàïîò è áàãàæíèê\nÎáå äâåðè\nÎáå äâåðè è êàïîò\
				\nÎáå äâåðè è áàãàæíèê\nÎáå äâåðè ' êàïîò è áàãàæíèê\nÂîññòàíîâèòü âñå äåòàëè", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 15)
            {
                autorepair[playerid] = true;
                if (doors != VEHICLE_DOOR_STATUS_NONE)
                {
                    UpdateVehicleDamageStatus(vehicleid, panels, VEHICLE_DOOR_STATUS_NONE, lights, tires);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                }

                ShowPlayerDialog(playerid, 53, DIALOG_STYLE_LIST, "Óäàëèòü äåòàëè òðàíñïîðòà", "Êàïîò\nÁàãàæíèê\nÊàïîò è áàãàæíèê\
				\nËåâóþ äâåðü\nËåâóþ äâåðü è êàïîò\nËåâóþ äâåðü è áàãàæíèê\nËåâóþ äâåðü ' êàïîò è áàãàæíèê\nÏðàâóþ äâåðü\
				\nÏðàâóþ äâåðü è êàïîò\nÏðàâóþ äâåðü è áàãàæíèê\nÏðàâóþ äâåðü ' êàïîò è áàãàæíèê\nÎáå äâåðè\nÎáå äâåðè è êàïîò\
				\nÎáå äâåðè è áàãàæíèê\nÎáå äâåðè ' êàïîò è áàãàæíèê\nÂîññòàíîâèòü âñå äåòàëè", "OK", "Îòìåíà");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
		\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
		\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 54) //ìåíþ Óäàëèòü áàìïåðà
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 54, DIALOG_STYLE_LIST, "Óäàëèòü áàìïåðà", "Ïåðåäíèé\nÇàäíèé\nÎáà\
				\nÂîññòàíîâèòü áàìïåðà", "OK", "Îòìåíà");
                return 1;
            }
            new VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires;
            GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
            new dop;
            if (listitem == 0)dop = 3145728;
            if (listitem == 1)dop = 50331648;
            if (listitem == 2)dop = 53477376;
            if (listitem >= 0 && listitem <= 2)
            {
                autorepair[playerid] = false;
                UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS_NONE, doors, lights, tires);
                UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS:dop, doors, lights, tires);
                PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);

                ShowPlayerDialog(playerid, 54, DIALOG_STYLE_LIST, "Óäàëèòü áàìïåðà", "Ïåðåäíèé\nÇàäíèé\nÎáà\
				\nÂîññòàíîâèòü áàìïåðà", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 3)
            {
                autorepair[playerid] = true;
                if (panels != VEHICLE_PANEL_STATUS_NONE)
                {
                    UpdateVehicleDamageStatus(vehicleid, VEHICLE_PANEL_STATUS_NONE, doors, lights, tires);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                }

                ShowPlayerDialog(playerid, 54, DIALOG_STYLE_LIST, "Óäàëèòü áàìïåðà", "Ïåðåäíèé\nÇàäíèé\nÎáà\
				\nÂîññòàíîâèòü áàìïåðà", "OK", "Îòìåíà");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
		\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
		\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 51) //ìåíþ Ïðîêîëîòü øèíû
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 51, DIALOG_STYLE_LIST, "Ïðîêîëîòü øèíû", "Ïðàâóþ çàäíþþ / çàäíþþ\nÏðàâóþ ïåðåäíþþ / ïåðåäíþþ\
				\nÎáå ïðàâûõ / îáå\nËåâóþ çàäíþþ\nÎáå çàäíèõ\nËåâóþ çàäíþþ è ïðàâóþ ïåðåäíþþ\nËåâóþ çàäíþþ è îáå ïðàâûõ\
				\nËåâóþ ïåðåäíþþ\nËåâóþ ïåðåäíþþ è ïðàâóþ çàäíþþ\nÎáå ïåðåäíèõ\nËåâóþ ïåðåäíþþ è îáå ïðàâûõ\nÎáå ëåâûõ\
				\nÎáå ëåâûõ è ïðàâóþ çàäíþþ\nÎáå ëåâûõ è ïðàâóþ ïåðåäíþþ\nÂñå\nÂóëêàíèçèðîâàòü âñå øèíû", "OK", "Îòìåíà");
                return 1;
            }
            new VEHICLE_PANEL_STATUS:panels, VEHICLE_DOOR_STATUS:doors, VEHICLE_LIGHT_STATUS:lights, VEHICLE_TYRE_STATUS:tires;
            GetVehicleDamageStatus(vehicleid, panels, doors, lights, tires);
            if (listitem == 15)
            {
                autorepair[playerid] = true;
                if (tires != VEHICLE_TYRE_STATUS_NONE)
                {
                    UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, VEHICLE_TYRE_STATUS_NONE);
                    PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                }

                ShowPlayerDialog(playerid, 51, DIALOG_STYLE_LIST, "Ïðîêîëîòü øèíû", "Ïðàâóþ çàäíþþ / çàäíþþ\nÏðàâóþ ïåðåäíþþ / ïåðåäíþþ\
				\nÎáå ïðàâûõ / îáå\nËåâóþ çàäíþþ\nÎáå çàäíèõ\nËåâóþ çàäíþþ è ïðàâóþ ïåðåäíþþ\nËåâóþ çàäíþþ è îáå ïðàâûõ\
				\nËåâóþ ïåðåäíþþ\nËåâóþ ïåðåäíþþ è ïðàâóþ çàäíþþ\nÎáå ïåðåäíèõ\nËåâóþ ïåðåäíþþ è îáå ïðàâûõ\nÎáå ëåâûõ\
				\nÎáå ëåâûõ è ïðàâóþ çàäíþþ\nÎáå ëåâûõ è ïðàâóþ ïåðåäíþþ\nÂñå\nÂóëêàíèçèðîâàòü âñå øèíû", "OK", "Îòìåíà");
                return 1;
            }
            new dop;
            dop = listitem;
            dop++;

            autorepair[playerid] = false;
            UpdateVehicleDamageStatus(vehicleid, panels, doors, lights, VEHICLE_TYRE_STATUS:dop);
            PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);

            ShowPlayerDialog(playerid, 51, DIALOG_STYLE_LIST, "Ïðîêîëîòü øèíû", "Ïðàâóþ çàäíþþ / çàäíþþ\nÏðàâóþ ïåðåäíþþ / ïåðåäíþþ\
			\nÎáå ïðàâûõ / îáå\nËåâóþ çàäíþþ\nÎáå çàäíèõ\nËåâóþ çàäíþþ è ïðàâóþ ïåðåäíþþ\nËåâóþ çàäíþþ è îáå ïðàâûõ\
			\nËåâóþ ïåðåäíþþ\nËåâóþ ïåðåäíþþ è ïðàâóþ çàäíþþ\nÎáå ïåðåäíèõ\nËåâóþ ïåðåäíþþ è îáå ïðàâûõ\nÎáå ëåâûõ\
			\nÎáå ëåâûõ è ïðàâóþ çàäíþþ\nÎáå ëåâûõ è ïðàâóþ ïåðåäíþþ\nÂñå\nÂóëêàíèçèðîâàòü âñå øèíû", "OK", "Îòìåíà");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
		\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
		\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 20)
    {
        if (!response) return PlayerDialogMenu(playerid);
        if (listitem >= 0 || listitem < 7) PlayerDialogWeapon(playerid, listitem);
        switch (listitem)
        {
            case 7:
            {
                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                {
                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                }
                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT_UNARMED], playammo[playerid][WEAPON_SLOT_UNARMED]);//âîçâðàùàåì ïðåäìåòû
                GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT_MELEE], playammo[playerid][WEAPON_SLOT_MELEE]);
                GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT_EQUIPMENT], playammo[playerid][WEAPON_SLOT_EQUIPMENT]);
                GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT_GIFT], playammo[playerid][WEAPON_SLOT_GIFT]);
                GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT_GADGET], playammo[playerid][WEAPON_SLOT_GADGET]);
                ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
            }
        }
        return 1;
    }
    if (dialogid == 21006)
    {
        new dice = random(2);
        new iplayer[MAX_PLAYER_NAME];
        new tplayer[MAX_PLAYER_NAME];
        new sssm[256];
        if (response == 1)
        {
            FloodStop[DiceName[playerid]] = 1; //Çàïðåùàåì ôëóä
            SetTimerEx("AntiFlood", 5000, false, "i", DiceName[playerid]); //Âûçûâàåì ïàáëèê, ãäå ðàçðåøàåì ôëóä
            if (dice == 1)
            {
                MoneyK(playerid, DiceMoney[playerid]);
                MoneyK(DiceName[playerid], -DiceMoney[playerid]);
                SetPlayerChatBubble(DiceName[playerid], "Ïðîèãðàë", 0xFF0000FF, 100.0, 6000);
                SetPlayerChatBubble(playerid, "Âûèãðàë", 0x00FF00FF, 70.0, 10000);
                GetPlayerName(playerid, iplayer, sizeof(iplayer));
                GetPlayerName(DiceName[playerid], tplayer, sizeof(tplayer));
                format(sssm, sizeof(sssm), "[Êîñòè]{FFFFFF} Èãðîê {B84BCF}%s{FFFFFF} âûèãðàë {FF0000}%d${FFFFFF} ó èãðîêà {B84BCF}%s", iplayer, DiceMoney[playerid], tplayer);
                SendClientMessageToAll(COLOR_GREEN, sssm);
            }
            else
            {
                MoneyK(playerid, -DiceMoney[playerid]);
                MoneyK(DiceName[playerid], DiceMoney[playerid]);
                SetPlayerChatBubble(playerid, "Ïðîèãðàë", 0xFF0000FF, 70.0, 10000);
                SetPlayerChatBubble(DiceName[playerid], "Âûèãðàë", 0x00FF00FF, 70.0, 6000);
                GetPlayerName(playerid, iplayer, sizeof(iplayer));
                GetPlayerName(DiceName[playerid], tplayer, sizeof(tplayer));
                format(sssm, sizeof(sssm), "[Êîñòè]{FFFFFF} Èãðîê {B84BCF}%s{FFFFFF} âûèãðàë {FF0000}%d${FFFFFF} ó èãðîêà {B84BCF}%s", tplayer, DiceMoney[playerid], iplayer);
                SendClientMessageToAll(COLOR_GREEN, sssm);
            }
            RemovePlayerAttachedObject(playerid, 1);
            RemovePlayerAttachedObject(DiceName[playerid], 1);
            DiceLock[DiceName[playerid]] = 0;
            DiceName[DiceName[playerid]] = 0;
            DiceMoney[DiceName[playerid]] = 0;
            DiceLock[playerid] = 0;
            DiceName[playerid] = 0;
            DiceMoney[playerid] = 0;
        }
        else
        {
            FloodStop[DiceName[playerid]] = 1; //Çàïðåùàåì ôëóä
            SetTimerEx("AntiFlood", 5000, false, "i", DiceName[playerid]); //Âûçûâàåì ïàáëèê, ãäå ðàçðåøàåì ôëóä
            SendClientMessage(DiceName[playerid], COLOR_RED, ""NS" {FFFFFF}Èãðîê îòêàçàëñÿ èãðàòü â êîñòè!");
            RemovePlayerAttachedObject(playerid, 1);
            RemovePlayerAttachedObject(DiceName[playerid], 1);
            DiceLock[DiceName[playerid]] = 0;
            DiceName[DiceName[playerid]] = 0;
            DiceMoney[DiceName[playerid]] = 0;
            DiceLock[playerid] = 0;
            DiceName[playerid] = 0;
            DiceMoney[playerid] = 0;
        }
        return 1;
    }
    if (dialogid == 21007)
    {
        new iplayer[MAX_PLAYER_NAME];
        new tplayer[MAX_PLAYER_NAME];
        new sssm[256];
        if (response == 1)
        {
            if (UniParam[playerid] != playerid)
            {
                GetPlayerName(playerid, iplayer, sizeof(iplayer));
                GetPlayerName(UniParam[playerid], tplayer, sizeof(tplayer));
                format(sssm, sizeof(sssm), "DDP  {FFA500} Èãðîê {FF0000}%s{FFA500} çàíÿëñÿ ñåêñîì ñ {FF0000}%s{FFA500}  <3", tplayer, iplayer);
                SendClientMessageToAll(COLOR_VIOLET, sssm);
                UniParam[playerid] = 0;
                FloodStop[playerid] = 1; //Çàïðåùàåì ôëóä
                SetTimerEx("AntiFlood", 5000, false, "i", playerid); //Âûçûâàåì ïàáëèê, ãäå ðàçðåøàåì ôëóä
            }
            else if (UniParam[playerid] == playerid)
            {
                GetPlayerName(playerid, iplayer, sizeof(iplayer));
                format(sssm, sizeof(sssm), "DDP  {FFA500} Èãðîê {FF0000}%s{FFA500} ïîäðî÷èë ñåáå :D", iplayer);
                SendClientMessageToAll(COLOR_VIOLET, sssm);
                UniParam[playerid] = 0;
                FloodStop[playerid] = 1;
                ApplyAnimation(playerid, "PAULNMAC", "wank_loop", 4.1, true, false, false, false, 0, SYNC_ALL);
                SetTimerEx("ClearAnimationsForPlayer", 5000, false, "i", playerid);
                SetTimerEx("AntiFlood", 5000, false, "i", playerid);
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû îòêàçàëèñü îò ýòîãî ïðåäëîæåíèÿ.");
            SendClientMessage(UniParam[playerid], COLOR_RED, ""NS" {FFFFFF}Âàì îòêàçàëè â âàøåì ïðåäëîæåíèè.");
            UniParam[playerid] = 0;
        }
        return 1;
    }
    if (dialogid == 7505)
    {
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_ASSAULT_RIFLE, pweap, pammo);
                    if ((pweap == WEAPON_AK47 || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 4000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_AK47 && pammo > 900)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_AK47 || pweap == WEAPON_FIST) && pammo <= 900)
                            {
                                MoneyK(playerid, -4000);
                                GivePlayerWeapon(playerid, WEAPON_AK47, 300);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_ASSAULT_RIFLE] = WEAPON_UNKNOWN;//îáíóëåíèå 5-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_ASSAULT_RIFLE] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                GivePlayerWeapon(playerid, WEAPON_AK47, pammo);
                            }
                        }
                    }
                }
                case 1:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_ASSAULT_RIFLE, pweap, pammo);
                    if ((pweap == WEAPON_M4 || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 9000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_M4 && pammo > 900)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_M4 || pweap == WEAPON_FIST) && pammo <= 900)
                            {
                                MoneyK(playerid, -9000);
                                GivePlayerWeapon(playerid, WEAPON_M4, 300);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_ASSAULT_RIFLE] = UNKNOWN_WEAPON;//îáíóëåíèå 5-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_ASSAULT_RIFLE] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                GivePlayerWeapon(playerid, WEAPON_M4, pammo);
                            }
                        }
                    }
                }
            }
            PlayerDialogWeapon(playerid, 5);
        }
        else if (response == 0)
        {
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 7506)
    {
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    GivePlayerWeapon(playerid, WEAPON_CAMERA, 500);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 1:
                {
                    GivePlayerWeapon(playerid, WEAPON_BRASSKNUCKLE, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 2:
                {
                    GivePlayerWeapon(playerid, WEAPON_CHAINSAW, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 3:
                {
                    GivePlayerWeapon(playerid, WEAPON_DILDO2, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 4:
                {
                    GivePlayerWeapon(playerid, WEAPON_FLOWER, 500);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 5:
                {
                    GivePlayerWeapon(playerid, WEAPON_SPRAYCAN, 500);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 6:
                {
                    GivePlayerWeapon(playerid, WEAPON_FIREEXTINGUISHER, 1000);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 7:
                {
                    GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 1);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
            }
            PlayerDialogWeapon(playerid, 6);
        }
        else if (response == 0)
        {
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 7504)
    {
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_LONG_RIFLE, pweap, pammo);
                    if ((pweap == WEAPON_RIFLE || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 1000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_RIFLE && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_RIFLE || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -1000);
                                GivePlayerWeapon(playerid, WEAPON_RIFLE, 100);
                            }
                            else
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_RIFLE, pammo);
                            }
                        }
                    }
                }
                case 1:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_LONG_RIFLE, pweap, pammo);
                    if ((pweap == WEAPON_SNIPER || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 9000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_SNIPER && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_SNIPER || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -9000);
                                GivePlayerWeapon(playerid, WEAPON_SNIPER, 100);
                            }
                            else
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_SNIPER, pammo);
                            }
                        }
                    }
                }
            }
            PlayerDialogWeapon(playerid, 4);
        }
        else if (response == 0)
        {
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 7503)
    {
        if (response == 1)
        {
            switch (listitem)
            {
                case 0:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_SHOTGUN, pweap, pammo);
                    if ((pweap == WEAPON_SAWEDOFF || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 5500)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_SAWEDOFF && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_SAWEDOFF || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -5500);
                                GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, 100);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_SHOTGUN] = UNKNOWN_WEAPON;//îáíóëåíèå 3-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_SHOTGUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_SAWEDOFF, pammo);
                            }
                        }
                    }
                }
                case 1:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_SHOTGUN, pweap, pammo);
                    if ((pweap == WEAPON_SHOTGSPA || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 6000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_SHOTGSPA && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_SHOTGSPA || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -6000);
                                GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, 100);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_SHOTGUN] = UNKNOWN_WEAPON;//îáíóëåíèå 3-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_SHOTGUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_SHOTGSPA, pammo);
                            }
                        }
                    }
                }

                case 2:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_SHOTGUN, pweap, pammo);
                    if ((pweap == WEAPON_SHOTGUN || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 4000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_SHOTGUN && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_SHOTGUN || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -4000);
                                GivePlayerWeapon(playerid, WEAPON_SHOTGUN, 100);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_SHOTGUN] = UNKNOWN_WEAPON;//îáíóëåíèå 3-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_SHOTGUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_SHOTGUN, pammo);
                            }
                        }
                    }
                }
            }
            PlayerDialogWeapon(playerid, 3);
        }
        else if (response == 0)
        {
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        }
        return 1;
    }

    if (dialogid == 7502)
    {
        if (response == 1)
        {
            switch (listitem)
            {
                case 0:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT:4, pweap, pammo);
                    if ((pweap == WEAPON_MP5 || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 3000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_MP5 && pammo > 900)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_MP5 || pweap == WEAPON_FIST) && pammo <= 900)
                            {
                                MoneyK(playerid, -3000);
                                GivePlayerWeapon(playerid, WEAPON_MP5, 300);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_MACHINE_GUN] = UNKNOWN_WEAPON;//îáíóëåíèå 4-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_MACHINE_GUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_MP5, pammo);
                            }
                        }
                    }
                }
                case 1:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_MACHINE_GUN, pweap, pammo);
                    if ((pweap == WEAPON_TEC9 || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 4000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_TEC9 && pammo > 900)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_TEC9 || pweap == WEAPON_FIST) && pammo <= 900)
                            {
                                MoneyK(playerid, -4000);
                                GivePlayerWeapon(playerid, WEAPON_TEC9, 300);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_MACHINE_GUN] = UNKNOWN_WEAPON;//îáíóëåíèå 4-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_MACHINE_GUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_TEC9, pammo);
                            }
                        }
                    }
                }
                case 2:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_MACHINE_GUN, pweap, pammo);
                    if ((pweap == WEAPON_UZI || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 2000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_UZI && pammo > 900)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_UZI || pweap == WEAPON_FIST) && pammo <= 900)
                            {
                                MoneyK(playerid, -2000);
                                GivePlayerWeapon(playerid, WEAPON_UZI, 300);
                            }
                            else
                            {
                                for (new j = 0; j < 13; j++) //ñîõðàíåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    //òîëüêî äëÿ 3, 4, è 5-ãî ñëîòîâ !!!
                                    GetPlayerWeaponData(playerid, WEAPON_SLOT:j, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                ResetPlayerWeapons(playerid);//îòáèðàåì îðóæèå è ïðåäìåòû
                                playweap[playerid][WEAPON_SLOT_MACHINE_GUN] = UNKNOWN_WEAPON;//îáíóëåíèå 4-ãî ñëîòà
                                playammo[playerid][WEAPON_SLOT_MACHINE_GUN] = 0;
                                for (new j = 0; j < 13; j++) //âîçâðàùåíèå ñëîòîâ îðóæèÿ è ïðåäìåòîâ
                                {
                                    GivePlayerWeapon(playerid, playweap[playerid][WEAPON_SLOT:j], playammo[playerid][WEAPON_SLOT:j]);
                                }
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_UZI, pammo);
                            }
                        }
                    }
                }
            }
            PlayerDialogWeapon(playerid, 2);
        }
        else if (response == 0)
        {
            ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        }
        return 1;
    }

    if (dialogid == 7501)
    {
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_PISTOL, pweap, pammo);
                    if ((pweap == WEAPON_COLT45 || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 2000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_COLT45 && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_COLT45 || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -2000);
                                GivePlayerWeapon(playerid, WEAPON_COLT45, 100);
                            }
                            else
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_COLT45, pammo);
                            }
                        }
                    }
                }
                case 1:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_PISTOL, pweap, pammo);
                    if ((pweap == WEAPON_SILENCED || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 2000)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_SILENCED && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_SILENCED || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -2000);
                                GivePlayerWeapon(playerid, WEAPON_SILENCED, 100);
                            }
                            else
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_SILENCED, pammo);
                            }
                        }
                    }
                }
                case 2:
                {
                    new WEAPON:pweap, pammo;
                    GetPlayerWeaponData(playerid, WEAPON_SLOT_PISTOL, pweap, pammo);
                    if ((pweap == WEAPON_DEAGLE || pweap == WEAPON_FIST) && GetPVarInt(playerid, "PlMon") < 2500)
                    {
                        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó Âàñ íåäîñòàòî÷íî äåíåã!");
                    }
                    else
                    {
                        if (pweap == WEAPON_DEAGLE && pammo > 300)
                        {
                            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Áîëüøå êóïèòü íåëüçÿ.");
                        }
                        else
                        {
                            if ((pweap == WEAPON_DEAGLE || pweap == WEAPON_FIST) && pammo <= 300)
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_DEAGLE, 100);
                            }
                            else
                            {
                                MoneyK(playerid, -2500);
                                GivePlayerWeapon(playerid, WEAPON_DEAGLE, pammo);
                            }
                        }
                    }
                }
            }
            PlayerDialogWeapon(playerid, 1);
        }
        else ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        return 1;
    }

    if (dialogid == 7500)
    {
        if (response)
        {
            switch (listitem)
            {
                case 0:
                {
                    GivePlayerWeapon(playerid, WEAPON_GOLFCLUB, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 1:
                {
                    GivePlayerWeapon(playerid, WEAPON_KNIFE, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 2:
                {
                    GivePlayerWeapon(playerid, WEAPON_BAT, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 3:
                {
                    GivePlayerWeapon(playerid, WEAPON_SHOVEL, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 4:
                {
                    GivePlayerWeapon(playerid, WEAPON_POOLSTICK, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
                case 5:
                {
                    GivePlayerWeapon(playerid, WEAPON_KATANA, 0);
                    PlayerPlaySound(playerid, 1054, 0.0, 0.0, 0.0);
                }
            }
            PlayerDialogWeapon(playerid, 0);
        }
        else ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
        return 1;
    }
    if (dialogid == 16)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå ñìåíà ñêèíà íåäîñòóïíà!");
        if (response)
        {
            if (InpTxtControl(inputtext) == 0)
            {
                SendClientMessage(playerid, COLOR_RED, "Îøèáêà, íåäîïóñòèìûé ñèìâîë:");
                SendClientMessage(playerid, COLOR_RED, "çàïðåù¸ííûå êîäû, èëè çíàê ïðîöåíòîâ, èëè ~ !!!");
                ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT, "Ñìåíà ñêèíà", "Ââåäèòå èä ñêèíà, íà êîòîðûé Âû õîòèòå ñìåíèòü:", "Ñìåíèòü", "Îòìåíà");
                return 1;
            }
            if (strval(inputtext) < 0 || strval(inputtext) > 311)
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}ID ñêèíà äîëæåí áûòü îò 0 äî 311!");
                ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT, "Ñìåíà ñêèíà", "Ââåäèòå èä ñêèíà, íà êîòîðûé Âû õîòèòå ñìåíèòü:", "Ñìåíèòü", "Îòìåíà");
                return 1;
            }
            PlayerInfo[playerid][pSkin] = strval(inputtext);
            SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âû óñïåøíî ñìåíèëè ñêèí!");
        }
        else
        {
            ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
			\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
			\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 17) //ìåíþ Öâåò
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Öâåò", "{FF0000}Êðàñíûé\n{991E1E}Êèðïè÷íûé\n{332AE0}Ñèíèé\
				\n{A43FF9}Ôèîëåòîâûé\n{FFFF33}Æ¸ëòûé\n{FF9933}Ñâåòëî-æ¸ëòûé\n{28A937}Çåëåíûé\n{1E9999}Áèðþçîâûé\n{808080}Ñåðûé\
				\n{FFFFFF}×åðíûé\n{FFFFFF}Áåëûé", "OK", "Íàçàä");
                return 1;
            }
            if (listitem == 0)ChangeVehicleColours(vehicleid, 3, 3);
            if (listitem == 1)ChangeVehicleColours(vehicleid, 175, 175);
            if (listitem == 2)ChangeVehicleColours(vehicleid, 79, 79);
            if (listitem == 3)ChangeVehicleColours(vehicleid, 211, 211);
            if (listitem == 4)ChangeVehicleColours(vehicleid, 6, 6);
            if (listitem == 5)ChangeVehicleColours(vehicleid, 65, 65);
            if (listitem == 6)ChangeVehicleColours(vehicleid, 86, 86);
            if (listitem == 7)ChangeVehicleColours(vehicleid, 155, 155);
            if (listitem == 8)ChangeVehicleColours(vehicleid, 9, 9);
            if (listitem == 9)ChangeVehicleColours(vehicleid, 0, 0);
            if (listitem == 10)ChangeVehicleColours(vehicleid, 1, 1);
            PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
            ShowPlayerDialog(playerid, 17, DIALOG_STYLE_LIST, "Öâåò", "{FF0000}Êðàñíûé\n{991E1E}Êèðïè÷íûé\n{332AE0}Ñèíèé\
			\n{A43FF9}Ôèîëåòîâûé\n{FFFF33}Æ¸ëòûé\n{FF9933}Ñâåòëî-æ¸ëòûé\n{28A937}Çåëåíûé\n{1E9999}Áèðþçîâûé\n{808080}Ñåðûé\
			\n{FFFFFF}×åðíûé\n{FFFFFF}Áåëûé", "OK", "Íàçàä");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 18) //ìåíþ Óñòàíîâêà âðåìåíè
    {
        if (!response) return ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
        new hours;
        sscanf(inputtext, "d", hours);
        if (hours < 0 || hours > 23)
        {
            ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Ñìåíà âðåìåíè", "Ââåäèòå ÷àñ âðåìåíè, êîòîðûé õîòèòå óñòàíîâèòü.\nÍàïðèìåð: 0, 12, 23, 15 (áåç çàïÿòûõ îäíèì çíà÷åíèåì)", "Ââîä", "Îòìåíà");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ââåäåíî íåâåðíîå çíà÷åíèå. ×àñ äîëæåí áûòü íå ìåíüøå 0 è íå áîëüøå 23.");
            return 1;
        }
        SetPlayerTime(playerid, hours, 0);
        format(string, sizeof(string), ""NS" {FFFFFF}Âû ñìåíèëè âðåìÿ íà %d ÷àñ(îâ)", hours);
        SendClientMessage(playerid, COLOR_VIOLET, string);
        return 1;
    }
    if (dialogid == 37) //ìåíþ Äèñêè
    {
        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Äèñêè", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
				\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nOffroad\nAhab\nVirtual\nAccess\nÑòàíäàðò", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 0)AddVehicleComponent(vehicleid, 1073);
            if (listitem == 1)AddVehicleComponent(vehicleid, 1074);
            if (listitem == 2)AddVehicleComponent(vehicleid, 1076);
            if (listitem == 3)AddVehicleComponent(vehicleid, 1077);
            if (listitem == 4)AddVehicleComponent(vehicleid, 1075);
            if (listitem == 5)AddVehicleComponent(vehicleid, 1079);
            if (listitem == 6)AddVehicleComponent(vehicleid, 1078);
            if (listitem == 7)AddVehicleComponent(vehicleid, 1080);
            if (listitem == 8)AddVehicleComponent(vehicleid, 1081);
            if (listitem == 9)AddVehicleComponent(vehicleid, 1082);
            if (listitem == 10)AddVehicleComponent(vehicleid, 1083);
            if (listitem == 11)AddVehicleComponent(vehicleid, 1084);
            if (listitem == 12)AddVehicleComponent(vehicleid, 1085);
            if (listitem == 13)AddVehicleComponent(vehicleid, 1025);
            if (listitem == 14)AddVehicleComponent(vehicleid, 1096);
            if (listitem == 15)AddVehicleComponent(vehicleid, 1097);
            if (listitem == 16)AddVehicleComponent(vehicleid, 1098);
            if (listitem >= 0 && listitem <= 16)PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            if (listitem == 17)
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_WHEELS);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            ShowPlayerDialog(playerid, 37, DIALOG_STYLE_LIST, "Äèñêè", "Shadow\nMega\nWires\nClassic\nRimshine\nCutter\
			\nTwist\nSwitch\nGrove\nImport\nDollar\nTrance\nAtomic\nOffroad\nAhab\nVirtual\nAccess\nÑòàíäàðò", "OK", "Îòìåíà");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 38) //ìåíþ Âèíèëû
    {

        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
            }
            else
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Âèíèëû", "Âèíèë 1\nÂèíèë 2\nÂèíèë 3\nÓäàëèòü âèíèë\n{FF0000}Ñåêðåòíûé âèíèë", "OK", "Íàçàä");
                return 1;
            }
            ChangeVehiclePaintjob(vehicleid, listitem);
            if (listitem == 4)
            {
                ChangeVehiclePaintjob(vehicleid, 4);
                ChangeVehicleColours(vehicleid, 18, 18);
            }
            PlayerPlaySound(playerid, 1134, 0.0, 0.0, 0.0);
            ShowPlayerDialog(playerid, 38, DIALOG_STYLE_LIST, "Âèíèëû", "Âèíèë 1\nÂèíèë 2\nÂèíèë 3\nÓäàëèòü âèíèë\n{FF0000}Ñåêðåòíûé âèíèë", "OK", "Íàçàä");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 40)
    {
        if (response)
        {
            for (new i = 0; i < MAX_PLAYERS; i++) //óáðàòü íåîí ñ ëþáîãî òðàíñïîðòà
            {
                if (GetPlayerVehicleID(playerid) == neon[i][2])
                {
                    DestroyObject(neon[i][0]);//óáðàòü íåîí
                    DestroyObject(neon[i][1]);//óáðàòü íåîí
                    neon[i][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                    neon[i][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                    neon[i][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
                }
            }
            if (neon[playerid][0] != 0)
            {
                DestroyObject(neon[playerid][0]);    //óáðàòü íåîí
            }
            if (neon[playerid][1] != 0)
            {
                DestroyObject(neon[playerid][1]);    //óáðàòü íåîí
            }
            if (listitem == 0)
            {
                neon[playerid][0] = CreateObject(18647, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18647, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 1)
            {
                neon[playerid][0] = CreateObject(18648, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18648, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 2)
            {
                neon[playerid][0] = CreateObject(18649, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18649, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 3)
            {
                neon[playerid][0] = CreateObject(18650, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18650, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 4)
            {
                neon[playerid][0] = CreateObject(18651, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18651, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 5)
            {
                neon[playerid][0] = CreateObject(18652, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][1] = CreateObject(18652, 0, 0, 0, 0, 0, 0, 100.0);
                neon[playerid][2] = GetPlayerVehicleID(playerid);//èä òðàíñïîðòà, íà êîòîðûé óñòàíàâëèâàåòñÿ íåîí
                AttachObjectToVehicle(neon[playerid][0], neon[playerid][2], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
                AttachObjectToVehicle(neon[playerid][1], neon[playerid][2], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            }
            if (listitem == 6)
            {
                neon[playerid][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                neon[playerid][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                neon[playerid][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
            }
            ShowPlayerDialog(playerid, 40, DIALOG_STYLE_LIST, "Íåîí", "{FF3300}Êðàñíûé\n{0033CC}Ñèíèé\n{33FF00}Çåë¸íûé\
			\n{FFFF00}Æ¸ëòûé\n{E63E85}Ðîçîâûé\nÁåëûé\nÓäàëèòü Íåîí", "Âûáðàòü", "Îòìåíà");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 41)
    {

        if (response)
        {
            if (InpTxtControl(inputtext) == 0)
            {
                SendClientMessage(playerid, COLOR_RED, "Îøèáêà, íåäîïóñòèìûé ñèìâîë:");
                SendClientMessage(playerid, COLOR_RED, "çàïðåù¸ííûå êîäû, èëè çíàê ïðîöåíòîâ, èëè ~ !!!");
                ShowPlayerDialog(playerid, 41, DIALOG_STYLE_INPUT, "Ñìåíèòü íîìåð", "Ââåäèòå íîìåð àâòî", "OK", "Îòìåíà");
                return 1;
            }
            if (!strlen(inputtext))
            {
                ShowPlayerDialog(playerid, 41, DIALOG_STYLE_INPUT, "Ñìåíèòü íîìåð", "Ââåäèòå íîìåð àâòî", "OK", "Îòìåíà");
                return 1;
            }
            if (strlen(inputtext) > 10)
            {
                ShowPlayerDialog(playerid, 41, DIALOG_STYLE_INPUT, "Ñìåíèòü íîìåð", "Cëèøêîì äëèííûé íîìåð!\nÂâåäèòå íîìåð àâòî", "OK", "Îòìåíà");
                return 1;
            }
            new Float:x, Float:y, Float:z, Float:ang, carid;
            carid = GetPlayerVehicleID(playerid);
            SetVehicleNumberPlate(carid, inputtext);
            GetVehiclePos(carid, x, y, z);
            GetVehicleZAngle(carid, ang);
            new Float:igx, Float:igy, Float:igz;
            foreach (Player, i)
            {
                if (IsPlayerConnected(i)) //äàëüíåéøåå âûïîëíÿåì åñëè èãðîê â êîííåêòå
                {
                    if (GetPlayerVehicleID(i) == carid && playerid != i)
                    {
                        //åñëè åñòü ïàññàæèð (ïàññàæèðû) â àâòî âîäèòåëÿ, òî:
                        GetPlayerPos(i, igx, igy, igz);//âûñàäèòü ïàññàæèðà (ïàññàæèðîâ)
                        SetPlayerPos(i, igx + 3, igy + 3, igz);
                    }
                }
            }
            SetVehicleToRespawn(carid);
            SetVehiclePos(carid, x, y, z);
            PutPlayerInVehicle(playerid, carid, 0);
            SetVehicleZAngle(carid, ang);
        }
        ShowPlayerDialog(playerid, 3900, DIALOG_STYLE_LIST, "Äîïîëíèòåëüíûé òþíèíã", "Ñìåíèòü íîìåð\nÎòêðûòü áàãàæíèê\
		\nÇàêðûòü áàãàæíèê\nÎòêðûòü êàïîò\nÇàêðûòü êàïîò\nÂêëþ÷èòü ñâåò\nÂûêëþ÷èòü ñâåò\nÇàìêíóòü äâåðè\nÎòêðûòü äâåðè\
		\nÂêëþ÷èòü ñèãíàëèçàöèþ\nÂûêëþ÷èòü ñèãíàëèçàöèþ\nÇàâåñòè äâèãàòåëü\nÇàãëóøèòü äâèãàòåëü", "Âûáîð", "Îòìåíà");
        return 1;
    }
    if (dialogid == 42) //ìåíþ Àðõàíãåë òþíèíã
    {

        if (response)
        {
            new vehicleid;
            if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
            {
                vehicleid = GetPlayerVehicleID(playerid);
                new cartype = GetVehicleModel(vehicleid);
                if (cartype != 562 && cartype != 560 && cartype != 565 &&
                        cartype != 559 && cartype != 561 && cartype != 558)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âû äîëæíû áûòü â ñòðèòðåéñåðñêîì àâòî!");
                    ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Àðõàíãåë òþíèíã", "Ïåðåäíèé áàìïåð X-flow\nÏåðåäíèé áàìïåð Alien\
					\nÏåðåäíèé áàìïåð ñòàíäàðò\nÇàäíèé áàìïåð X-Flow\nÇàäíèé áàìïåð Alien\nÇàäíèé áàìïåð ñòàíäàðò\nÑïîéëåð X-Flow\
					\nÑïîéëåð Alien\nÓäàëèòü ñïîéëåð\nÁîêîâûå þáêè X-Flow\nÁîêîâûå þáêè Alien\nÁîêîâûå þáêè ñòàíäàðò\
					\nÂîçäóõîçàáîðíèê X-Flow\nÂîçäóõîçàáîðíèê Alien\nÓäàëèòü âîçäóõîçàáîðíèê\nÂûõëîï X-flow\nÂûõëîï Alien\
					\nÂûõëîï ñòàíäàðò", "OK", "Íàçàä");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Àðõàíãåë òþíèíã", "Ïåðåäíèé áàìïåð X-flow\nÏåðåäíèé áàìïåð Alien\
				\nÏåðåäíèé áàìïåð ñòàíäàðò\nÇàäíèé áàìïåð X-Flow\nÇàäíèé áàìïåð Alien\nÇàäíèé áàìïåð ñòàíäàðò\nÑïîéëåð X-Flow\
				\nÑïîéëåð Alien\nÓäàëèòü ñïîéëåð\nÁîêîâûå þáêè X-Flow\nÁîêîâûå þáêè Alien\nÁîêîâûå þáêè ñòàíäàðò\
				\nÂîçäóõîçàáîðíèê X-Flow\nÂîçäóõîçàáîðíèê Alien\nÓäàëèòü âîçäóõîçàáîðíèê\nÂûõëîï X-flow\nÂûõëîï Alien\
				\nÂûõëîï ñòàíäàðò", "OK", "Íàçàä");
                return 1;
            }
            new cartype = GetVehicleModel(vehicleid);
            if (listitem == 0) //Ïåðåäíèé áàìïåð X-flow
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1172);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1170);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1152);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1173);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1157);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1165);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 1) //Ïåðåäíèé áàìïåð Alien
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1171);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1169);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1153);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1160);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1155);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1166);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 2) //Ïåðåäíèé áàìïåð ñòàíäàðò
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_FRONT_BUMPER);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            if (listitem == 3) //Çàäíèé áàìïåð X-Flow
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1148);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1140);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1151);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1161);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1156);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1167);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 4) //Çàäíèé áàìïåð Alien
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1149);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1141);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1150);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1159);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1154);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1168);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 5) //Çàäíèé áàìïåð ñòàíäàðò
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_REAR_BUMPER);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            if (listitem == 6) //Ñïîéëåð X-Flow
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1146);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1139);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1050);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1158);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1060);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1163);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 7) //Ñïîéëåð Alien
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1147);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1138);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1049);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1162);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1058);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1164);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 8) //Óäàëèòü ñïîéëåð
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SPOILER);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            if (listitem == 9) //Áîêîâûå þáêè X-Flow
            {
                if (cartype == 562)
                {
                    AddVehicleComponent(vehicleid, 1041);
                    AddVehicleComponent(vehicleid, 1039);
                }
                if (cartype == 560)
                {
                    AddVehicleComponent(vehicleid, 1031);
                    AddVehicleComponent(vehicleid, 1030);
                }
                if (cartype == 565)
                {
                    AddVehicleComponent(vehicleid, 1052);
                    AddVehicleComponent(vehicleid, 1048);
                }
                if (cartype == 559)
                {
                    AddVehicleComponent(vehicleid, 1070);
                    AddVehicleComponent(vehicleid, 1072);
                }
                if (cartype == 561)
                {
                    AddVehicleComponent(vehicleid, 1057);
                    AddVehicleComponent(vehicleid, 1063);
                }
                if (cartype == 558)
                {
                    AddVehicleComponent(vehicleid, 1093);
                    AddVehicleComponent(vehicleid, 1095);
                }

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 10) //Áîêîâûå þáêè Alien
            {
                if (cartype == 562)
                {
                    AddVehicleComponent(vehicleid, 1036);
                    AddVehicleComponent(vehicleid, 1040);
                }
                if (cartype == 560)
                {
                    AddVehicleComponent(vehicleid, 1026);
                    AddVehicleComponent(vehicleid, 1027);
                }
                if (cartype == 565)
                {
                    AddVehicleComponent(vehicleid, 1051);
                    AddVehicleComponent(vehicleid, 1047);
                }
                if (cartype == 559)
                {
                    AddVehicleComponent(vehicleid, 1069);
                    AddVehicleComponent(vehicleid, 1071);
                }
                if (cartype == 561)
                {
                    AddVehicleComponent(vehicleid, 1056);
                    AddVehicleComponent(vehicleid, 1062);
                }
                if (cartype == 558)
                {
                    AddVehicleComponent(vehicleid, 1090);
                    AddVehicleComponent(vehicleid, 1094);
                }

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 11) //Áîêîâûå þáêè ñòàíäàðò
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_SIDESKIRT);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            if (listitem == 12) //Âîçäóõîçàáîðíèê X-Flow
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1035);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1033);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1053);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1068);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1061);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1091);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 13) //Âîçäóõîçàáîðíèê Alien
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1038);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1032);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1054);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1067);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1055);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1088);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 14) //Óäàëèòü âîçäóõîçàáîðíèê
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_ROOF);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            if (listitem == 15) //Âûõëîï X-flow
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1037);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1029);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1045);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1066);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1059);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1089);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 16) //Âûõëîï Alien
            {
                if (cartype == 562)AddVehicleComponent(vehicleid, 1034);
                if (cartype == 560)AddVehicleComponent(vehicleid, 1028);
                if (cartype == 565)AddVehicleComponent(vehicleid, 1046);
                if (cartype == 559)AddVehicleComponent(vehicleid, 1065);
                if (cartype == 561)AddVehicleComponent(vehicleid, 1064);
                if (cartype == 558)AddVehicleComponent(vehicleid, 1092);

                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            }
            if (listitem == 17) //Âûõëîï ñòàíäàðò
            {
                new dop;
                dop = GetVehicleComponentInSlot(vehicleid, CARMODTYPE_EXHAUST);
                if (dop != 0)
                {
                    RemoveVehicleComponent(vehicleid, dop);
                    PlayerPlaySound(playerid, 5202, 0.0, 0.0, 0.0);
                }
            }
            ShowPlayerDialog(playerid, 42, DIALOG_STYLE_LIST, "Àðõàíãåë òþíèíã", "Ïåðåäíèé áàìïåð X-flow\nÏåðåäíèé áàìïåð Alien\
			\nÏåðåäíèé áàìïåð ñòàíäàðò\nÇàäíèé áàìïåð X-Flow\nÇàäíèé áàìïåð Alien\nÇàäíèé áàìïåð ñòàíäàðò\nÑïîéëåð X-Flow\
			\nÑïîéëåð Alien\nÓäàëèòü ñïîéëåð\nÁîêîâûå þáêè X-Flow\nÁîêîâûå þáêè Alien\nÁîêîâûå þáêè ñòàíäàðò\
			\nÂîçäóõîçàáîðíèê X-Flow\nÂîçäóõîçàáîðíèê Alien\nÓäàëèòü âîçäóõîçàáîðíèê\nÂûõëîï X-flow\nÂûõëîï Alien\
			\nÂûõëîï ñòàíäàðò", "OK", "Íàçàä");
        }
        else
        {
            ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
			\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
			\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 14000) //ñòðèòðåéñåðñêèå àâòî
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 562, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 565, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 559, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 561, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 560, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 558, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 22000) //ãîíî÷íûå àâòî
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 429, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 541, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 415, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 480, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 434, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 494, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 502, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 503, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 411, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 506, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 451, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 555, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 477, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 23000) //ëîóðàéäåðû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 536, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 575, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 534, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 567, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 535, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 576, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 412, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 24000) //äâóõäâåðíûå ñåäàíû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 602, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 496, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 401, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 518, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 527, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 589, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 419, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 587, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 533, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 526, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 474, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 545, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 517, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 410, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 14)
            {
                new vehid = 600, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 15)
            {
                new vehid = 436, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 16)
            {
                new vehid = 439, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 17)
            {
                new vehid = 549, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 18)
            {
                new vehid = 491, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 25000) //÷åòûð¸õäâåðíûå ñåäàíû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 445, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 507, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 585, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 466, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 492, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 546, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 551, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 516, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 467, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 426, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 547, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 405, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 580, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 409, dispz = 0;
                VehicSpawn(playerid, vehid, 8, 15, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 14)
            {
                new vehid = 550, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 15)
            {
                new vehid = 566, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 16)
            {
                new vehid = 540, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 17)
            {
                new vehid = 421, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 18)
            {
                new vehid = 529, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 26000) //äæèïû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 579, dispz = 0;
                VehicSpawn(playerid, vehid, 8, 15, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 400, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 404, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 489, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 479, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 442, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 458, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 27000) //ìîùíûå àâòî
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 402, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 542, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 603, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 475, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 28000) //ãðóçîâèêè è ðàáî÷èé òðàíñïîðò
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 499, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 498, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 609, dispz = 1;
                VehicSpawn(playerid, vehid, 0, 0, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 524, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 532, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 578, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 486, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 406, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 573, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 455, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 588, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 403, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 423, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 414, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 14)
            {
                new vehid = 443, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 15)
            {
                new vehid = 515, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 16)
            {
                new vehid = 514, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 17)
            {
                new vehid = 531, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 18)
            {
                new vehid = 456, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 29000) //ë¸ãêèå ãðóçîâèêè è ôóðãîíû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 459, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 422, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 482, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 530, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 418, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 572, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 582, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 413, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 440, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 543, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 583, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 478, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 554, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 302)
    {
        if (response)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû âûáðàëè ALT/2(â òà÷êå)");
            SetPVarInt(playerid, "MnMode", 1);
            printf(" --> Èãðîê %s [%d] âêëþ÷èë êíîïêó ìåíþ ALT/2", PlayerInfo[playerid][pName], playerid);
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `players` SET `keymenu`='1' WHERE `PID`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, string, "", "");

            for (new i; i < sizeof(RandomSpawns); i++)
            {
                DeletePlayer3DTextLabel(playerid, SpawnTextDraw[playerid][i]);
                if (GetPVarInt(playerid, "MnMode") == 1)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}ALT/2(â ìàøèíå)\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                else if (GetPVarInt(playerid, "MnMode") == 2)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}Y\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                SpawnTextDraw[playerid][i] = CreatePlayer3DTextLabel(playerid, string, COLOR_VIOLET, RandomSpawns[i][0], RandomSpawns[i][1], RandomSpawns[i][2], 20.0);
            }

        }
        else
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû âûáðàëè Y");
            SetPVarInt(playerid, "MnMode", 2);
            printf(" --> Èãðîê %s [%d] âêëþ÷èë êíîïêó ìåíþ Y", PlayerInfo[playerid][pName], playerid);
            mysql_format(ServerDB, string, sizeof(string), "UPDATE `players` SET `keymenu`='2' WHERE `PID`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, string, "", "");

            for (new i; i < sizeof(RandomSpawns); i++)
            {
                DeletePlayer3DTextLabel(playerid, SpawnTextDraw[playerid][i]);
                if (GetPVarInt(playerid, "MnMode") == 1)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}ALT/2(â ìàøèíå)\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                else if (GetPVarInt(playerid, "MnMode") == 2)format(string, sizeof(string), "Ä{CCFF00}îáðî Ïîæàëîâàòü íà {8F30E4}Drift Dreams!\nÃ{CCFF00}ëàâíîå ìåíþ íà êíîïêó {8F30E4}Y\nÂÊîíòàêòå:{CCFF00} "VK_G"\n{8F30E4}Ïîæàëóéñòà, ÷èòàéòå ïðàâèëà: {CCFF00}/rules");
                SpawnTextDraw[playerid][i] = CreatePlayer3DTextLabel(playerid, string, COLOR_VIOLET, RandomSpawns[i][0], RandomSpawns[i][1], RandomSpawns[i][2], 20.0);
            }
        }
        return 1;
    }
    if (dialogid == 30000) //òðàíñïîðò äëÿ ðàçâëå÷åíèÿ
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 568, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 424, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 504, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 457, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 483, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 508, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 571, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 500, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 444, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 556, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 557, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 471, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 495, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 539, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 14)
            {
                if (playcar[playerid] == 0)
                {
                    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çàñïàâíåí {CCFF00}JetPack");
                }
                else
                {
                    if (neon[playerid][0] != 0)
                    {
                        DestroyObject(neon[playerid][0]);    //óáðàòü íåîí
                    }
                    if (neon[playerid][1] != 0)
                    {
                        DestroyObject(neon[playerid][1]);    //óáðàòü íåîí
                    }
                    neon[playerid][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                    neon[playerid][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                    neon[playerid][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
                    foreach (Player, i) //ïîèñê è óäàëåíèå ÷óæîãî íåîíà
                    {
                        if (playcar[playerid] == neon[i][2])
                        {
                            DestroyObject(neon[i][0]);//óáðàòü íåîí
                            DestroyObject(neon[i][1]);//óáðàòü íåîí

                            neon[i][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
                        }
                    }
                    DestroyVehicle(playcar[playerid]);//óíè÷òîæèòü ñâîé òðàíñïîðò
                    playcar[playerid] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà
                    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Çàñïàâíåí {CCFF00}JetPack");
                }
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 31000) //âåëîñèïåäû è ìîòîöèêëû
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 481, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 509, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 510, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 581, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 462, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 521, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 463, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 522, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 461, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 448, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 468, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 586, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 32000) //àâòî äëÿ òðàíñïîðòèðîâêè
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 485, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 431, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 438, dispz = 0;
                VehicSpawn(playerid, vehid, 6, 6, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 437, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 574, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 420, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 525, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 408, dispz = 1;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 552, dispz = 0;
                VehicSpawn(playerid, vehid, -1, -1, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 3301) //êîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 416, vehcol1 = 8, vehcol2 = 3, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 433, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 427, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 490, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 528, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 407, vehcol1 = 3, vehcol2 = 8, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 544, vehcol1 = 3, vehcol2 = 8, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 523, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 470, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 596, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 597, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 598, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 599, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 428, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
                return 1;
            }
            if (listitem == 14)
            {
                new vehid = 601, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ôëèïíóòü òà÷êó ìîæíî êíîïêîé 'N'");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Òåëåïîðòèðîâàòü ê ñåáå òðàíñïîðò ïðè ïîòåðå ìîæíî êîìàíäîé {CCFF00}/getv");
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 3401) //âîçäóøíûé òðàíñïîðò
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 592, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 577, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 511, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 548, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 512, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 593, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 417, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 487, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 553, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 488, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 10)
            {
                new vehid = 497, vehcol1 = 0, vehcol2 = 1, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 11)
            {
                new vehid = 563, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 12)
            {
                new vehid = 476, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 13)
            {
                new vehid = 447, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 14)
            {
                new vehid = 519, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 15)
            {
                new vehid = 460, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 16)
            {
                new vehid = 469, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 17)
            {
                new vehid = 513, vehcol1 = 8, vehcol2 = 15, dispz = 1;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
		\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
		\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
		\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 3501) //âîäíûé òðàíñïîðò
    {
        if (response)
        {
            if (listitem == 0)
            {
                new vehid = 472, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 1)
            {
                new vehid = 473, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 2)
            {
                new vehid = 493, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 3)
            {
                new vehid = 595, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 4)
            {
                new vehid = 484, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 5)
            {
                new vehid = 430, vehcol1 = 0, vehcol2 = 1, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 6)
            {
                new vehid = 453, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 7)
            {
                new vehid = 452, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 8)
            {
                new vehid = 446, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
                return 1;
            }
            if (listitem == 9)
            {
                new vehid = 454, vehcol1 = 8, vehcol2 = 15, dispz = 0;
                VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
			\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
			\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
			\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 2100) //ìåíþ Òèï òðàíñïîðòà
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå òðàíñïîðò íåäîñòóïåí!");
        if (response)PlayerDialogCars(playerid, listitem);
        else ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Òðàíñïîðòíîå ñðåäñòâî", "Òèï òðàíñïîðòà\nÒþíèíã\nÎòêëþ÷èòü / âêëþ÷èòü àâòîìàòè÷åñêèé ðåìîíò\nÓíè÷òîæèòü ëþáîé òðàíñïîðò\nÔëèïíóòü\nËè÷íûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        return 1;
    }
    if (dialogid == 11)
    {
        if (response)
        {
            if (listitem == 0)
            {
                ShowPlayerDialog(playerid, 2100, DIALOG_STYLE_LIST, "Òèï òðàíñïîðòà", "Ñòðèòðåéñåðñêèå àâòî\nÃîíî÷íûå àâòî\
				\nËîóðàéäåðû\nÄâóõäâåðíûå ñåäàíû\n×åòûð¸õäâåðíûå ñåäàíû\nÄæèïû\nÌîùíûå àâòî\nÃðóçîâèêè è ðàáî÷èé òðàíñïîðò\
				\nË¸ãêèå ãðóçîâèêè è ôóðãîíû\nÒðàíñïîðò äëÿ ðàçâëå÷åíèÿ\nÂåëîñèïåäû è ìîòîöèêëû\nÀâòî äëÿ òðàíñïîðòèðîâêè\
				\nÊîììåð÷åñêèé è ãîñóäàðñòâåííûé òðàíñïîðò\nÂîçäóøíûé òðàíñïîðò\nÂîäíûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 1)
            {
                ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Òþíèíã", "Äèñêè\nÃèäðàâëèêà\nÓäàëèòü ãèäðàâëèêó\nÖâåò\
				\nÂèíèëû\nÀðõàíãåë òþíèíã\nÄîïîëíèòåëüíûé òþíèíã\nÂûêëþ÷èòü ôàðû\nÓäàëèòü äåòàëè òðàíñïîðòà\
				\nÓäàëèòü áàìïåðà\nÏðîêîëîòü øèíû\nÍåîí\nÔàðû\nÁûñòðûé òþíèíã\nÎñîáûé òþíèíã", "Âûáîð", "Îòìåíà");
                return 1;
            }
            if (listitem == 2)
            {
                if (!autorepair[playerid])
                {
                    autorepair[playerid] = true;
                    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Àâòîìàòè÷åñêèé ðåìîíò", "Àâòîìàòè÷åñêèé ðåìîíò âêëþ÷åí!", "OK", "");
                }
                else
                {
                    autorepair[playerid] = false;
                    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Àâòîìàòè÷åñêèé ðåìîíò", "Àâòîìàòè÷åñêèé ðåìîíò îòêëþ÷åí!", "OK", "");
                }
                return 1;
            }
            if (listitem == 3) //óíè÷òîæèòü ëþáîé òðàíñïîðò
            {
                new car = GetPlayerVehicleID(playerid);
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER) //åñëè èãðîê íà ìåñòå âîäèòåëÿ, òî:
                {
                    foreach (Player, i) //óíè÷òîæèòü ëþáîé òðàíñïîðò
                    {
                        if (GetPlayerVehicleID(playerid) == playcar[i]) //óíè÷òîæèòü ÷óæîé òðàíñïîðò âìåñòå ñ íåîíîì
                        {
                            if (neon[i][0] != 0)
                            {
                                DestroyObject(neon[i][0]);    //óáðàòü íåîí
                            }
                            if (neon[i][1] != 0)
                            {
                                DestroyObject(neon[i][1]);    //óáðàòü íåîí
                            }
                            neon[i][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
                            playcar[i] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà
                        }
                        if (GetPlayerVehicleID(playerid) == neon[i][2]) //óíè÷òîæèòü ÷óæîé íåîí íà ñâîáîäíîì òðàíñïîðòå
                        {
                            DestroyObject(neon[i][0]);//óáðàòü íåîí
                            DestroyObject(neon[i][1]);//óáðàòü íåîí
                            neon[i][0] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][1] = 0;//ïðèñâàèâàåì íåîíó íåñóùåñòâóþùèé íîìåð îáúåêòà
                            neon[i][2] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ íåîíîì
                        }
                    }
                    DestroyVehicle(car);
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû áûòü íà ìåñòå âîäèòåëÿ!");
                }
                return 1;
            }
            if (listitem == 4)
            {
                if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER //åñëè èãðîê íà ìåñòå âîäèòåëÿ,
                        || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) //èëè íà ìåñòå ïàññàæèðà, òî:
                {
                    new Float:angle;
                    new VID = GetPlayerVehicleID(playerid);
                    GetVehicleZAngle(VID, angle);//ôëèïíóòü
                    SetVehicleZAngle(VID, angle);
                }
            }
            if (listitem == 5)
            {
                /*

                enum PlayerCars{
                cID,
                cOwner,
                cCarid,
                cTextcar[256]
                };
                new MyCarInfo[MAX_PLAYERS][MAX_SLOTS_CAR][PlayerCars];
                */
                new str[512];
                for (new i = 0; i < MAX_SLOTS_CAR; i++)
                {
                    if (MyCarInfo[playerid][i][cID] != -1) format(str, sizeof(str), "%s\n{CCFF00}%s | {FFFFFF}Êóïëåí", str, GetVehicleName(MyCarInfo[playerid][i][cCarid]));
                    else
                    {
                        if (i == 3)format(str, sizeof(str), "%s\n{FFFF00}Ñëîò %d | {FFFFFF}Ñâîáîäåí {00FFFF}VIP", str, i + 1);
                        else if (i == 4)format(str, sizeof(str), "%s\n{FFFF00}Ñëîò %d | {FFFFFF}Ñâîáîäåí {00FFFF}VIP", str, i + 1);
                        else format(str, sizeof(str), "%s\n{FFFF00}Ñëîò %d | {FFFFFF}Ñâîáîäåí", str, i + 1);
                    }
                }
                ShowPlayerDialog(playerid, 1100, DIALOG_STYLE_LIST, "Ëè÷íûé òðàíñïîðò", str, "Âûáîð", "Íàçàä");
            }
        }
        else
        {
            PlayerDialogMenu(playerid);
        }
        return 1;
    }
    if (dialogid == 1100)
    {
        if (!response) return ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Òðàíñïîðòíîå ñðåäñòâî", "Òèï òðàíñïîðòà\nÒþíèíã\nÎòêëþ÷èòü / âêëþ÷èòü àâòîìàòè÷åñêèé ðåìîíò\nÓíè÷òîæèòü ëþáîé òðàíñïîðò\nÔëèïíóòü\nËè÷íûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
        if (listitem < 3)
        {

        }
        else
        {
            if (PlayerInfo[playerid][pVIP] < 1) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ìîæåòå âçàèìîäåéñòâîâàòü ñ ñëîòîì, âû íå {00FFFF}VIP{FF0000}!");
            else
            {

            }
        }
        return 1;
    }
    if (dialogid == 13) //ìåíþ Ìåíþ èãðîêà
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå íàñòðîéêè íåäîñòóïíû!");
        if (response)
        {
            if (listitem == 0)
            {
                if (CheckFlood(playerid, "StopHeal", 5) == 0) //åñëè ïåðåìåííàÿ çàäåðæêè ÍÅ ðàâíà 0,
                {
                    //È èãðîê ÍÅ àäìèí, òî:
                    return 1;
                }
                else//èíà÷å:
                {
                    SetPlayerArmour(playerid, 100);
                }
                return 1;
            }
            if (listitem == 1)
            {
                if (CheckFlood(playerid, "StopHeal", 5) == 0) //åñëè ïåðåìåííàÿ çàäåðæêè ÍÅ ðàâíà 0,
                {
                    //È èãðîê ÍÅ àäìèí, òî:
                    return 1;
                }
                else//èíà÷å:
                {
                    SetPlayerHealth(playerid, 100);
                }
                return 1;
            }
            if (listitem == 2)
            {
                ShowPlayerDialog(playerid, 16, DIALOG_STYLE_INPUT, "Ñìåíà ñêèíà", "Ââåäèòå èä ñêèíà, íà êîòîðûé Âû õîòèòå ñìåíèòü:", "Ñìåíèòü", "Îòìåíà");
                return 1;
            }
            if (listitem == 3)
            {
                ShowPlayerDialog(playerid, 50, DIALOG_STYLE_LIST, "Ñìåíà ñòèëÿ áîÿ", "Normal\nBoxing\nKung Fu\nKnee-head\nGrab-kick\nElbow", "Âûáðàòü", "Îòìåíà");
                return 1;
            }
            if (listitem == 4)
            {
                SetPlayerAttachedObject(playerid, 2, 19066, 2, 0.13, 0.0, 0.0, 0.0, 80.0, 80.0);//íîâîãîäíÿÿ øàïêà
                return 1;
            }
            if (listitem == 5)
            {
                RemovePlayerAttachedObject(playerid, 2);//óáðàòü íîâîãîäíþþ øàïêó
                return 1;
            }
            if (listitem == 6)
            {
                SetPlayerArmour(playerid, 0);
                SetPlayerHealth(playerid, 0);
                return 1;
            }
            if (listitem == 7)
            {
                STATPlayer(playerid, playerid);
                return 1;
            }
            if (listitem == 8)
            {
                ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Ñìåíà âðåìåíè", "Ââåäèòå ÷àñ âðåìåíè, êîòîðûé õîòèòå óñòàíîâèòü.\nÍàïðèìåð: 0, 12, 23, 15 (áåç çàïÿòûõ îäíèì çíà÷åíèåì)", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 9)
            {
                if (PlayerInfo[playerid][pGang] > 0 && PlayerInfo[playerid][pVIP] <= 0)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ìîæåòå ìåíÿòü öâåò íèêà, âû â áàíäå{FF0000}!");
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}×òîáû ìåíÿòü öâåò íèêà íàõîäÿñü â áàíäå, ïîëó÷èòå VIP ïðàâà{FF0000}!");
                    return 1;
                }
                ShowPlayerDialog(playerid, 44, DIALOG_STYLE_LIST, "Öâåò íèêà", "{FF0000}Êðàñíûé\n{FF3F3F}Ñâåòëî-êðàñíûé\
				\n{FF3F00}Êèðïè÷íûé\n{BF3F00}Êîðè÷íåâûé\n{FF7F3F}Ñâåòëî-êîðè÷íåâûé\n{FF7F00}Îðàíæåâûé\n{FFFF00}Æ¸ëòûé\
				\n{3FFF3F}Ñâåòëî-çåë¸íûé\n{00FF00}Çåë¸íûé\n{00BF00}Ò¸ìíî-çåë¸íûé\n{00FFFF}Áèðþçîâûé\n{00BFFF}Ãîëóáîé\
				\n{3F3FFF}Ñâåòëî-ñèíèé\n{0000FF}Ñèíèé\n{7F3FFF}Ñâåòëî-ôèîëåòîâûé\n{7F00FF}Ôèîëåòîâûé\
				\n{FF00FF}Ñèðåíåâûé\n{7F7F7F}Ñåðûé\n{FFFFFF}Íåâèäèìûé", "OK", "Îòìåíà");
                return 1;
            }
            if (listitem == 10)
            {
                if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS" Äëÿ èñïîëüçîâàíèÿ ôóíêöèè âûéäèòå èç òðàíñïîðòà{FF0000}!");
                    return 1;
                }
                static const list_animations [] =
                    "1. Òàíåö 1\n2. Òàíåö 2\n3. Òàíåö 3\n4. Òàíåö 4\n5. Òàíåö 5\n6. Òàíåö 6\n\
				7. Ìàõàòü ðóêîé\n8. Ëå÷ü íà çåìëþ\n9. Ïîõîäêà ïüÿíîãî\n10. Êóâûðêàòüñÿ\n\
				11. Ïîïðîùàòüñÿ\n12. ×èòàòü ðýï\n13. Óêðûòüñÿ\n14. Ïîäëîæèòü áîìáó\n\
				15. Íàäåòü ìàñêó\n16. Âûòÿíóòü ðóêó ïåðåä ñîáîé\n17. Ñëîæèòü ðóêè âìåñòå\n\
				18. Ñúåë ÷òî-òî íå òî...\n19. Ïåðåêóñèòü\n20. Øë¸ïíóòü êîìó-òî ïî çàäíèöå\n\
				21. Ïðåäëîæèòü íàðêîòèêè\n22. Ýôôåêò ýëåêòðîøîêåðà\n23. Ìóæñêîå êóðåíèå\n\
				24. Æåíñêîå êóðåíèå\n25. Ïðèñåñòü\n26. Âîñòî÷íîå åäèíîáîðñòâî\n27. Âûïèòü íàïèòîê\n\
				28. Òàíåö íà îäíîé íîãå\n29. Ïîçà âðàòàðÿ\n30. Facepalm\n\
				31. Ýëåìåíò âîñòî÷íîãî òàíöà\n32. Ïîçâàòü êîãî-òî\n33. Ðóêè ââåðõ!\n\
				34. Ñïàòü íà áîêó\n35. Ñïàòü íà ñïèíå\n36. Ñìîòðåòü ïî ñòîðîíàì\n\
				37. Îáëîêîòèòüñÿ íà áîê\n38. Òîëêíóòü áîêîì\n39. Ðàçäóìüå\n\
				40. Ëå÷ü, îïåðåâøèñü íà ëàäîíü\n41. Ñåñòü íà ñòóë\n\
				42. Ñèäåòü óñòàâøèì çà êîìïüþòåðîì\n43. Ñèäåòü çà ñòîëîì\n\
				44. Ñèäåòü è ïå÷àòàòü\n45. Âçÿòü ÷òî-òî è ðàññìîòðåòü\n\
				46. Ñåñòü, çàêèíóâ íîãó íà íîãó\n47. Îòêàçàòüñÿ îò ÷åãî-ëèáî\n\
				48. Ïîöåëóé 1\n49. Ïîöåëóé 2\n50. Ïîöåëóé 3\n\
				51. Ðàçìàõèâàòü ðóêàìè íà ìåñòå\n52. Èñêóñòâåííîå äûõàíèå\n\
				53. Ïîù¸÷èíû äëÿ ëåæà÷åãî\n54. Ïîäãëÿäûâàòü ÷åðåç ÷òî-òî\n\
				55. Äâèæåíèå òîðåîäîðà\n56. Ñåñòü íà ñòóë (2)\n57. Ñåñòü íà ñòóë (3)\n\
				58. Ñìîòðåòü íàâåðõ\n59. Óêàçàòü ðóêîé íàâåðõ\n60. Áûòü â ñòðàõå\n\
				61. Ïðèçûâàòü ê ÷åìó-ëèáî\n62. Ñõîäèòü ïî-ìàëåíüêîìó\n63. Ãàíãñòåðñêèé æåñò\n\
				64. Ãîëîñîâàòü íà îñòàíîâêå\n65. Óäàð íîãîé\n66. Ñòó÷àòüñÿ â äâåðü\n\
				67. Óñòðîèòü áóíò\n68. Ïðèòàíöîâûâàòü\n69. Ëå÷ü íà çåìëþ (2)\n\
				70. Ïëîõîå ñàìî÷óâñòâèå\n71. Ïðèâåòñòâèå 1\n72. Ïðèâåòñòâèå 2\n\
				73. Ïðèâåòñòâèå 3\n74. Ïðèâåòñòâèå 4";
                ShowPlayerDialog(playerid, 43, DIALOG_STYLE_LIST, "Àíèìàöèè", list_animations, "Âûáîð", "Íàçàä");
                return 1;
            }
            if (listitem == 11)
            {
                ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_LIST, "Îäåæäà", "Øëåìû\nÎ÷êè\nÁàíäàíû\nÌàñêè\nÓäàëèòü", "Oê", "Íàçàä");
                return 1;
            }
            if (listitem == 12)
            {
                ShowPlayerDialog(playerid, 2729, DIALOG_STYLE_LIST, "Îáúåêòû", "Øëÿïà Ñàíòû\nÏîïóãàé íà ïëå÷å\nÏîïóãàé\nÁåãåìîò\nÊåïêà\nÊåéñ â ðóêå\nÌåøîê äåíåã\nÀêóëà\nÄåëüôèí\nØàïêà êóðèöû\nÙèò íà ñïèíå\nÙèò â ðóêå\nÔîíàðèê\
				\nÝëåêòðîØîê\nÊðàñíûé äûì\nÁàñêåòáîëüíûé ìÿ÷\nÂîäÿíîé øàð\nÄîñêà äëÿ ñåðôèíãà\nÃèòàðà íà ñïèíå\nÃàìáóðãåð\nÁóòûëêà\nÏîæàðíàÿ øàïêà\nÌàãíèòîôîí\nÐîãà\nÔàêåë â ëåâîé ðóêå\nÃîëîâà CJ\nÃðàáëè â ëåâîé ðóêå\n{FF0000}Ñíÿòü âñ¸", "Îê", "Íàçàä");
                return 1;
            }
        }
        else
        {
            PlayerDialogMenu(playerid);
        }
        return 1;
    }
    if (dialogid == 2729) // Ðàçíîå
    {
        if (response)
        {
            if (listitem == 0) // Øëÿïà Ñàíòû
            {
                SetPlayerAttachedObject(playerid, 0, 19065, 2, 0.121128, 0.023578, 0.001139, 222.540847, 90.773872, 211.130859, 1.098305, 1.122310, 1.106640);   // SantaHat
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 1) // Ïîïóãàé íà ïëå÷å
            {
                SetPlayerAttachedObject(playerid, 0, 19078, 1, 0.329150, -0.072101, 0.156082, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);   // TheParrot1
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 2) // Ïîïóãàé
            {
                SetPlayerAttachedObject(playerid, 0, 19078, 1, -1.097527, -0.348305, -0.008029, 0.000000, 0.000000, 0.000000, 8.073966, 8.073966, 8.073966);   // TheParrot1 - parrot man
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 3) // Áåãåìîò
            {
                SetPlayerAttachedObject(playerid, 0, 1371, 1, 0.037538, 0.000000, -0.020199, 350.928314, 89.107200, 180.974227, 1.000000, 1.000000, 1.000000);   // CJ_HIPPO_BIN - /hippo
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 4) // Êåïêà
            {
                SetPlayerAttachedObject(playerid, 0, 18939, 2, 0.147825, 0.010626, -0.004892, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);   // CapBack1 - Sapca RuTeN
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 5) // Êåéñ â ðóêå
            {
                SetPlayerAttachedObject(playerid, 0, 1210, 6, 0.259532, -0.043030, -0.009978, 85.185333, 271.380615, 253.650283, 1.000000, 1.000000, 1.000000);   // briefcase - briefcase
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 6) // Ìåøîê äåíåã
            {
                SetPlayerAttachedObject(playerid, 0, 1550, 15, 0.016491, 0.205742, -0.208498, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);   // CJ_MONEY_BAG - money
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 7) // Àêóëà
            {
                SetPlayerAttachedObject(playerid, 0, 1608, 1, 0.201047, -1.839761, -0.010739, 0.000000, 90.005447, 0.000000, 1.000000, 1.000000, 1.000000);   // shark - shark
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 8) // Äåëüôèí
            {
                SetPlayerAttachedObject(playerid, 0, 1607, 1, 0.000000, 0.000000, 0.000000, 0.000000, 86.543479, 0.000000, 1.000000, 1.000000, 1.000000);   // dolphin - /dolphin
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 9) // Øàïêà êóðèöû
            {
                SetPlayerAttachedObject(playerid, 0, 19137, 2, 0.110959, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);   // CluckinBellHat1 - 7
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 10) // Ùèò íà ðóêå
            {
                SetPlayerAttachedObject(playerid, 0, 18637, 1, 0, -0.1, 0.18, 90, 0, 272, 1, 1, 1);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 11) // Ùèò íà ñïèíå
            {
                SetPlayerAttachedObject(playerid, 0, 18637, 4, 0.3, 0, 0, 0, 170, 270, 1, 1, 1);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 12) // Ôîíàðèê
            {
                SetPlayerAttachedObject(playerid, 0, 18641, 5, 0.1, 0.02, -0.05, 0, 0, 0, 1, 1, 1);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 13) // Ýëåêòðîøîê
            {
                SetPlayerAttachedObject(playerid, 0, 18642, 5, 0.12, 0.02, -0.05, 0, 0, 45, 1, 1, 1);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 14)
            {
                SetPlayerAttachedObject(playerid, 0, 18728, 2, 0.134301, 1.475258, -0.192459, 82.870338, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 15)
            {
                SetPlayerAttachedObject(playerid, 0, 2114, 2, 0.043076, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 16) //Âîäÿíîé øàð
            {
                SetPlayerAttachedObject(playerid, 0, 18844, 1, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, -0.027590, -0.027590, -0.027590);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 17) // Äîñêà äëÿ ñåðôèíãà
            {
                SetPlayerAttachedObject(playerid, 0, 2404, 1, 0.0089, -0.1350, -0.0129, 1.00, 125.49, 0.89, 0.86, 0.78, 0.71);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 18) //Ãèòàðà íà ñïèíå
            {
                SetPlayerAttachedObject(playerid, 0, 19317, 1, 0.2330, -0.0989, -0.0299, -2.49, 88.09, 2.09, 0.73, 1.89, 0.71);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 19) //Ãàìáóðãåð
            {
                SetPlayerAttachedObject(playerid, 0, 2703, 2, -0.6070, 0.2190, -0.0129, 176.99, 0.00, 0.00, 7.11, 6.89, 6.92);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 20) //áóòûëêà
            {
                SetPlayerAttachedObject(playerid, 0, 1486, 1, 0.1590, 0.0180, 0.0040, -90.49, 91.09, 12.80, 9.14, 10.51, 6.60);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 21) //Ïîæàðíàÿ øàïêà
            {
                SetPlayerAttachedObject(playerid, 0, 19330, 2, 0.1730, -0.0180, 0.0029, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 22) //ìàãíèòîëà
            {
                SetPlayerAttachedObject(playerid, 0, 2226, 5, 0.3089, 0.0089, 0.0380, -20.29, -99.49, 0.00, 1.00, 1.00, 1.00);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 23) //ðîãà
            {
                SetPlayerAttachedObject(playerid, 0, 19314, 2, 0.1360, 0.0680, 0.0019, -0.29, 0.00, -46.79, 1.00, 1.00, 1.00);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 24) //ôàêåë â ëåâîé ðóêå
            {
                SetPlayerAttachedObject(playerid, 0, 3461, 5, -0.4580, -0.2119, -0.4439, 153.10, -46.59, 80.80, 0.45, 0.89, 0.73);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 25) //ãîëîâà CJ
            {
                SetPlayerAttachedObject(playerid, 0, 18963, 2, 0.0989, 0.0140, -0.0069, 85.49, 87.10, 6.89, 1.37, 1.38, 1.12);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 26) //Ãðàáëè â ëåâîé ðóêå
            {
                SetPlayerAttachedObject(playerid, 0, 18890, 5, 0.0519, -0.0409, 0.1460, 0.00, 0.00, 0.00, 1.00, 1.00, 1.00);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem == 27) // Ñíÿòèå ïðåäìåòîâ
            {
                new zzz = 0;
                while (zzz != MAX_PLAYER_ATTACHED_OBJECTS)
                {
                    if (IsPlayerAttachedObjectSlotUsed(playerid, zzz))
                    {
                        RemovePlayerAttachedObject(playerid, zzz);
                    }
                    zzz++;
                }
            }
        }
        else ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
				\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
				\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
        return 1;
    }
    if (dialogid == 2730) // Îäåæäà
    {
        if (response)
        {
            if (listitem == 0)
            {
                ShowPlayerDialog(playerid, 2731, DIALOG_STYLE_LIST, "Øëåìû", "Motorcross Helm\nMotorradhelm\nMotorradhelm\nMotorradhelm\nMotorradhelm", "Âûáðàòü", "Íàçàä");
            }
            if (listitem == 1)
            {
                ShowPlayerDialog(playerid, 2732, DIALOG_STYLE_LIST, "Î÷êè", "Brille 1\nBrille 2\nBrille 3\nBrille 4\nBrille 5\nBrille 6\nBrille 7\nBrille 8\nBrille 9\nBrille 10\nBrille 11\nBrille 12\nBrille 13\nBrille 14\nBrille 15\nBrille 16\nBrille 17\nBrille 18\nBrille 19\nBrille 20\nBrille 21\nBrille 22\nBrille 23\nBrille 24\nBrille 25\nBrille 26\nBrille 27\nBrille 28\nBrille 29\nBrille 30", "Âûáðàòü", "Íàçàä");
            }
            if (listitem == 2)
            {
                ShowPlayerDialog(playerid, 2733, DIALOG_STYLE_LIST, "Áàíäàíû", "bandanna 1\nbandanna 2\nbandanna 3\nbandanna 4\nbandanna 5\nbandanna 6\nbandanna 7\nbandanna 8\nbandanna 9\nbandanna 10", "Âûáðàòü", "Íàçàä");
            }
            if (listitem == 3)
            {
                ShowPlayerDialog(playerid, 2734, DIALOG_STYLE_LIST, "Ìàñêè", "Hockeymask 1\nHockeymask 2\nHockeymask 3\nZorromask\nBoxing", "Âûáðàòü", "Íàçàä");
            }
            if (listitem == 4)
            {
                new zzz = 0;
                while (zzz != MAX_PLAYER_ATTACHED_OBJECTS)
                {
                    if (IsPlayerAttachedObjectSlotUsed(playerid, zzz))
                    {
                        RemovePlayerAttachedObject(playerid, zzz);
                    }
                    zzz++;
                }
            }
        }
        else ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
				\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
				\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
    }
    if (dialogid == 2731) // Øëåìû
    {
        if (response)
        {
            if (listitem == 0)
            {
                SetPlayerAttachedObject(playerid, 1, 18976, 2, 0.09, 0.03, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }

            if (listitem == 1)
            {
                SetPlayerAttachedObject(playerid, 1, 18645, 2, 0.07, 0, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }

            if (listitem == 2)
            {
                SetPlayerAttachedObject(playerid, 1, 18977, 2, 0.07, 0, 0, 88, 75, 0);
            }

            if (listitem == 3)
            {
                SetPlayerAttachedObject(playerid, 1, 18978, 2, 0.07, 0, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }

            if (listitem == 4)
            {
                SetPlayerAttachedObject(playerid, 1, 18979, 2, 0.07, 0, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
        }
        else ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_LIST, "Îäåæäà", "Øëåìû\nÎ÷êè\nÁàíäàíû\nÌàñêè\nÓäàëèòü", "Oê", "Íàçàä");
    }
    if (dialogid == 2732) // Î÷êè
    {
        if (response)
        {
            if (listitem ==  0) //GlassesType1
            {
                SetPlayerAttachedObject(playerid, 2, 19006, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  1) //GlassesType2
            {
                SetPlayerAttachedObject(playerid, 2, 19007, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  2) //GlassesType3
            {
                SetPlayerAttachedObject(playerid, 2, 19008, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  3) //GlassesType4
            {
                SetPlayerAttachedObject(playerid, 2, 19009, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  4) //GlassesType5
            {
                SetPlayerAttachedObject(playerid, 2, 19010, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  5) //GlassesType6
            {
                SetPlayerAttachedObject(playerid, 2, 19011, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  6) //GlassesType7
            {
                SetPlayerAttachedObject(playerid, 2, 19012, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  7) //GlassesType8
            {
                SetPlayerAttachedObject(playerid, 2, 19013, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  8) //GlassesType9
            {
                SetPlayerAttachedObject(playerid, 2, 19014, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  9) //GlassesType10
            {
                SetPlayerAttachedObject(playerid, 2, 19015, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  10) //GlassesType11
            {
                SetPlayerAttachedObject(playerid, 2, 19016, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  11) //GlassesType12
            {
                SetPlayerAttachedObject(playerid, 2, 19017, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  12) //GlassesType13
            {
                SetPlayerAttachedObject(playerid, 2, 19018, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  13) //GlassesType14
            {
                SetPlayerAttachedObject(playerid, 2, 19019, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  14) //GlassesType15
            {
                SetPlayerAttachedObject(playerid, 2, 19020, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  15) //GlassesType16
            {
                SetPlayerAttachedObject(playerid, 2, 19021, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  16) //GlassesType17
            {
                SetPlayerAttachedObject(playerid, 2, 19022, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  17) //GlassesType18
            {
                SetPlayerAttachedObject(playerid, 2, 19023, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  18) //GlassesType19
            {
                SetPlayerAttachedObject(playerid, 2, 19024, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  19) //GlassesType20
            {
                SetPlayerAttachedObject(playerid, 2, 19025, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  20) //GlassesType21
            {
                SetPlayerAttachedObject(playerid, 2, 19026, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  21) //GlassesType22
            {
                SetPlayerAttachedObject(playerid, 2, 19027, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  22) //GlassesType23
            {
                SetPlayerAttachedObject(playerid, 2, 19028, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  23) //GlassesType24
            {
                SetPlayerAttachedObject(playerid, 2, 19029, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  24) //GlassesType25
            {
                SetPlayerAttachedObject(playerid, 2, 19030, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  25) //GlassesType26
            {
                SetPlayerAttachedObject(playerid, 2, 19031, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  26) //GlassesType27
            {
                SetPlayerAttachedObject(playerid, 2, 19032, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  27) //GlassesType28
            {
                SetPlayerAttachedObject(playerid, 2, 19033, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  28) //GlassesType29
            {
                SetPlayerAttachedObject(playerid, 2, 19034, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  29) //GlassesType30
            {
                SetPlayerAttachedObject(playerid, 2, 19035, 2, 0.09, 0.04, 0, 88, 75, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
        }
        else ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_LIST, "Îäåæäà", "Øëåìû\nÎ÷êè\nÁàíäàíû\nÌàñêè\nÓäàëèòü", "Oê", "Íàçàä");
    }
    if (dialogid == 2733) // Áàíäàíû
    {
        if (response)
        {
            if (listitem ==  0) //bandanna1
            {
                SetPlayerAttachedObject(playerid, 3, 18911, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  1) //bandanna2
            {
                SetPlayerAttachedObject(playerid, 3, 18912, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  2) //bandanna3
            {
                SetPlayerAttachedObject(playerid, 3, 18913, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  3) //bandanna4
            {
                SetPlayerAttachedObject(playerid, 3, 18914, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  4) //bandanna5
            {
                SetPlayerAttachedObject(playerid, 3, 18915, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  5) //bandanna6
            {
                SetPlayerAttachedObject(playerid, 3, 18916, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  6) //bandanna7
            {
                SetPlayerAttachedObject(playerid, 3, 18917, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  7) //bandanna8
            {
                SetPlayerAttachedObject(playerid, 3, 18918, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  8) //bandanna9
            {
                SetPlayerAttachedObject(playerid, 3, 18919, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  9) //bandanna10
            {
                SetPlayerAttachedObject(playerid, 3, 18920, 2, -0.08, 0.03, 0.0, 90, -180, -90);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
        }
        else ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_LIST, "Îäåæäà", "Øëåìû\nÎ÷êè\nÁàíäàíû\nÌàñêè\nÓäàëèòü", "Oê", "Íàçàä");
    }
    if (dialogid == 2734) // Ìàñêè
    {
        if (response)
        {
            if (listitem ==  0) //Hockeymask1
            {
                SetPlayerAttachedObject(playerid, 1, 19036, 2, 0.107, 0.020, 0.0, 90, 90, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  1) //Hockeymask2
            {
                SetPlayerAttachedObject(playerid, 1, 19037, 2, 0.107, 0.020, 0.0, 90, 90, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  2) //Hockeymask3
            {
                SetPlayerAttachedObject(playerid, 1, 19038, 2, 0.107, 0.020, 0.0, 90, 90, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  3) //Zorromask
            {
                SetPlayerAttachedObject(playerid, 1, 18974, 2, 0.098, 0.0258, 0.0, 90, 90, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
            if (listitem ==  4) //Boxing
            {
                SetPlayerAttachedObject(playerid, 1, 18952, 2, 0.105, 0.01, 0.0, 0, 0, 0);
                PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            }
        }
        else ShowPlayerDialog(playerid, 2730, DIALOG_STYLE_LIST, "Îäåæäà", "Øëåìû\nÎ÷êè\nÁàíäàíû\nÌàñêè\nÓäàëèòü", "Oê", "Íàçàä");
    }
    if (dialogid == 15) //ìåíþ Ðàäèî
    {
        if (response)
        {
            if (NRadio[playerid] == listitem && listitem == 0)
            {
                SendClientMessage(playerid, COLOR_RED, " Íåëüçÿ, ó Âàñ óæå âûêëþ÷åíî ðàäèî !");
                format(strdln, sizeof(strdln), "{027FFE}Âûêëþ÷èòü ðàäèî\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
                       NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
                       NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
                ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "{FFFF00}Ðàäèî", strdln, "OK", "Îòìåíà");

                return 1;
            }
            if (NRadio[playerid] == listitem && listitem != 0)
            {
                SendClientMessage(playerid, COLOR_RED, " Íåëüçÿ, ó Âàñ óæå âêëþ÷åíî âûáðàííîå Âàìè ðàäèî !");
                format(strdln, sizeof(strdln), "{027FFE}Âûêëþ÷èòü ðàäèî\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
                       NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
                       NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
                ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "{FFFF00}Ðàäèî", strdln, "OK", "Îòìåíà");

                return 1;
            }
            if (listitem == 0)
            {
                NRadio[playerid] = 0;//íåñóùåñòâóþùåå ðàäèî
                StopAudioStreamForPlayer(playerid);//îòêëþ÷èì ëþáîé ïîòîê
                SendClientMessage(playerid, COLOR_GREY, " Âû âûêëþ÷èëè ðàäèî");
                printf("[radio] Èãðîê %s âûêëþ÷èë ðàäèî.", PlayerInfo[playerid][pName]);
            }
            else
            {
                NRadio[playerid] = listitem;//íîìåð ïîäêëþ÷àåìîãî ðàäèî
                StopAudioStreamForPlayer(playerid);//îòêëþ÷èì ëþáîé äðóãîé ïîòîê
                PlayAudioStreamForPlayer(playerid, STRadio[listitem]);//ïîäêëþ÷èì ïîòîê ñ ìóçûêîé
                format(string, sizeof(string), " Âû âêëþ÷èëè ðàäèî %s", NMRadio[listitem]);
                SendClientMessage(playerid, COLOR_GREY, string);
                printf("[radio] Èãðîê %s âêëþ÷èë ðàäèî %s .", PlayerInfo[playerid][pName], NMRadio[listitem]);
            }
        }
        else
        {
            PlayerDialogMenu(playerid);
        }
        return 1;
    }
    if (dialogid == 43) //ìåíþ Àíèìàöèè
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå àíèìàöèè íåäîñòóïíû!");
        if (!response) return PlayerDialogMenu(playerid);
        SelectAnimation(playerid, listitem);
        return 1;
    }
    if (dialogid == 44) //ñìåíà öâåòà íèêà
    {
        if (response)
        {
            ColorPlay[playerid] = ColNick[listitem];
            SetPlayerColor(playerid, ColorPlay[playerid]);
            PlayerInfo[playerid][pColorNickname] = listitem + 1;
            for (new i = 0; i < MAX_PLAYERS; i++)
            {
                SetPlayerMarkerForPlayer(i, playerid, ColorPlay[playerid]);
            }

        }
        else
        {
            ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 45) //ìåíþ Òåëåïîðòû
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå òåëåïîðòû íåäîñòóïíû!");
        if (!response) return PlayerDialogMenu(playerid);
        switch (listitem)
        {
            case 0: ShowPlayerDialog(playerid, 4500, DIALOG_STYLE_LIST, "{CCFF00}Drift {FFFFFF}çîíû", "{FFFFFF}DRIFT 1{CCFF00} Óõî{FFFFFF}\nDRIFT 2 {CCFF00}Ôåðìà{FFFFFF}\nDRIFT 3 {CCFF00}Ñïèðàëü{FFFFFF}\nDRIFT 4 {CCFF00}Õîëì ÑÔ{FFFFFF}\nDRIFT 5 {CCFF00}Äæèçè{FFFFFF}\nDRIFT 6 {CCFF00}Áàíê ÑÔ{FFFFFF}\nDRIFT 7 {CCFF00}Ó÷åáêà ËÂ{FFFFFF}\nDRIFT 8 {CCFF00}Ó÷åáêà ÑÔ{FFFFFF}", "Âûáîð", "Âûõîä");
            case 1: ShowPlayerDialog(playerid, 4501, DIALOG_STYLE_LIST, "{FFFFFF}Äðàã", "DRAG 1 {CCFF00}Âå÷íûé äðàã{FFFFFF}\nDRAG 2", "Âûáîð", "Âûõîä");
            case 2:
            {
                ShowPlayerDialog(playerid, 4502, DIALOG_STYLE_LIST, "Ðàçâëåêàòåëüíûå çîíû", "Ëàáèðèíò\nÊàôå-Áàð\nÇàáðîøêà\nÌîòîïàðêóð\
\nÐàçâëåê. Òðàññà\nÐàçâëåê. òðàññà 2\nÌåãàòðàññà\nÌåãàòðàññà 2\nÌåãàòðàññà 3\nJumping\n{FFA500}Êàçèíî 4 äðàêîíà", "Âûáîð", "Âûõîä");
            }
            case 3: ShowPlayerDialog(playerid, 4503, DIALOG_STYLE_LIST, "Ðàçíîå", "Ïëÿæ\nÃîðà ×èëëèàä\nÄæèççè\nÃðóâ\nÂàéíâóä\nÔîðò Êàðñîí\nÍåáîñêðåá LS\nÇîíà äîìîâ\nÑòîÿíêà LS\nÂçë¸òêà LS\nÂçë¸òêà SF\nÂçë¸òêà LV\nAdvanced Club\nÕàòà Àäìèíà", "Âûáîð", "Âûõîä");
            case 4: ShowPlayerDialog(playerid, 4505, DIALOG_STYLE_LIST, "Ãîðîäà è äåðåâíè", "Ëîñ Ñàíòîñ\nËàñ Âåíòóðàñ\nÑàí Ôèåððî\nBlueberty\nMartin bridge\nRosselmash", "Âûáîð", "Âûõîä");
            case 5: ShowPlayerDialog(playerid, 4506, DIALOG_STYLE_LIST, "Èíòåðüåðû", "RC Battlefield\n8-Track\nBloodbowl\nDirt track\nKickstart\nVice stadium\nLS Atruim\nBike School\nMillie room\nBarbara room\nMichelle room\nWoozie's office\nMeat factory\nHelena room\nSherman dam", "Âûáîð", "Âûõîä");
            case 6: PlayerDialogDM(playerid);
            case 7: ShowPlayerDialog(playerid, 4508, DIALOG_STYLE_LIST, "{CCFF00}>>[TrackMania]<<", "TrackMania 1\nTrackMania 2\nTrackMania 3", "OK", "Îòìåíà");
        }
        return 1;
    }
    if (dialogid == 4508)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà {CCFF00}ïåðâóþ òðåê ìàíèþ!");
                Events[playerid][1] = true;
                ResetPlayerWeapons(playerid);
                Teleport(playerid, 4476.1670, -2928.5520, 6.3952, 200, 0, true, 180);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïðîéäè è ïîëó÷è {CCFF00}ïðèç!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè âû çàõîòèòå âûéòè, ââåäèòå êîìàíäó {CCFF00}/exit");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ ïåðåçàïóñêà óðîâíÿ ââåäèòå êîìàíäó {CCFF00}/restart");
                if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)VehicSpawnKK(playerid, 411, random(256), random(256), 0); //Ñïàâí òà÷êè
            }
            case 1:
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà {CCFF00}âòîðóþ òðåê ìàíèþ!");
                Events[playerid][2] = true;
                ResetPlayerWeapons(playerid);
                Teleport(playerid, -824.2225, 5745.5137, 16.3740, 200, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïðîéäè è ïîëó÷è {CCFF00}ïðèç!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè âû çàõîòèòå âûéòè, ââåäèòå êîìàíäó {CCFF00}/exit");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ ïåðåçàïóñêà óðîâíÿ ââåäèòå êîìàíäó {CCFF00}/restart");
                if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)VehicSpawnKK(playerid, 411, random(256), random(256), 0); //Ñïàâí òà÷êè
            }
            case 2:
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà {CCFF00}òðåòüþ òðåê ìàíèþ!");
                Events[playerid][2] = true;
                ResetPlayerWeapons(playerid);
                Teleport(playerid, -73.3284, 6229.2837, 10.8348, 200, 0, true, 175.1361);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïðîéäè ëàáèðèíò è ïîëó÷è {CCFF00}ïðèç!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè âû çàõîòèòå âûéòè, ââåäèòå êîìàíäó {CCFF00}/exit");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ ïåðåçàïóñêà óðîâíÿ ââåäèòå êîìàíäó {CCFF00}/restart");
                if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER)VehicSpawnKK(playerid, 411, random(256), random(256), 0); //Ñïàâí òà÷êè
            }
        }
        return 1;
    }
    if (dialogid == 4507)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                dmzone[playerid] = 1;
                Teleport(playerid, DMZONESTELEPORTS[randomzone[0]][0], DMZONESTELEPORTS[randomzone[0]][1], DMZONESTELEPORTS[randomzone[0]][2], 100, 0, false, DMZONESTELEPORTS[randomzone[0]][3], false); //DM çîíà 2
                ResetPlayerWeapons(playerid);//îòîáðàòü îðóæèå
                GivePlayerWeapon(playerid, WEAPON_DEAGLE, 2000);//çàïîëíåíèå ñëîòîâ îðóæèÿ èãðîêà ïåðåä DM
                // if (!GetCbugAllowed(playerid))SetCbugAllowed(true, playerid);
                if (GetPVarInt(playerid, "goodspawn") == 1)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ðåæèì áåññìåðòèÿ äåàêòèâèðîâàí íà äì. ×òîáû àêòèâèðîâàòü âûéäèòå èç ÄÌ {CCFF00}( /dmexit )");
                    SetPlayerHealth(playerid, 100);
                    SetPlayerArmour(playerid, 0);
                    SetPVarInt(playerid, "goodspawn", 0);
                }
                format(string, sizeof(string), ""NS" {FFFFFF}Èãðîê {8F30E4}%s {FFFFFF}òåëåïîðòèðîâàëñÿ íà {CCFF00}Deagle Only DM {FF0000}( /dm )", PlayerInfo[playerid][pName]);
                SendClientMessageToAll(COLOR_VIOLET, string);
            }
            case 1:
            {
                dmzone[playerid] = 2;
                Teleport(playerid, DMZONESTELEPORTS[randomzone[1]][0], DMZONESTELEPORTS[randomzone[1]][1], DMZONESTELEPORTS[randomzone[1]][2], 101, 0, false, DMZONESTELEPORTS[randomzone[1]][3], false); //DM çîíà 2
                ResetPlayerWeapons(playerid);//îòîáðàòü îðóæèå
                GivePlayerWeapon(playerid, WEAPON_DEAGLE, 2000);//çàïîëíåíèå ñëîòîâ îðóæèÿ èãðîêà ïåðåä DM
                // if (GetCbugAllowed(playerid))SetCbugAllowed(false, playerid);
                if (GetPVarInt(playerid, "goodspawn") == 1)
                {
                    SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ðåæèì áåññìåðòèÿ äåàêòèâèðîâàí íà äì. ×òîáû àêòèâèðîâàòü âûéäèòå èç ÄÌ {CCFF00}( /dmexit )");
                    SetPlayerHealth(playerid, 100);
                    SetPlayerArmour(playerid, 0);
                    SetPVarInt(playerid, "goodspawn", 0);
                }
                format(string, sizeof(string), ""NS" {FFFFFF}Èãðîê {8F30E4}%s {FFFFFF}òåëåïîðòèðîâàëñÿ íà {CCFF00}Deagle Only (Anti +C zone) {FF0000}( /dm )", PlayerInfo[playerid][pName], false);
                SendClientMessageToAll(COLOR_VIOLET, string);
            }
        }
        return 1;
    }
    if (dialogid == 4506)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                Teleport(playerid, -975.975708, 1060.983032, 1345.671875, 0, 10, false, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà RC Battlefield");
            }
            case 1:
            {
                Teleport(playerid, -1398.065307, -217.028900, 1051.115844, 0, 7, false, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà 8-Track");
            }
            case 2:
            {
                Teleport(playerid, -1398.103515, 937.631164, 1036.479125, 0, 15, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Bloodbowl");
            }
            case 3:
            {
                Teleport(playerid, -1444.645507, -664.526000, 1053.572998, 0, 4, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Dirt track");
            }
            case 4:
            {
                Teleport(playerid, -1465.268676, 1557.868286, 1052.531250, 0, 14, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Kickstart");
            }
            case 5:
            {
                Teleport(playerid, -1401.829956, 107.051300, 1032.273437, 0, 1, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Vice stadium");
            }
            case 6:
            {
                Teleport(playerid, 1710.433715, -1669.379272, 20.225049, 0, 18, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà LS Atruim");
            }
            case 7:
            {
                Teleport(playerid, 1494.325195, 1304.942871, 1093.289062, 0, 3, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Bike School");
            }
            case 8:
            {
                Teleport(playerid, 346.870025, 309.259033, 999.155700, 0, 6, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Millie room");
            }
            case 9:
            {
                Teleport(playerid, 322.197998, 302.497985, 999.148437, 0, 5, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Barbara room");
            }
            case 10:
            {
                Teleport(playerid, 302.180999, 300.722991, 999.148437, 0, 4, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Michelle room");
            }
            case 11:
            {
                Teleport(playerid, -2159.122802, 641.517517, 1052.381713, 0, 1, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Woozie's office");
            }
            case 12:
            {
                Teleport(playerid, 963.418762, 2108.292480, 1011.030273, 0, 1, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Meat factory");
            }
            case 13:
            {
                Teleport(playerid, 291.282989, 310.031982, 999.148437, 0, 3, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Helena room");
            }
            case 14:
            {
                Teleport(playerid, -959.564392, 1848.576782, 9.000000, 0, 17, false, 0, false);
                SendClientMessage(playerid, 0xFFCC2299, "{8F30E4}"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Sherman dam");
            }
        }
        return 1;
    }
    if (dialogid == 4500)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                Teleport(playerid, -316.5466, 1527.2990, 75.3594, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 1 {CCFF00}Óõî");
            }
            case 1:
            {
                Teleport(playerid, -1206.1106, -1065.6787, 128.2656, 0, 0, true, 292.8400, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 2 {CCFF00}Ôåðìà");
            }
            case 2:
            {
                Teleport(playerid, 4265.1406, -2675.1047, 2456.1873, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 3 {CCFF00}Ñïèðàëü");
            }
            case 3:
            {
                Teleport(playerid, -2427.8813, -602.4962, 132.5571, 0, 0, true, 345.2981, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 4 {CCFF00}Õîëì ÑÔ");
            }
            case 4:
            {
                Teleport(playerid, -2617.3147, 1473.1395, 5.1810, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 5 {CCFF00}Äæèçè");
            }
            case 5:
            {
                Teleport(playerid, -1756.2253, 911.7255, 24.4534, 0, 0, true, 86.5652, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 6 {CCFF00}Áàíê ÑÔ");
            }
            case 6:
            {
                Teleport(playerid, 1147.8661, 1343.8909, 10.8203, 0, 0, true, 173.6521, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 7 {CCFF00}Ó÷åáêà ËÂ");
            }
            case 7:
            {
                Teleport(playerid, -2042.9257, -92.4866, 35.1718, 0, 0, true, 163.7693, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRIFT 8 {CCFF00}Ó÷åáêà ÑÔ");
            }
        }
        return 1;
    }
    if (dialogid == 4501)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                Teleport(playerid, 481.4691, 6112.1436, 10.9723, 0, 0, true, -90.0000);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRAG 1");
            }
            case 1:
            {
                Teleport(playerid, -199.3756, -2292.5520, 29.7752, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà DRAG 2");
            }
        }
        return 1;
    }
    if (dialogid == 4502)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â ëàáèðèíò");
                Events[playerid][0] = true;
                ResetPlayerWeapons(playerid);
                Teleport(playerid, -2841.3599, 2744.9304, 907.7618, 200, 0, false, 78.4971);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïðîéäè ëàáèðèíò è ïîëó÷è {CCFF00}ïðèç!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Åñëè âû çàõîòèòå âûéòè, ââåäèòå êîìàíäó {CCFF00}/exit");
            }
            case 1:
            {
                Teleport(playerid, 2196.4915, -1369.0096, 25.6752, 0, 0, false, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Êàôå-Áàð");
            }
            case 2:
            {
                Teleport(playerid, 389.4658, 2536.6455, 16.5391, 0, 0, true, 186.8829, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà çàáðîøêó");
            }
            case 3:
            {
                Teleport(playerid, -2883.1201, -3080.0908, 79.6467, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ìîòî ïàðêóð");
            }
            case 4:
            {
                Teleport(playerid, -2845.8704, 2191.0735, 799.5980, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ðàçâëåêàòåëüíóþ òðàññó");
            }
            case 5:
            {
                Teleport(playerid, 377.9786, -82.6489, 558.4254, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ðàçâëåêàòåëüíóþ òðàññó 2");
            }
            case 6:
            {
                Teleport(playerid, 2360.1272, 903.1658, 190.0055, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ìåãàòðàññó");
            }
            case 7:
            {
                Teleport(playerid, 2817.0566, 218.0950, 12.2437, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ìåãàòðàññó 2");
            }
            case 8:
            {
                Teleport(playerid, 2979.9561, -51.7832, 1.6647, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ìåãàòðàññó 3");
            }
            case 9:
            {
                Teleport(playerid, -275.0087, -632.9040, 16500.8613, 0, 0, false, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Jumping");
                GivePlayerWeapon(playerid, WEAPON_PARACHUTE, 50);
            }
            case 10:
            {
                Teleport(playerid, 2032.9824, 1009.1404, 10.4769, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü ê Êàçèíî 4 äðàêîíà");
            }
        }
        return 1;
    }
    if (dialogid == 4503)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                Teleport(playerid, 279.4141, -1830.2559, 3.8216, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ïëÿæ");
            }
            case 1:
            {
                Teleport(playerid, -2310.0208, -1654.1530, 483.6927, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Ãîðó ×èëëèàä");
            }
            case 2:
            {
                Teleport(playerid, -2633.9934, 1357.6862, 7.1182, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Êëóá Äæèççè");
            }
            case 3:
            {
                Teleport(playerid, 2495.7825, -1668.8549, 13.3438, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Ãðóâ");
            }
            case 4:
            {
                Teleport(playerid, 1245.1860, -761.4305, 92.6917, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Ãîðó Âàéíâóä");
            }
            case 5:
            {
                Teleport(playerid, -113.16453552, 583.32196045, 3.14548969, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Ôîðò Êàðñîí");
            }
            case 6:
            {
                Teleport(playerid, 1546.9347, -1362.5142, 329.6690, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Íåáîñêð¸á");
            }
            case 7:
            {
                Teleport(playerid, 1485.3896, 2829.3538, 10.8203, 0, 0, true, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Çîíó äîìîâ");
            }
            case 8:
            {
                Teleport(playerid, 1531.3895, -1012.2684, 24.0801, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Ñòîÿíêó LS");
            }
            case 9:
            {
                Teleport(playerid, 1439.16, -2593.23, 13.55, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Âçë¸òêó LS");
            }
            case 10:
            {
                Teleport(playerid, -1653.02, -224.51, 14.14, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Âçë¸òêó SF");
            }
            case 11:
            {
                Teleport(playerid, 1309.9388, 1621.3625, 10.82, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà Âçë¸òêó LV");
            }
            case 12:
            {
                Teleport(playerid, 561.299194, -383.106476, 1001.445923, 0, 0, false, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Advanced Club");
            }
            case 13:
            {
                Teleport(playerid, 1537.8400, -1361.7784, 277.9537, 0, 0, false, 0);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Õàòó Àäìèíà");
            }
        }
        return 1;
    }
    if (dialogid == 4505)
    {
        if (!response) return PlayerDialogTeleport(playerid);
        switch (listitem)
        {
            case 0:
            {
                Teleport(playerid, 1471.9987, -1865.0195, 13.5469, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â ëîñ ñàíòîñ");
            }
            case 1:
            {
                Teleport(playerid, 2095.0520, 1227.7006, 10.4047, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â ëàñ âåíòóðàñ");
            }
            case 2:
            {
                Teleport(playerid, -1983.8186, 129.2735, 27.6875, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â ñàí ôèåððî");
            }
            case 3:
            {
                Teleport(playerid, 220.6275, 25.1140, 2.5781, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Blueberty");
            }
            case 4:
            {
                Teleport(playerid, -250.4078, 2603.5881, 62.8582, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Martin bridge");
            }
            case 5:
            {
                Teleport(playerid, -887.0754, 2752.4055, 46.0000, 0, 0, true, 0, false);
                SendClientMessage(playerid, COLOR_VIOLET, "û"NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü â Rosselmash");
            }
        }
        return 1;
    }
    if (dialogid == 12) //ìåíþ Íàñòðîéêè
    {
        if (response)
        {
            if (listitem == 0)
            {
                ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT, "Ñìåíà ïàðîëÿ", "Ââåäèòå íîâûé ïàðîëü", "Ñìåíèòü", "Íàçàä");
                return 1;
            }
            if (listitem == 1)
            {
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                return 1;
            }
            if (listitem == 2)
            {
                ShowPlayerDialog(playerid, 302, DIALOG_STYLE_MSGBOX, "Âûáîð êëàâèøè ìåíþ", "Âûáåðèòå, íà êàêóþ êíîïêó áóäåòå îòêðûâàòü ìåíþ è àêòèâèðîâàòü ïèêàïû", "ALT (2 in car)", "Y");
                return 1;
            }
        }
        else
        {
            PlayerDialogMenu(playerid);
        }
        return 1;
    }
    if (dialogid == 300)
    {
        if (response)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû âûáðàëè Ìóæñêîé ïîë{CCFF00}!");
            PlayerInfo[playerid][pSex] = 1;

            mysql_format(ServerDB, string, sizeof(string), "UPDATE `players` SET `sex`='1' WHERE `PID`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, string, "", "");
        }
        else
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû âûáðàëè æåíñêèé ïîë{00FF00}!");
            PlayerInfo[playerid][pSex] = 2;

            mysql_format(ServerDB, string, sizeof(string), "UPDATE `players` SET `sex`='2' WHERE `PID`='%d' LIMIT 1", PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, string, "", "");
        }
        if (GetPVarInt(playerid, "MnMode") == 0)
        {
            ShowPlayerDialog(playerid, 302, DIALOG_STYLE_MSGBOX, "{8F30E4}>>[Âûáîð êëàâèøè ìåíþ]<<", "{FFFFFF}Âûáåðèòå, íà êàêóþ êíîïêó áóäåòå îòêðûâàòü {8F30E4}ìåíþ {FFFFFF}è {8F30E4}àêòèâèðîâàòü ïèêàïû", "{CCFF00}ALT/2", "{FF0000}Y");
        }
        return 1;
    }
    if (dialogid == 301)
    {
        if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â ñëåæêå íàñòðîéêè íåäîñòóïíû!");
        if (!response) return ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Íàñòðîéêè àêêàóíòà", "Ñìåíèòü ïàðîëü\nÑìåíèòü ñïàâí\nÑìåíèòü êëàâèøó ìåíþ", "Âûáîð", "Íàçàä");
        if (listitem == 0)
        {
            PlayerInfo[playerid][pSpawnChange] = listitem;
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ñìåíèëè òî÷êó ñïàâíà íà {CCFF00}Ñïàâí â çîíàõ ñïàâíà!");
            format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
            if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
            if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
            if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
            if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
            ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
        }
        if (listitem == 1)
        {
            if (PlayerInfo[playerid][pGang] == 0)
            {
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå â êëàíå!");
            }
            else if (GangInfo[PlayerInfo[playerid][pGang]][gSpawns][0] == 0.0000
                     && GangInfo[PlayerInfo[playerid][pGang]][gSpawns][1] == 0.0000
                     && GangInfo[PlayerInfo[playerid][pGang]][gSpawns][2] == 0.0000)
            {
                return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ó êëàíà íåò ñîõðàí¸ííîé òî÷êè ñïàâíà!");
            }
            else
            {
                PlayerInfo[playerid][pSpawnChange] = listitem;
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ñìåíèëè òî÷êó ñïàâíà íà {CCFF00}Ñïàâí íà òî÷êå êëàíà!");
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                return 1;
            }
        }
        if (listitem == 2)
        {
            if (PlayerInfo[playerid][pHouseID] == 0)
            {
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå âëàäååòå äîìîì!");
                return 1;
            }
            else
            {
                PlayerInfo[playerid][pSpawnChange] = listitem;
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ñìåíèëè òî÷êó ñïàâíà íà {CCFF00}Ñïàâí â äîìå!");
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                return 1;
            }
        }
        if (listitem == 3)
        {
            if (PlayerInfo[playerid][pVIP] == 0)
            {
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå {00FFFF}VIP{FFFFFF} èãðîê{FF0000}!");
                return 1;
            }
            else
            {
                if (IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå äîëæíû áûòü â ìàøèíå{FF0000}!");
                if (GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) !=  0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñîõðàíèòü îñîáûé ñïàâí ìîæíî òîëüêî íà îñíîâíîé êàðòå{FF0000}!");
                GetPlayerPos(playerid, PlayerInfo[playerid][pvsx], PlayerInfo[playerid][pvsy], PlayerInfo[playerid][pvsz]);
                GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pvsa]);
                PlayerInfo[playerid][pSpawnChange] = listitem;
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ñìåíèëè òî÷êó ñïàâíà íà {CCFF00}Îñîáûé ñïàâí!");
                SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Òåïåðü âû âñåãäà áóäåòå ïîÿâëÿòñÿ â ìåñòå, íà êîòîðîì ñòîèòå ñåé÷àñ{CCFF00}!");
                format(string, sizeof(string), "{FFFFFF}Íàçâàíèå ñïàâíà\t{FFFFFF}Àêòèâíîñòü\n");
                if (PlayerInfo[playerid][pSpawnChange] == 0) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 1) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\t{00FF00}Àêòèâåí\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 2) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\t{00FF00}Àêòèâåí\n{FFFFFF}Îñîáûé ñïàâí", string);
                if (PlayerInfo[playerid][pSpawnChange] == 3) format(string, sizeof(string), "%s{FFFFFF}Ñïàâí â çîíàõ ñïàâíà\n{FFFFFF}Ñïàâí íà òî÷êå êëàíà\n{FFFFFF}Ñïàâí â äîìå\n{FFFFFF}Îñîáûé ñïàâí\t{00FF00}Àêòèâåí", string);
                ShowPlayerDialog(playerid, 301, DIALOG_STYLE_TABLIST_HEADERS, "Ñìåíèòü ñïàâí", string, "ÑÌÅÍÈÒÜ", "ÎÒÌÅÍÀ");//ñìåíà ñïàâíà //pSpawnChange
                return 1;
            }
        }
        return 1;
    }
    if (dialogid == 49)
    {

        if (response)
        {
            if (strlen(inputtext) < 6 || strlen(inputtext) > 16)
            {
                SendClientMessage(playerid, COLOR_RED, ""MNS" Äëèíà ïàðîëÿ äîëæíà áûòü îò 6 äî 16 ñèìâîëîâ !");
                ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT, "Ñìåíà ïàðîëÿ", "Ââåäèòå íîâûé ïàðîëü:", "Ñìåíèòü", "Îòìåíà");
                return 1;
            }
            if (PassControl(inputtext) == 0)
            {
                SendClientMessage(playerid, COLOR_RED, ""MNS" Â ïàðîëå ìîæíî èñïîëüçîâàòü ÒÎËÜÊÎ ëàòèíñêèå");
                SendClientMessage(playerid, COLOR_RED, ""MNS" ñèìâîëû: îò a äî z , îò A äî Z , è öèôðû îò 0 äî 9 !");
                ShowPlayerDialog(playerid, 49, DIALOG_STYLE_INPUT, "Ñìåíà ïàðîëÿ", "Ââåäèòå íîâûé ïàðîëü:", "Ñìåíèòü", "Îòìåíà");
                return 1;
            }
            new hashed_pass[65];
            new salt[17];
            for (new i; i < 16; i++)
            {
                salt[i] = inc_gLetters[random(sizeof(inc_gLetters))];
            }
            SHA256_Hash(inputtext, salt, hashed_pass, 65);
            new str[512];
            mysql_format(ServerDB, str, sizeof(str), "UPDATE `players` SET `Pass`='%s', `HASH`='%e' WHERE `PID`='%d' LIMIT 1", hashed_pass, salt, PlayerInfo[playerid][pMID]);
            mysql_tquery(ServerDB, str, "", "");
            SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ñìåíà ïàðîëÿ óñïåøíî ïðîøëà!");
        }
        else
        {
            ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Íàñòðîéêè", "Ñìåíèòü ïàðîëü\nÑìåíèòü ñïàâí\nÑìåíèòü êëàâèøó ìåíþ", "OK", "Íàçàä");
        }
        return 1;
    }
    if (dialogid == 50)
    {

        if (response)
        {
            if (listitem == 0)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_NORMAL);
                return 1;
            }
            if (listitem == 1)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_BOXING);
                return 1;
            }
            if (listitem == 2)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_KUNGFU);
                return 1;
            }
            if (listitem == 3)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_KNEEHEAD);
                return 1;
            }
            if (listitem == 4)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_GRABKICK);
                return 1;
            }
            if (listitem == 5)
            {
                SetPlayerFightingStyle(playerid, FIGHT_STYLE_ELBOW);
            }
        }
        else
        {
            ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
			\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
			\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
        }
        return 1;
    }
    return 0;
}

stock GetPlayerSpeed(playerid)
{
    new Float:ST[4];
    if (IsPlayerInAnyVehicle(playerid))
        GetVehicleVelocity(GetPlayerVehicleID(playerid), ST[0], ST[1], ST[2]);
    else GetPlayerVelocity(playerid, ST[0], ST[1], ST[2]);
    ST[3] = floatsqroot(floatmul(ST[0], ST[0]) + floatmul(ST[1], ST[1]) + floatmul(ST[2], ST[2])) * 200;
    return floatround(ST[3]);
}

stock GetHMaxSpeed(vehicid)
{
    new modelcar = GetVehicleModel(vehicid);
    modelcar = modelcar - 400;
    if (modelcar < 0 || modelcar > 211)
    {
        return -1;
    }
    return HMS77[modelcar];
}

Float:GetPlayerTheoreticAngle(i)//drift bonus
{
    new Float:sin;
    new Float:dis;
    new Float:angle2;
    new Float:x, Float:y, Float:z;
    new Float:tmp3;
    new Float:tmp4;
    new Float:MindAngle;
    GetPlayerPos(i, x, y, z);
    dis = floatsqroot(floatpower(floatabs(floatsub(x, ppos[i][0])), 2) + floatpower(floatabs(floatsub(y, ppos[i][1])), 2));
    if (IsPlayerInAnyVehicle(i))GetVehicleZAngle(GetPlayerVehicleID(i), angle2);
    else GetPlayerFacingAngle(i, angle2);
    if (x > ppos[i][0])
    {
        tmp3 = x - ppos[i][0];
    }
    else
    {
        tmp3 = ppos[i][0] - x;
    }
    if (y > ppos[i][1])
    {
        tmp4 = y - ppos[i][1];
    }
    else
    {
        tmp4 = ppos[i][1] - y;
    }
    if (ppos[i][1] > y && ppos[i][0] > x)
    {
        sin = asin(tmp3 / dis);
        MindAngle = floatsub(floatsub(floatadd(sin, 90), floatmul(sin, 2)), -90.0);
    }
    if (ppos[i][1] < y && ppos[i][0] > x)
    {
        sin = asin(tmp3 / dis);
        MindAngle = floatsub(floatadd(sin, 180), 180.0);
    }
    if (ppos[i][1] < y && ppos[i][0] < x)
    {
        sin = acos(tmp4 / dis);
        MindAngle = floatsub(floatadd(sin, 360), floatmul(sin, 2));
    }
    if (ppos[i][1] > y && ppos[i][0] < x)
    {
        sin = asin(tmp3 / dis);
        MindAngle = floatadd(sin, 180);
    }
    if (MindAngle == 0.0)
    {
        return angle2;
    }
    else
        return MindAngle;
}

public OnVehicleDamageStatusUpdate(vehicleid, playerid)//êðàø ïðè ñòîëêíîâåíèè
{
    if (DriftPointsNow[playerid] > 0)
    {
        PlayerDriftCancellation[playerid] = 0;
        DriftPointsNow[playerid] = 0;
        dddrift[playerid] = 0;
        driftexp[playerid] = 0;
        TextDrawSetString(scrscr[playerid][0], "~r~NOOB!");
        TextDrawSetString(scrscr[playerid][1], "~r~NOOB!");
    }
    return 1;
}

fpub:DriftCancellation(playerid)
{
    PlayerDriftCancellation[playerid] = 0;
    TextDrawHideForPlayer(playerid, scrscr[playerid][0]);
    TextDrawHideForPlayer(playerid, scrscr[playerid][1]);
    SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + DriftPointsNow[playerid]*PlayerInfo[playerid][pCombo]);
    DriftPointsNow[playerid] = 0;
    dddrift[playerid] = 0;
    PlayerInfo[playerid][pDriftExp] += driftexp[playerid];
    if (PlayerInfo[playerid][pExpRecord] < driftexp[playerid])
    {
        new str[144];
        format(str, sizeof(str), ""NS" {FFFFFF}Âû óñòàíîâèëè íîâûé ðåêîðä ïî äðèôò î÷êàì: {CCFF00}%d!", driftexp[playerid]);
        SendClientMessage(playerid, COLOR_VIOLET, str);
        strdel(str, 0, sizeof(str));
        PlayerInfo[playerid][pExpRecord] = driftexp[playerid];
    }
    driftexp[playerid] = 0;
    return 1;
}

Float:ReturnPlayerAngle(playerid)
{
    new Float:Ang;
    if (IsPlayerInAnyVehicle(playerid))GetVehicleZAngle(GetPlayerVehicleID(playerid), Ang);
    else GetPlayerFacingAngle(playerid, Ang);
    return Ang;
}

fpub:Drift()
{
    new Float:Angle1, Float:Angle2, Float:BySpeed, s[256];
    new Float:Z;
    new Float:X;
    new Float:Y;
    new Float:SpeedX;
    foreach (Player, g)
    {
        if (IsPlayerConnected(g) && gPlayerLogged[g])
        {

            new targetaim = GetPlayerTargetPlayer(g);
            if (targetaim != INVALID_PLAYER_ID)
            {
                if (gPlayerSpawned[targetaim] && GetPVarInt(targetaim, "goodspawn") == 1)
                {
                    if (!IsPlayerInAnyVehicle(g) && !IsPlayerInAnyVehicle(targetaim))
                    {
                        if (GetPlayerWeapon(g) == WEAPON_KNIFE)
                        {
                            SetPlayerArmedWeapon(g, WEAPON_FIST);
                            SendClientMessage(g, COLOR_VIOLET, ""NS" {FFFFFF}Íåëüçÿ óáèòü èãðîêà íîæîì, îí â áåññìåðòèè{FF0000}!");
                        }
                    }
                }
            }

            if (GetPVarInt(g, "goodspawn") == 1 && gPlayerLogged[g])
            {
                SetPlayerHealth(g, 100);
                SetPlayerArmour(g, 100);
            }

            GetPlayerPos(g, X, Y, Z);
            SavedPos[ g ][ dltX ] = floatsub(X, SavedPos[ g ][ sX ]);
            SavedPos[ g ][ dltY ] = floatsub(Y, SavedPos[ g ][ sY ]);
            SavedPos[ g ][ dltZ ] = floatsub(Z, SavedPos[ g ][ sZ ]);
            SpeedX = floatsqroot(floatadd(floatadd(floatmul(SavedPos[ g ][ dltX ], SavedPos[ g ][ dltX ]), floatmul(SavedPos[ g ][ dltY ], SavedPos[ g ][ dltY ])), floatmul(SavedPos[ g ][ dltZ ], SavedPos[ g ][ dltZ ])));
            Angle1 = ReturnPlayerAngle(g);
            Angle2 = GetPlayerTheoreticAngle(g);
            BySpeed = floatmul(SpeedX, 12);
            if (tpdrift[g] == 1) //åñëè èãðîê ÒÏ, òî:
            {
                DriftPointsNow[g] = 0;//îáíóëÿåì äðèôò-î÷êè (åñëè àâòî ÍÅ â äâèæåíèè)
            }

            if (GetPlayerState(g) == PLAYER_STATE_DRIVER && IsCar(GetPlayerVehicleID(g)) && floatabs(floatsub(Angle1, Angle2)) > DRIFT_MINKAT && floatabs(floatsub(Angle1, Angle2)) < DRIFT_MAXKAT && BySpeed > DRIFT_SPEED)
            {
                if (PlayerDriftCancellation[g] > 0)KillTimer(PlayerDriftCancellation[g]);
                PlayerDriftCancellation[g] = 0;
                dddrift[g] += floatval(floatabs(floatsub(Angle1, Angle2)) * 3 * (BySpeed * 0.1)) / 10;
                driftexp[g] += 1;
                if ((dddrift[g] - DriftPointsNow[g]) > 2000) //åñëè äðèôò áîëüøå xxx, òî:
                {
                    dddrift[g] = 0;//îáíóëÿåì äðèôò-î÷êè
                }
                DriftPointsNow[g] = dddrift[g];//çàïîìèíàåì ïîñëåäíèé äðèôò
                if (tpdrift[g] == 1) //åñëè èãðîê ÒÏ, òî:
                {
                    DriftPointsNow[g] = 0;//îáíóëÿåì äðèôò-î÷êè (åñëè àâòî â äâèæåíèè)
                    driftexp[g] = 0;
                    tpdrift[g] = 0;//îáíóëÿåì ïåðåìåííóþ ÒÏ
                }
                PlayerDriftCancellation[g] = SetTimerEx("DriftCancellation", 3000, false, "d", g);
                if (DriftPointsNow[g] > 0)
                {
                    TextDrawShowForPlayer(g, scrscr[g][0]);
                    TextDrawShowForPlayer(g, scrscr[g][1]);
                    format(s, sizeof(s), "~r~+ ~w~%d ~y~EXP", driftexp[g]);
                    TextDrawSetString(scrscr[g][0], s);
                    strdel(s, 0, 256);
                    format(s, sizeof(s), "~r~+ ~w~%d ~g~$", DriftPointsNow[g]*PlayerInfo[g][pCombo]);
                    TextDrawSetString(scrscr[g][1], s);
                }
            }

            SavedPos[ g ][ sX ] = X;
            SavedPos[ g ][ sY ] = Y;
            SavedPos[ g ][ sZ ] = Z;

            new Float:x333, Float:y333, Float:z333;
            if (IsPlayerInAnyVehicle(g))GetVehiclePos(GetPlayerVehicleID(g), x333, y333, z333);
            else GetPlayerPos(g, x333, y333, z333);
            ppos[g][0] = x333;
            ppos[g][1] = y333;
            ppos[g][2] = z333;

            if (gPlayerLogged[g])
            {
                ResetPlayerMoney(g);//îáíóëÿåì ìîíèòîðèíã äåíåã
                GivePlayerMoney(g, GetPVarInt(g, "PlMon"));//ïåðåäà¸ì â ìîíèòîðèíã äåíüãè èãðîêà
                SetPlayerScore(g, PlayerInfo[g][pDriftExp]);
                if (AI[g][aLevel] >= 3 && AI[g][aGod] == 1)//îáíîâëåíèå æèçíè è áðîíè äëÿ àäìèíîâ 3 è 4 ëåâåëà
                {
                    SetPlayerHealth(g, 255);
                    SetPlayerArmour(g, 255);
                    livdop[g] = 1;
                }
                if (AI[g][aLevel] >= 3 && AI[g][aGod] == 0 && livdop[g] == 1)//âûêëþ÷åíèå áåññìåðòèÿ
                {
                    SetPlayerHealth(g, 100);
                    SetPlayerArmour(g, 100);
                    livdop[g] = 0;
                }
            }
        }
    }
    tpspa = random(sizeof(RandomSpawns));
    return 1;
}

floatval(Float:val)
{
    new str[256];
    format(str, 256, "%.0f", val);
    return strval(str);
}

stock IsCar(Vehicle)
{
    switch (GetVehicleModel(Vehicle))
    {
        case 404: return 1;
        case 407: return 1;
        case 442: return 1;
        case 458: return 1;
        case 579: return 1;
        case 400: return 1;
        case 489: return 1;
        case 505: return 1;
        case 602: return 1;
        case 496: return 1;
        case 565: return 1;
        case 401: return 1;
        case 535: return 1;
        case 527: return 1;
        case 589: return 1;
        case 419: return 1;
        case 533: return 1;
        case 526: return 1;
        case 474: return 1;
        case 517: return 1;
        case 410: return 1;
        case 600: return 1;
        case 436: return 1;
        case 580: return 1;
        case 439: return 1;
        case 467: return 1;
        case 547: return 1;
        case 576: return 1;
        case 549: return 1;
        case 491: return 1;
        case 445: return 1;
        case 507: return 1;
        case 585: return 1;
        case 587: return 1;
        case 466: return 1;
        case 492: return 1;
        case 546: return 1;
        case 551: return 1;
        case 516: return 1;
        case 426: return 1;
        case 405: return 1;
        case 409: return 1;
        case 550: return 1;
        case 566: return 1;
        case 540: return 1;
        case 421: return 1;
        case 529: return 1;
        case 402: return 1;
        case 542: return 1;
        case 603: return 1;
        case 475: return 1;
        case 562: return 1;
        case 559: return 1;
        case 560: return 1;
        case 558: return 1;
        case 429: return 1;
        case 541: return 1;
        case 415: return 1;
        case 480: return 1;
        case 434: return 1;
        case 494: return 1;
        case 502: return 1;
        case 503: return 1;
        case 411: return 1;
        case 506: return 1;
        case 451: return 1;
        case 555: return 1;
        case 477: return 1;
        case 435: return 1;
        case 450: return 1;
        case 591: return 1;
        case 499: return 1;
        case 498: return 1;
        case 486: return 1;
        case 406: return 1;
        case 573: return 1;
        case 455: return 1;
        case 588: return 1;
        case 423: return 1;
        case 414: return 1;
        case 443: return 1;
        case 531: return 1;
        case 456: return 1;
        case 459: return 1;
        case 422: return 1;
        case 554: return 1;
        case 508: return 1;
        case 482: return 1;
        case 530: return 1;
        case 418: return 1;
        case 572: return 1;
        case 582: return 1;
        case 413: return 1;
        case 440: return 1;
        case 583: return 1;
        case 536: return 1;
        case 534: return 1;
        case 567: return 1;
        case 424: return 1;
        case 457: return 1;
        case 571: return 1;
        case 444: return 1;
        case 556: return 1;
        case 557: return 1;
        case 471: return 1;
        case 495: return 1;
        case 539: return 1;
    }
    return 0;
}

fpub:VehicSpawnKK(playerid, vehid, vehcol1, vehcol2, dispz)
{

    VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz);
    return 1;
}

fpub:VehicSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
    if (GetPlayerVehicleID(playerid) == playcar[playerid] && playcar[playerid] != 0)
    {
        //åñëè èãðîê â ñâî¸ì àâòî, è ó èãðîêà ÒÎ×ÍÎ åñòü ñâîé àâòî, òî:
        new Float:igx, Float:igy, Float:igz;
        foreach (Player, i)
        {
            if (IsPlayerConnected(i)) //äàëüíåéøåå âûïîëíÿåì åñëè èãðîê â êîííåêòå
            {
                if (GetPlayerVehicleID(i) == playcar[playerid] && playerid != i)
                {
                    //åñëè åñòü ïàññàæèð (ïàññàæèðû) â àâòî âîäèòåëÿ, òî:
                    GetPlayerPos(i, igx, igy, igz);//âûñàäèòü ïàññàæèðà (ïàññàæèðîâ)
                    SetPlayerPos(i, igx + 3, igy + 3, igz);
                }
            }
        }
    }
    if (GetPlayerVehicleID(playerid) != playcar[playerid] && IsPlayerInAnyVehicle(playerid))
    {
        //åñëè èãðîê ÍÅ â ñâî¸ì àâòî (íî îáÿçàòåëüíî â àâòî), òî:
        new Float:igx, Float:igy, Float:igz;
        GetPlayerPos(playerid, igx, igy, igz);//âûéòè ñàìîìó èç àâòî
        SetPlayerPos(playerid, igx + 3, igy + 3, igz);
    }
    SetTimerEx("VehicSecSpawn", 300, false, "iiiii", playerid, vehid, vehcol1, vehcol2, dispz);
    return 1;
}

public VehicSecSpawn(playerid, vehid, vehcol1, vehcol2, dispz)
{
    new Float:x, Float:y, Float:z, Float:Angle;
    GetPlayerPos(playerid, x, y, z);
    if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER
            || GetPlayerState(playerid) == PLAYER_STATE_PASSENGER)
    {
        GetVehicleZAngle(GetPlayerVehicleID(playerid), Angle);
    }
    else
    {
        GetPlayerFacingAngle(playerid, Angle);
    }
    if (playcar[playerid] == 0) //åñëè ó èãðîêà íåò ñâîåãî òðàíñïîðòà, òî:
    {
        playcar[playerid] = CreateVehicle(vehid, x, y, z + dispz, Angle, vehcol1, vehcol2, 0); //ñîçäàòü íîâûé òðàíñïîðò
        LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
        SetVehicleVirtualWorld(playcar[playerid], GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
        PutPlayerInVehicle(playerid, playcar[playerid], 0);//ïîñàäèòü èãðîêà íà ìåñòî âîäèòåëÿ
    }
    else  //èíà÷å: (åñëè ó èãðîêà ÅÑÒÜ ñâîé òðàíñïîðò)
    {
        new dopper = 0;
        migalkatr1[playerid] = -600;
        while (dopper < MAX_PLAYERS) //ïîèñê ÷óæîé ìèãàëêè íà òðàíñïîðòå èãðîêà
        {
            if (playcar[playerid] == migalka[dopper][1] && playerid != dopper)
            {
                //åñëè áûëà íàéäåíà ÷óæàÿ ìèãàëêà íà òðàíñïîðòå èãðîêà, òî:
                migalkatr1[playerid] = dopper;
                break;
            }
            dopper++;
        }
        migalkatr2[playerid] = playcar[playerid];//çàïîìíèòü èä ñòàðîãî òðàíñïîðòà èãðîêà
        if (playcar[playerid] == neon[playerid][2]) //åñëè ó èãðîêà óñòàíîâëåí ñâîé íåîí íà òðàíñïîðòå, òî:
        {
            DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);//Óäàëåíèå òþíèíã ýëåìåíòîâ
            DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);
            DestroyVehicle(playcar[playerid]);//óäàëèòü ñòàðûé òðàíñïîðò
            playcar[playerid] = CreateVehicle(vehid, x, y, z + dispz, Angle, vehcol1, vehcol2, 0); //ñîçäàòü íîâûé òðàíñïîðò
            LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
            SetVehicleVirtualWorld(playcar[playerid], GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
            PutPlayerInVehicle(playerid, playcar[playerid], 0);//ïîñàäèòü èãðîêà íà ìåñòî âîäèòåëÿ
            SetVehicleParamsEx(playcar[playerid], 1, 1, 0, 0, 0, 0, 0); //Çàâåñòè ìàøèíó
            AttachObjectToVehicle(neon[playerid][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//ïðèêðåïèòü íåîí ê òðàíñïîðòó
            AttachObjectToVehicle(neon[playerid][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//ïðèêðåïèòü íåîí ê òðàíñïîðòó
            neon[playerid][2] = playcar[playerid];//çàìåíèòü èä òðàíñïîðòà ñ íåîíîì
        }
        else//èíà÷å: (åñëè ó èãðîêà ÍÅ óñòàíîâëåí ñâîé íåîí íà òðàíñïîðòå)
        {
            dopper = 0;
            new dopper22 = -600;
            while (dopper < MAX_PLAYERS) //ïîèñê ÷óæîãî íåîíà íà òðàíñïîðòå èãðîêà
            {
                if (playcar[playerid] == neon[dopper][2] && playerid != dopper)
                {
                    //åñëè áûë íàéäåí ÷óæîé íåîí íà òðàíñïîðòå èãðîêà, òî:
                    dopper22 = dopper;
                    break;
                }
                dopper++;
            }
            if (dopper22 != -600) //åñëè áûë íàéäåí ÷óæîé íåîí íà òðàíñïîðòå èãðîêà, òî:
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);//Óäàëåíèå òþíèíã ýëåìåíòîâ
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);

                DestroyVehicle(playcar[playerid]);//óäàëèòü ñòàðûé òðàíñïîðò
                playcar[playerid] = CreateVehicle(vehid, x, y, z + dispz, Angle, vehcol1, vehcol2, 0); //ñîçäàòü íîâûé òðàíñïîðò
                LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
                SetVehicleVirtualWorld(playcar[playerid], GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
                PutPlayerInVehicle(playerid, playcar[playerid], 0);//ïîñàäèòü èãðîêà íà ìåñòî âîäèòåëÿ
                SetVehicleParamsEx(playcar[playerid], 1, 1, 0, 0, 0, 0, 0); //Çàâåñòè ìàøèíó
                AttachObjectToVehicle(neon[dopper22][0], playcar[playerid], -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//ïðèêðåïèòü íåîí ê òðàíñïîðòó
                AttachObjectToVehicle(neon[dopper22][1], playcar[playerid], 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);//ïðèêðåïèòü íåîí ê òðàíñïîðòó
                neon[dopper22][2] = playcar[playerid];//çàìåíèòü èä òðàíñïîðòà ñ íåîíîì
            }
            else//èíà÷å: (åñëè ÍÅ áûë íàéäåí ÷óæîé íåîí íà òðàíñïîðòå èãðîêà)
            {
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][0]);//Óäàëåíèå òþíèíã ýëåìåíòîâ
                DestroyObject(ObjectSelect[GetPlayerVehicleID(playerid)][1]);

                DestroyVehicle(playcar[playerid]);//óäàëèòü ñòàðûé òðàíñïîðò
                playcar[playerid] = CreateVehicle(vehid, x, y, z + dispz, Angle, vehcol1, vehcol2, 0); //ñîçäàòü íîâûé òðàíñïîðò
                LinkVehicleToInterior(playcar[playerid], GetPlayerInterior(playerid));//ïîäêëþ÷èòü òðàíñïîðò ê èíòåðüåðó èãðîêà
                SetVehicleVirtualWorld(playcar[playerid], GetPlayerVirtualWorld(playerid));//óñòàíîâèòü òðàíñïîðòó âèðòóàëüíûé ìèð èãðîêà
                PutPlayerInVehicle(playerid, playcar[playerid], 0);//ïîñàäèòü èãðîêà íà ìåñòî âîäèòåëÿ
                SetVehicleParamsEx(playcar[playerid], 1, 1, 0, 0, 0, 0, 0); //Çàâåñòè ìàøèíó
            }
        }
        SetTimerEx("FMigalka", 150, false, "i", playerid);//ïåðåíîñ ìèãàëêè èãðîêà íà íîâûé òðàíñïîðò
    }
    return 1;
}

fpub:FMigalka(playerid)
{
    new carid = GetPlayerVehicleID(playerid);
    new carmod = GetVehicleModel(carid);
    if (carmod != 562 && carmod != 565 && carmod != 559 && carmod != 561 && carmod != 560 && carmod != 558 &&
            carmod != 541 && carmod != 415 && carmod != 434 && carmod != 494 && carmod != 502 && carmod != 503 &&
            carmod != 411 && carmod != 506 && carmod != 451 && carmod != 477)
    {
        //åñëè ó èãðîêà ÍÅ ñòðèòðåéñåðñêèé È ÍÅ ãîíî÷íûé òðàíñïîðò, òî:
        if (migalka[playerid][0] != 0)
        {
            DestroyObject(migalka[playerid][0]);    //óáðàòü ìèãàëêó
        }
        migalka[playerid][0] = 0;//ïðèñâàèâàåì ìèãàëêå íåñóùåñòâóþùèé íîìåð îáúåêòà
        migalka[playerid][1] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ ìèãàëêîé
        if (migalkatr1[playerid] != -600) //åñëè áûëà íàéäåíà ÷óæàÿ ìèãàëêà íà òðàíñïîðòå èãðîêà, òî:
        {
            DestroyObject(migalka[migalkatr1[playerid]][0]);//óáðàòü ìèãàëêó
            migalka[migalkatr1[playerid]][0] = 0;//ïðèñâàèâàåì ìèãàëêå íåñóùåñòâóþùèé íîìåð îáúåêòà
            migalka[migalkatr1[playerid]][1] = 0;//íåñóùåñòâóþùèé èä òðàíñïîðòà ñ ìèãàëêîé
        }
    }
    else//èíà÷å (åñëè ó èãðîêà ñòðèòðåéñåðñêèé èëè ãîíî÷íûé òðàíñïîðò)
    {
        if (migalkatr2[playerid] == migalka[playerid][1]) //åñëè ó èãðîêà áûëà óñòàíîâëåíà ñâîÿ ìèãàëêà íà òðàíñïîðòå, òî:
        {
            switch (carmod) //ïðèêðåïèòü ìèãàëêó ê òðàíñïîðòó
            {
                case 562: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.35, 0.78, 0.00, 0.00, 0.00);
                case 565: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.69, 0.00, 0.00, 0.00);
                case 559: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.30, 0.72, 0.00, 0.00, 0.00);
                case 561: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.15, 0.82, 0.00, 0.00, 0.00);
                case 560: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.20, 0.83, 0.00, 0.00, 0.00);
                case 558: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.87, 0.00, 0.00, 0.00);
                case 541: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.20, 0.63, 0.00, 0.00, 0.00);
                case 415: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.45, 0.62, 0.00, 0.00, 0.00);
                case 434: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.30, 0.79, 0.00, 0.00, 0.00);
                case 494: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.70, 0.74, 0.00, 0.00, 0.00);
                case 502: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.50, 0.78, 0.00, 0.00, 0.00);
                case 503: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.70, 0.79, 0.00, 0.00, 0.00);
                case 411: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.25, 0.70, 0.00, 0.00, 0.00);
                case 506: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.50, 0.58, 0.00, 0.00, 0.00);
                case 451: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.55, 0.58, 0.00, 0.00, 0.00);
                case 477: AttachObjectToVehicle(migalka[playerid][0], playcar[playerid], 0.00, -0.55, 0.71, 0.00, 0.00, 0.00);
            }
            migalka[playerid][1] = playcar[playerid];//çàìåíèòü èä òðàíñïîðòà ñ ìèãàëêîé
        }
        else//èíà÷å: (åñëè ó èãðîêà ÍÅ áûëà óñòàíîâëåíà ñâîÿ ìèãàëêà íà òðàíñïîðòå)
        {
            if (migalkatr1[playerid] != -600) //åñëè áûëà íàéäåíà ÷óæàÿ ìèãàëêà íà òðàíñïîðòå èãðîêà, òî:
            {
                switch (carmod) //ïðèêðåïèòü ìèãàëêó ê òðàíñïîðòó
                {
                    case 562: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.35, 0.78, 0.00, 0.00, 0.00);
                    case 565: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.69, 0.00, 0.00, 0.00);
                    case 559: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.30, 0.72, 0.00, 0.00, 0.00);
                    case 561: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.15, 0.82, 0.00, 0.00, 0.00);
                    case 560: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.20, 0.83, 0.00, 0.00, 0.00);
                    case 558: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.87, 0.00, 0.00, 0.00);
                    case 541: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.20, 0.63, 0.00, 0.00, 0.00);
                    case 415: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.45, 0.62, 0.00, 0.00, 0.00);
                    case 434: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.30, 0.79, 0.00, 0.00, 0.00);
                    case 494: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.70, 0.74, 0.00, 0.00, 0.00);
                    case 502: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.50, 0.78, 0.00, 0.00, 0.00);
                    case 503: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.70, 0.79, 0.00, 0.00, 0.00);
                    case 411: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.25, 0.70, 0.00, 0.00, 0.00);
                    case 506: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.50, 0.58, 0.00, 0.00, 0.00);
                    case 451: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.55, 0.58, 0.00, 0.00, 0.00);
                    case 477: AttachObjectToVehicle(migalka[migalkatr1[playerid]][0], playcar[playerid], 0.00, -0.55, 0.71, 0.00, 0.00, 0.00);
                }
                migalka[migalkatr1[playerid]][1] = playcar[playerid];//çàìåíèòü èä òðàíñïîðòà ñ ìèãàëêîé
            }
        }
    }
    return 1;
}

stock STATPlayer(playerid, whoid)
{
    new str[2048];
    new ddd[32];
    format(ddd, sizeof(ddd), "{00FF00}Ñâîáîäåí");
    new fff[32];
    if (Muted[whoid] < gettime()) format(fff, sizeof(fff), "{00FF00}Ìîæåò ãîâîðèòü");
    else format(fff, sizeof(fff), "{FF0000}Çàòêíóò!");
    format(str, sizeof(str), "{FFFFFF}Ñòàòèñòèêà èãðîêà\t{CCFF00}%s\n\n\
	{CCFF00}Äåíåã:{FFFFFF}\t\t\t%d\n\
	{CCFF00}Î÷êîâ äðèôòà:{FFFFFF}\t\t%d\n\
	{CCFF00}Óáèéñòâ:{FFFFFF}\t\t%d\n\
	{CCFF00}Ñìåðòåé:{FFFFFF}\t\t%d\n\
	{CCFF00}Îòûãðàíî âðåìåíè:{FFFFFF}\t%d\n\
	{CCFF00}Äàòà ðåãèñòðàöèè:{FFFFFF}\t%s\n\
	{CCFF00}Ïðåäóïðåæäåíèé:{FFFFFF}\t%d\n\
	{CCFF00}Â òþðüìå:{FFFFFF}\t\t%s\n\
	{CCFF00}Â ìóòå:{FFFFFF}\t\t\t%s\n",
           PlayerInfo[whoid][pName], GetPVarInt(whoid, "PlMon"), PlayerInfo[whoid][pDriftExp], PlayerInfo[whoid][pKills], PlayerInfo[whoid][pDeaths], PlayerInfo[whoid][pMinlog], date("%dd/%mm/%yyyy â %hh:%ii:%ss", PlayerInfo[whoid][pTDReg]), PlayerInfo[whoid][pWarns], ddd, fff);
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, ">>[ÑÒÀÒÈÑÒÈÊÀ]<<", str, "ÎÊ", "");
    return 1;
}

stock split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while (i <= strlen(strsrc))
    {
        if (strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i + 1;
            aNum++;
        }
        i++;
    }
    return 1;
}

new polsec = 0;
fpub:PolSec()//âñïîìîãàòåëüíûé òàéìåð 450 ìñ
{
    new string[256];
    foreach (Player, i) //öèêë äëÿ âñåõ èãðîêîâ
    {
        if (IsPlayerConnected(i)) //äàëüíåéøåå âûïîëíÿåì åñëè èãðîê â êîííåêòå
        {
            if (IsPlayerInAnyVehicle(i)) //speedometer
            {
                if (bool:R_Vehicle[i] == VehicleSpeed_2)
                {
                    //Vehicle Speed
                    format(string, sizeof(string), "~b~%03d ~y~km'h", GetPlayerSpeed(i));
                    PlayerTextDrawSetString(i, VehicleSpeed[i], string);
                }
                foreach (Player, g)
                {
                    if (AI[g][aSpectateID] == i)
                    {
                        format(string, sizeof(string), "~r~Max Speed: ~y~%d", GetHMaxSpeed(GetPlayerVehicleID(i)));
                        PlayerTextDrawSetString(g, HMS44[g], string);

                        format(string, sizeof(string), "~b~Speed: ~y~%d", GetPlayerSpeed(i));
                        PlayerTextDrawSetString(g, spec_TD[g], string);
                    }
                }
            }
        }
    }
    if (polsec < 2) polsec++;
    else if (polsec == 2)
    {
        OneSecOnd();
        polsec = 0;
    }

    return 1;
}

stock OneSecOnd()
{
    randomzone[0] = random(5);
    randomzone[1] = random(5) + 5;
    new hour, minute, second;
    gettime(hour, minute, second);
    if (hour == 2 && minute == 55 && second == 0)
    {
        SendClientMessageToAll(COLOR_VIOLET, ""NS" {FFFFFF}×åðåç 5 ìèíóò ïðîèçîéäåò ðåñòàðò ñåðâåðà!");
    }
    if (hour == 2 && minute == 59 && second == 30)
    {
        foreach (Player, i)
        {
            ShowPlayerDialog(i, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, ">>[ÐÅÑÒÀÐÒ ÑÅÐÂÅÐÀ]<<", "{CCFF00}Âíèìàíèå!\n{FFFFFF}Âû áûëè êèêíóòû ïî ðåñòàðòó ñåðâåðà. Ïîäêëþ÷èòåñü ïîâòîðíî ÷åðåç ìèíóòó!", "ÎÊ", "");
            Kick(i);
        }
        SendRconCommand("password FEFEWFWE&RF%DF^&SD%");
    }
    if (hour == 2 && minute == 59 && second == 50)
    {
        SendRconCommand("gmx");
    }

    new timecor[2];
    gettime(timecor[0], timecor[1]);
    PayDay(timecor[0], timecor[1]);

    new string[256];

    RepairCar();

    foreach (Player, i) //öèêë äëÿ âñåõ èãðîêîâ
    {
        if (IsPlayerConnected(i)) //äàëüíåéøåå âûïîëíÿåì åñëè èãðîê â êîííåêòå
        {
            if (GetPlayerWeapon(i) == WEAPON_MINIGUN
                    || GetPlayerWeapon(i) == WEAPON_GRENADE
                    || GetPlayerWeapon(i) == WEAPON_MOLOTOV
                    || GetPlayerWeapon(i) == WEAPON_THERMAL_GOGGLES
                    || GetPlayerWeapon(i) == WEAPON_SATCHEL
                    || GetPlayerWeapon(i) == WEAPON_FLAMETHROWER
                    || GetPlayerWeapon(i) == WEAPON_HEATSEEKER
                    || GetPlayerWeapon(i) == WEAPON_ROCKETLAUNCHER
                    && (AI[i][aLevel] < 1))
            {
                ResetPlayerWeapons(i);
                format(string, sizeof(string), "[Anti-Cheat]: {FFFFFF}Èãðîê {CCFF00}%s {FFFFFF}áûë êèêíóò çà çàïðåù¸ííîå îðóæèå!", PlayerInfo[i][pName]);
                SendClientMessage(i, COLOR_RED, string);
                SendAdminMessage(COLOR_RED, string);
                for (new f; f < 26; f++) gPlayerWeapon[i][f] = WEAPON_FIST;
                Kick(i);
            }

            if (gPlayerLogged[i] && gPlayerSpawned[i]) //ñåéâèì îðóæèå
            {
                if (dmzone[i] == 0 && !(Events[i][0] && Events[i][1] && Events[i][2] && Events[i][3]) && Prison[i] <= 0)
                {
                    new strw[256];
                    for (new w; w < 13; w++) GetPlayerWeaponData(i, WEAPON_SLOT:w, gPlayerWeapon[i][w], gPlayerWeapon[i][w + 13]);
                    for (new w; w < 25; w++) format(strw, sizeof(strw), "%s%d|", strw, gPlayerWeapon[i][w]);
                    format(strw, sizeof(strw), "%s%d", strw, gPlayerWeapon[i][25]);
                    sscanf(strw, "s[128]", gPlayerLastStateWeapon[i]);
                }

                if (Muted[i] > gettime())
                {
                    format(string, sizeof(string), "Â ìóòå (äî îêîí÷àíèÿ %d ñåê.)", Muted[i] - gettime());
                    SetPlayerChatBubble(i, string, COLOR_RED, 15.0, 1500);
                }
                if (Muted[i] <= gettime() && Muted[i] != 0)
                {
                    Muted[i] = 0;
                    format(string, sizeof(string), ""NS" {CCFF00}%s[%d] {FFFFFF}ñíîâà ìîæåò ãîâîðèòü!", PlayerInfo[i][pName], i);
                    SendClientMessageToAll(COLOR_VIOLET, string);
                }
                if (Prison[i] <= gettime() && Prison[i] != 0)
                {
                    Prison[i] = 0;
                    format(string, sizeof(string), ""NS" {CCFF00}%s[%d] {FFFFFF}îòñèäåë ïîëíûé ñâîé ñðîê è ïîëíîñòüþ ñâîáîäåí!", PlayerInfo[i][pName], i);
                    SendClientMessageToAll(COLOR_VIOLET, string);
                    prisoncheck[i] = false;
                    SpawnPlayer(i);
                }
            }

            if (gPlayerSpawned[i] && gPlayerLogged[i])
            {
                if (GetPVarInt(i, "press_fire") == 1)
                {
                    if (completion_fire[i] == 15)
                    {
                        new money = 30000 + random(20000);
                        SendClientMessage(i, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Òû óñïåøíî ïîòóøèë ïîæàð, åçæàé äàëåå{CCFF00}!");
                        SendClientMessage(i, COLOR_VIOLET, "[ÏÎÆÀÐÍÈÊ]: {FFFFFF}Åñëè âû õîòèòå çàêîí÷èòü, ïðîñòî âûéäåòå ñ òðàíñïîðòà{CCFF00}!");
                        MoneyK(i, money);
                        PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
                        DestroyObject(object_fire[i]);
                        DeletePVar(i, "on_zone");
                        DeletePVar(i, "press_fire");
                        fire_stock(i);
                    }
                    else
                    {
                        format(string, sizeof(string), "%d", 15 - completion_fire[i]);
                        GameTextForPlayer(i, string, 1500, 6);
                        completion_fire[i] += 1;
                    }
                }
            }

            if (AI[i][aDEnd] <= gettime() && AI[i][aDEnd] != 0 && AI[i][aLevel] != 0) //îáíóëèì àäìèíêó
            {
                new str[256];
                SendClientMessage(i, COLOR_VIOLET, ""NS"{FFFFFF} Ïîäïèñêà íà àäìèíêó çàêîí÷èëàñü!");
                SendClientMessage(i, COLOR_VIOLET, ""NS"{FFFFFF} Åñëè æåëàåòå ïðîäëèòü, íàïèøèòå ãëàâíîìó àäìèíèñòðàòîðó!");
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `admins` SET `reasonend`='%s', `blocklogged`='1', `setendadmin`='%e' WHERE `aname`='%e' LIMIT 1", "Çàêîí÷åíà ïîäïèñêà", "SYSTEM", AI[i][aName]);
                mysql_tquery(ServerDB, str, "", "");
                format(str, sizeof(str), "%s{FFFFFF} Àäìèí {CCFF00}%s[%d] {FFFFFF}ïðîñðî÷èë ñðîê àäìèíèñòðèðîâàíèÿ. Ñíÿò!", NS, AI[i][aName], i);
                SendAdminMessage(COLOR_VIOLET, str);
                AI[i][db_ID] = 0;
                AI[i][aHASH][0] = EOS;
                AI[i][aPass][0] = EOS;
                AI[i][aName][0] = EOS;
                AI[i][aDGet] = 0;
                AI[i][aDEnd] = 0;
                AI[i][aMakeAdmin][0] = EOS;
                AI[i][aMakeAdminEnd][0] = EOS;
                AI[i][aReasonEnd][0] = EOS;
                AI[i][aBlock] = 0;
                AI[i][aKickPlayers] = 0;
                AI[i][aBanPlayers] = 0;
                AI[i][aLogCount] = 0;
                AI[i][aLevel] = 0;
                AI[i][aResPlayer] = 0;
                AI[i][aTimeOnline] = 0;
                AI[i][aGod] = 0;
                StopSpectate(i);
                if (AI[i][aVehicle] != 0)
                {
                    DestroyVehicle(AI[i][aVehicle]);
                    AI[i][aVehicle] = 0;
                }
                return 1;
            }

            if (gPlayerSpawned[i]) //åñëè èãðîê çàñïàâíèëñÿ,
            {
                for (new j = 0; j < 13; j++) //ñîõðàíÿåì âñå ñëîòû
                {
                    GetPlayerWeaponData(i, WEAPON_SLOT:j, playweap[i][WEAPON_SLOT:j], playammo[i][WEAPON_SLOT:j]);
                }
            }
            if (StopHidrav[i] > 0) //åñëè ïåðåìåííàÿ çàäåðæêè ãèäðàâëèêè > 0, òî:
            {
                StopHidrav[i]--;//äåêðåìåíòèðóåì ïåðåìåííóþ çàäåðæêè
            }
            if (countdown[i] > 0) //åñëè èãðîê çàïóñòèë îáðàòíûé îòñ÷¸ò, òî:
            {
                countdown[i] -= 1;
                new str[6];
                format(str, 6, "...%d", countdown[i]);
                GameTextForPlayer(i, str, 950, 4);
                PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
                if (countdown[i] < 4)TogglePlayerControllable(i, false);
            }
            if (countdown[i] == 0)
            {
                TogglePlayerControllable(i, true);
                GameTextForPlayer(i, "~b~GO GO GO !", 700, 4);
                PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                countdown[i] = -1;
            }
            if (countdown22[i] > 0) //åñëè èãðîê çàïóñòèë îáðàòíûé DM-îòñ÷¸ò, òî:
            {
                countdown22[i] -= 1;
                new str[6];
                format(str, 6, "...%d", countdown22[i]);
                GameTextForPlayer(i, str, 950, 4);
                PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
            }
            if (countdown22[i] == 0)
            {
                GameTextForPlayer(i, "~b~GO GO GO !", 700, 4);
                PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
                countdown22[i] = -1;
            }
        }
    }
    return 1;
}

public MinServ()//òàéìåð ìèíóò íà ñåðâåðå
{
    foreach (Player, i)
    {
        if (IsPlayerConnected(i) && gPlayerLogged[i])
        {
            PlayerInfo[i][pMinlog]++;
            OnPlayerSave(i);
        }
    }
    respawncars ++;
    if (respawncars == 59)
    {
        SendClientMessageToAll(COLOR_VIOLET, ""NS" {FFFFFF}×åðåç ìèíóòó ïðîèçîéäåò {CCFF00}ðåñïàâí íåçàíÿòîãî òðàíñïîðòà!");
    }
    if (respawncars == 60)
    {
        SendClientMessageToAll(COLOR_VIOLET, ""NS" {FFFFFF}Âåñü íåçàíÿòûé òðàíñïîðò áûë {CCFF00}çàðåñïàóíåí!");
        for (new c = 0; c < MAX_VEHICLES; c++)
        {
            if (!IsVehicleOccupiedCar(c))
            {
                SetVehicleToRespawn(c);
            }
        }
        respawncars = 0;
    }

    return 1;
}

fpub:IsVehicleOccupiedCar(vehicleid)
{
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerInVehicle(i, vehicleid)) return 1;
    }
    return 0;
}

stock RepairCar()
{
    foreach (Player, i)
    {
        if (IsPlayerConnected(i))
        {
            if (autorepair[i] && GetPlayerState(i) == PLAYER_STATE_DRIVER)
            {
                new car = GetPlayerVehicleID(i);
                RepairVehicle(car);
                SetVehicleHealth(car, 1000);
            }
        }
    }
    return 1;
}

fpub:PassControl(string[])//êîíòðîëü ïàðîëÿ íà ïîñòîðîííèå ñèìâîëû
{
    new dln, dopper;
    dln = strlen(string);
    dopper = 1;
    for (new i = 0; i < dln; i++)
    {
        if (string[i] < 48 || (string[i] > 57 && string[i] < 65) ||
                (string[i] > 90 && string[i] < 97) || string[i] > 122)
        {
            dopper = 0;
        }
    }
    return dopper;
}

fpub:InpTxtControl(string[])//êîíòðîëü ââîäèìîãî òåêñòà íà ïîñòîðîííèå ñèìâîëû
{
    new dln, dopper;
    dln = strlen(string);
    dopper = 1;
    for (new i = 0; i < dln; i++)
    {
        if (string[i] < 32 || string[i] == 37 || string[i] == 126 ||
                string[i] == 127 || string[i] == 152 || string[i] == 160)
        {
            dopper = 0;
        }
    }
    return dopper;
}

public OnPlayerCommandReceived(playerid, cmd[], params[], flags)
{
    if (!gPlayerLogged[playerid])
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå àâòîðèçèðîâàëèñü!");
        return 0;
    }
    return 1;
}

public OnPlayerCommandPerformed(playerid, cmd[], params[], result, flags)
{
    printf(" Èãðîê %s[%d] ââ¸ë êîìàíäó: /%s %s", PlayerInfo[playerid][pName], playerid, cmd, params); //00AAFF

    if (PlayerInfo[playerid][pSkin] < 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 1;
    }

    if (result == -1)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Òàêîé êîìàíäû íå ñóùåñòâóåò! Äëÿ èíôîðìàöèè ïî êîìàíäàì ââåäèòå {8F30E4}/cmd");
        return 0;
    }
    return 1;
}

flags:hh(CMD_LOGGED)
CMD:hh(playerid)
{
    new string[144];
    if (Muted[playerid] > gettime())
    {
        format(string, sizeof(string), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, string);
        return 1;
    }

    if (CheckFlood(playerid, "StopHH", 10) == 0)
    {
        return 1;
    }
    else
    {
        format(string, sizeof(string), "Èãðîê %s[%d] ïîïðèâåòñòâîâàë âñåõ! ;ç", PlayerInfo[playerid][pName], playerid);
        SendClientMessageToAll(0xCCFF00FF, string);
    }
    return 1;
}

flags:bb(CMD_LOGGED)
CMD:bb(playerid)
{
    new string[144];
    if (Muted[playerid] > gettime())
    {
        format(string, sizeof(string), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, string);
        return 1;
    }
    if (CheckFlood(playerid, "StopBB", 10) == 0)
    {
        return 1;
    }
    else
    {
        format(string, sizeof(string), "Èãðîê %s[%d] ïîïðîùàëñÿ ñî âñåìè! :c", PlayerInfo[playerid][pName], playerid);
        SendClientMessageToAll(0xFFA500FF, string);
    }
    return 1;
}

flags:report(CMD_SPAWNED)
CMD:report(playerid, params[])
{
    new string[256], id, ruport[144];

    if (Muted[playerid] > gettime())
    {
        format(string, sizeof(string), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, string);
        return 1;
    }
    if (AI[playerid][aLevel] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû - àäìèí!");
    if (sscanf(params, "ds[144]", id, ruport)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" /report [id] [íàðóøåíèå]");
    if (!IsPlayerConnected(id)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîêà íåò íà ñåðâåðå!");
    if (id == playerid) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ââåëè ñâîé ID!");
    if (CheckFlood(playerid, "StopReport", 20) == 0)
    {
        return 1;
    }
    else
    {
        new per55 = 0;
        foreach (Player, i)
        {
            if (IsPlayerConnected(i))
            {
                if (AI[i][aLevel] >= 1)
                {
                    per55 = 1;   //ïîèñê òîëüêî ÍÅ ñêðûòûõ àäìèíîâ
                }
            }
        }
        if (per55 == 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF} Æàëîáà íå îòïðàâëåíà, íåò àäìèíîâ íà ñåðâåðå!");
        format(string, sizeof(string), "[REPORT] {FFFF00}Îò {FF3F3F}%s[%d] {FFFF00}íà èãðîêà {FF3F3F}%s[%d]{FFFF00}, ïðè÷èíà: {FFFFFF}%s", PlayerInfo[playerid][pName], playerid, PlayerInfo[id][pName], id, ruport);
        SendAdminMessage(COLOR_RED, string);
        print(string);
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Âàøà æàëîáà îòïðàâëåíà àäìèíàì, îæèäàéòå å¸ ðàññìîòðåíèÿ.");
    }
    return 1;
}

flags:rules(CMD_LOGGED)
CMD:rules(playerid)
{
    new strdln[2048];
    format(strdln, sizeof(strdln), "{8F30E4}[1] ×àò ñåðâåðà. {FF3F3F}Â ÷àòå çàïðåùåíî ñëåäóþùèå:\n\
    \n{CCFF00}1.1. {FFFFFF}×ðåçìåðíîå èñïîëüçîâàíèå Ìàòà / ÊÀÏÑÀ / Ôëóäà. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Ìóò 5 ìèíóò]\
    \n{CCFF00}1.2. {FFFFFF}Îñêîðáëåíèÿ â ëþáîì åãî âèäå. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Ìóò 15 ìèíóò]");
    format(strdln, sizeof(strdln), "%s\n{CCFF00}1.3. {FFFFFF}Çàòðàãèâàíèå èëè îñêîðáëåíèå ðîäíûõ. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Ìóò / Áàí]\
    \n{CCFF00}1.4. {FFFFFF}Ðåêëàìà è óïîìèíàíèå ñòîðîííèõ ïðîåêòîâ, ðåñóðñîâ, ñàéòîâ. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Ìóò / Áàí]", strdln);
    format(strdln, sizeof(strdln), "%s\n{CCFF00}1.5. {FFFFFF}Âûïðàøèâàíèå ÷åãî-ëèáî (äåíåã, äîíàòà, àäìèíêè è ò.ä). {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Ìóò 15 ìèíóò]", strdln);
    format(strdln, sizeof(strdln), "%s\n\n\n{8F30E4}[2] Èãðîâîé ïðîöåññ. {FF3F3F}Â èãðå çàïðåùåíû ñäåëóþùèå äåéñòâèÿ:\n\
    \n{CCFF00}2.1. {FFFFFF}Èñïîëüçîâàòü ËÞÁÛÅ ÷èòû, cleo, áàãè, ìîäû è ò.ï. Äàþùèå ïðåèìóùåñòâî â èãðå. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Òþðüìà / Áàí]", strdln);
    format(strdln, sizeof(strdln), "%s\n{CCFF00}2.2. {FFFFFF}Ìåøàòü ïðîâåäåíèþ ìåðîïðèÿòèé (ÌÏ). {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Òþðüìà 5-15 ìèíóò]\
    \n{CCFF00}2.3. {FFFFFF}Êîïèðîâàòü íàçâàíèå êëàíîâ, èëè èñïîëüçîâàòü â íàçâàíèè ìàò, îñê è ò.ä. {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Óäàëåíèå êëàíà]", strdln);
    format(strdln, sizeof(strdln), "%s\n{CCFF00}2.4. {FFFFFF}ÄÌ òðàíñïîðòîì{AFAFAF}(DriveBy) {FFFFFF}èëè íà ðåñïàâíå èãðîêà{AFAFAF}(SpawnKill). {FF3F3F}ÍÀÊÀÇÀÍÈÅ: {8F30E4}[Òþðüìà 5 ìèíóò]", strdln);
    format(strdln, sizeof(strdln), "%s\n\n\n{33AA33}Ïðàâèëà ñåðâåðà ñî âðåìåíåì áóäóò ðåäàêòèðîâàòüñÿ è äîïîëíÿòñÿ.\
	\nÎ âñåõ èçìåíåíèÿõ â ïðàâèëàõ ñåðâåðà âû áóäèòå óâåäîìëåíû ñâîåâðåìåííî.\n", strdln);
    format(strdln, sizeof(strdln), "%s\n\n{FF3F3F}ÂÍÈÌÀÍÈÅ: {FFFFFF}Åñëè Âàñ â ÷åì-òî ïîäîçðåâàþò, ñîâåòóåì ñâîåâðåìåííî ôèêñèðîâàòü îïðàâäàíèå\
	\nâ {AFAFAF}Ôîòî/Âèäåî {FFFFFF}ôîðìàòå, äàáû èçáåæàòü ëèøíèõ èíöåíäåíòîâ ïðè áëîêèðîêà/ðàçáëîêèðîâêè àêêàóíòà.", strdln);
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{FFFFFF}ÏÐÀÂÈËÀ ÑÅÐÂÅÐÀ {CCFF00}'DRIFT DREAMS PROJECT'", strdln, "ÏÐÎ×ÈÒÀË", "");
    return 1;
}

flags:admins(CMD_VIP | CMD_ADMIN)
CMD:admins(playerid)
{
    mysql_tquery(ServerDB, "SELECT * FROM `admins` ORDER BY `alevel`", "atab", "d", playerid);
    return 1;
}

flags:cmd(CMD_LOGGED)
CMD:cmd(playerid)
{
    new string[2087];//2087 íà ïîñëåäíåå ðåäàêòèðîâàíèå
    strcat(string, ""COLOR_SERVER"ÊÎÌÀÍÄÛ ÑÅÐÂÅÐÀ {CCFF00}Â"NS"\r\n\n");
    strcat(string, "{CCFF00}> {FFFFFF}/treasure - ìåñòîíàõîæäåíèå çàêëàäêè\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/cmd - ïîìîùü ïî êîìàíäàì\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/hh - ïðèâåòñòâîâàòü âñåõ èãðîêîâ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/bb - ïðîùàòüñÿ ñî âñåìè èãðîêàìè\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/report - æàëîáà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/menu - ìåíþ ñåðâåðà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/spawn - çàñïàâíèòüñÿ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/count - îáðàòíûé îòñ÷åò\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/dmcount - îáðàòíûé DM îòñ÷åò\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/kill - ñóèöèä\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/heal - ïîïîëíèòü õï è áðîíü\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/cmchat - î÷èñòêà ÷àòà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/admins - àäìèíû îíëàéí\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/vips - VIP îíëàéí\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/leaders - ëèäåðû êëàíîâ îíëàéí\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/pay - ïåðåäàòü äåíüãè\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/pm - ëè÷íîå ñîîáùåíèå\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/getid - ïðîñìîòðåòü ID òðàíñïîðòà è åãî ìîäåëü\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/a - {FF0000}àäìèí ÷àò\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/v - {FF0000}âèï ÷àò\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/g - {FF0000}÷àò êëàíà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/stat - ñòàòèñòèêà èãðîêà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/mmd - ñìåíà êëàâèøè ìåíþ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/openpm - îòêëþ÷åíèå/âêëþ÷åíèå ïðèåìà PM\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/dm - òï íà äì çîíó\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/tp - òåëåïîðòû\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/transport - ðàçëè÷íûé òðàíñïîðò\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/gang - ìåíþ êëàíà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/mepl - ìåíþ èãðîêà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/radio - ðàäèî\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/buyweapon - ïîêóïêà îðóæèÿ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/settings - íàñòðîéêè àêêàóíòà\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/me - äåéñòâèå\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/try - êîìàíäà âûøå, íî ñ ðàíäîì (óäà÷à/íåóäà÷à)\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/help - ïîìîùü ïî ñåðâåðó\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/tune - Àïãðåéä äâèãàòåëÿ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/s - Ñîõðàíèòü ïîçèöèþ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/t - Òåëåïîðòèðîâàòüñÿ íà ïîçèöèþ\r\n");
    strcat(string, "{CCFF00}> {FFFFFF}/getv - Òåëåïîðòèðîâàòü àðåíäîâàíûé òðàíñïîðò ê ñåáå\r\n");
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Ïîìîùü ïî êîìàíäàì", string, "OK", "");
    return 1;
}

flags:dm(CMD_SPAWNED)
CMD:dm(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    PlayerDialogDM(playerid);
    return 1;
}

flags:tp(CMD_SPAWNED)
CMD:tp(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0) return 1;
    PlayerDialogTeleport(playerid);
    return 1;
}

flags:radio(CMD_SPAWNED)
CMD:radio(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íà ÄÌ! Çàïðåùåíî èñïîëüçîâàíèå ýòîé êîìàíäû! Ââåäèòå {CCFF00}( /dmexit )");
        return 1;
    }
    if (Prison[playerid] > gettime())
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå ðàäèî íå ðàáîòàåò!");
        return 1;
    }
    new strdln[1024];
    format(strdln, sizeof(strdln), "Âûêëþ÷èòü ðàäèî\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s",
           NMRadio[1], NMRadio[2], NMRadio[3], NMRadio[4], NMRadio[5], NMRadio[6], NMRadio[7], NMRadio[8],
           NMRadio[9], NMRadio[10], NMRadio[11], NMRadio[12]);
    ShowPlayerDialog(playerid, 15, DIALOG_STYLE_LIST, "Ðàäèî", strdln, "OK", "Îòìåíà");
    return 1;
}

flags:buyweapon(CMD_SPAWNED)
CMD:buyweapon(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] == 1 && dmzone[playerid] == 2) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Êîìàíäà íå ðàáîòàåò â 1 è 2 äì çîíàõ!");
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]: {FFFFFF}Âû íå ìîæåòå êóïèòü îðóæèå!");
    ShowPlayerDialog(playerid, 20, DIALOG_STYLE_LIST, "Êóïèòü îðóæèå", "Õîëîäíîå îðóæèå\nÏèñòîëåòû\nÐó÷íûå ïóëåì¸òû\nÄðîáîâèêè\nÂèíòîâêè\nÀâòîìàòû\nÏðåäìåòû\nÓáðàòü îðóæèå", "Âûáîð", "Íàçàä");
    return 1;
}

flags:gang(CMD_SPAWNED)
CMD:gang(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0) return 1;
    ShowGangDialog(playerid);
    return 1;
}

flags:settings(CMD_SPAWNED)
CMD:settings(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Íàñòðîéêè àêêàóíòà", "Ñìåíèòü ïàðîëü\nÑìåíèòü ñïàâí\nÑìåíèòü êëàâèøó ìåíþ", "Âûáîð", "Íàçàä");
    return 1;
}

flags:transport(CMD_SPAWNED)
CMD:transport(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Â DM-çîíàõ ÍÅÒ âîçìîæíîñòè âûáîðà òðàíñïîðòà !");
        PlayerDialogMenu(playerid);
        return 1;
    }
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, "[ÄÀËÜÍÎÁÎÉÙÈÊ]: {FFFFFF}Âû íå ìîæåòå çàñïàâíèòü òðàíñïîðò!");
    ShowPlayerDialog(playerid, 11, DIALOG_STYLE_LIST, "Òðàíñïîðòíîå ñðåäñòâî", "Òèï òðàíñïîðòà\nÒþíèíã\nÎòêëþ÷èòü / âêëþ÷èòü àâòîìàòè÷åñêèé ðåìîíò\nÓíè÷òîæèòü ëþáîé òðàíñïîðò\nÔëèïíóòü\nËè÷íûé òðàíñïîðò", "Âûáîð", "Îòìåíà");
    return 1;
}

flags:mepl(CMD_SPAWNED)
CMD:mepl(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0) return 1;
    if (Prison[playerid] > gettime())
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Â òþðüìå ìåíþ íå ðàáîòàåò!");
        return 1;
    }
    ShowPlayerDialog(playerid, 13, DIALOG_STYLE_LIST, "Ìåíþ èãðîêà", "Ïîïîëíèòü áðîíþ\
	\nÏîïîëíèòü æèçíü\nÑìåíèòü ñêèí\nÑìåíèòü ñòèëü áîÿ\nÍîâîãîäíÿÿ øàïêà\nÓáðàòü íîâîãîäíþþ øàïêó\
	\nÑàìîóáèéñòâî\nÑòàòèñòèêà\nÑìåíèòü âðåìÿ\nÑìåíèòü öâåò íèêà\nÀíèìàöèè\nÎäåæäà\nÎáúåêòû", "OK", "Íàçàä");
    return 1;
}

flags:dice(CMD_SPAWNED)
CMD:dice(playerid, params[])
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    new playerto, sum, iplayer[MAX_PLAYER_NAME], tplayer[MAX_PLAYER_NAME], strmb[256];
    if (GetPlayerInterior(playerid) == 10)
    {
        if (FloodStop[playerid] == 1) return SendClientMessage(playerid, COLOR_RED, ""NS" Âû ñëèøêîì ÷àñòî èãðàåòå â êîñòè! Ïîäîæäèòå ïàðó ñåêóíä.");
        if (PlayerToPoint(40.0, playerid, 1989.8429, 1017.4302, 994.8906))
        {
            if (sscanf(params, "dd", playerto, sum)) return SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}×òîáû íà÷àòü èãðó, ââåäèòå {FFA500}/dice [ID èãðîêà] [ñóììà]!");
            {
                if (playerid == playerto) return SendClientMessage(playerid, COLOR_RED, ""NS" Âû íå ìîæåòå èãðàòü ñ ñîáîé!");
                if (GetPVarInt(playerid, "PlMon") < 10000) return SendClientMessage(playerid, COLOR_RED, ""NS" Ó âàñ ìåíüøå $10000, Âû íå ìîæåòå èãðàòü â êàçèíî!");
                if (PlayerToPoint(50.0, playerto, 1990.8429, 1018.4302, 994.8806))
                {
                    if (GetPVarInt(playerto, "PlMon") < 10000) return SendClientMessage(playerid, COLOR_RED, ""NS" Ó èãðîêà ìåíüøå $10000, îí íå ìîæåòå èãðàòü ñ âàìè!");
                    if (GetPVarInt(playerto, "PlMon") < sum) return SendClientMessage(playerid, COLOR_RED, ""NS" Ó èãðîêà íåäîñòàòî÷íî äåíåã, îí íå ìîæåòå èãðàòü ñ âàìè!");
                    if (sum >= 10000 && sum < 10000000)
                    {
                        GetPlayerName(playerid, iplayer, sizeof(iplayer));
                        GetPlayerName(playerto, tplayer, sizeof(tplayer));
                        if (DiceLock[playerto] == 0) //Åñëè èãðîê íå çàíÿò èãðîé, òî
                        {
                            DiceLock[playerto] = 1; //Âðåìåííî áëîêèðóåì èãðîêà íà çàïðîñû äëÿ èãðû
                            DiceName[playerto] = playerid; //Óñòàíàâëèâàåì èìÿ èãðû ñâîèì ID
                            DiceMoney[playerto] = sum;
                            DiceLock[playerid] = 1; //Âðåìåííî áëîêèðóåì ñåáÿ íà çàïðîñû äëÿ èãðû
                            DiceName[playerid] = playerto; //Óñòàíàâëèâàåì èìÿ èãðû ñâîèì ID
                            DiceMoney[playerid] = sum;
                            format(strmb, sizeof(strmb), "%s ïðåäëàãàåò Âàì èãðó â êîñòè íà $%d. Âû õîòèòå áðîñèòü êîñòè?", iplayer, sum);
                            ShowPlayerDialog(playerto, 21006, DIALOG_STYLE_MSGBOX, "Èãðà â Êîñòè", strmb, "Èãðàòü", "Îòêàçàòüñÿ");
                            SendClientMessage(playerid, COLOR_GREEN, ""NS" {FFFFFF}Âû ïðåäëîæèëè èãðó â êîñòè, îæèäàéòå îòâåò.");
                            SetPlayerAttachedObject(playerid, 1, 1851, 14, 0.4609, -0.1019, -0.1199, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
                            SetPlayerAttachedObject(playerto, 1, 1851, 14, 0.4609, -0.1019, -0.1199, 0.0000, 0.0000, 0.0000, 1.0000, 1.0000, 1.0000, 0, 0);
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ýòîò èãðîê çàíÿò èãðîé â êîñòè!");
                        }
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ìèíèìàëüíàÿ ñòàâêà: $10000!");
                        SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ìàêñèìàëüíàÿ ñòàâêà: $10000000!");
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ýòîãî èãðîêà íåò â êàçèíî!");
                }
            }
        }
        else
        {
            SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû íå â çîíå èãðû!");
        }
    }
    else
    {
        SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Âû äîëæíû íàõîäèòüñÿ â êàçèíî!");
    }
    return 1;
}

flags:eject(CMD_SPAWNED)
CMD:eject(playerid, params[])
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/eject [playerid]");
    if (!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå íàõîäèòåñü â òðàíñïîðòå{FF0000}!");
    if (GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå íà âîäèòåëüñêîì ìåñòå{FF0000}!");
    if (params[0] == playerid) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå ìîæåòå âûêèíóòü ñàìîãî ñåáÿ{FF0000}!");
    if (!IsPlayerInVehicle(params[0], GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå â âàøåì òðàíñïîðòå{FF0000}!");
    RemovePlayerFromVehicle(params[0]);
    SendClientMessage(params[0], COLOR_VIOLET, ""NS" {FFFFFF}Âàñ âûêèíóëè èç òðàíñïîðòà{FF0000}!");
    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû âûêèíóëè èãðîêà èç òðàíñïîðòà{FF0000}!");
    return 1;
}

flags:setx(CMD_ADMIN)
CMD:setx(playerid, params[])
{
    new ids, scope, ipl[MAX_PLAYER_NAME], tpl[MAX_PLAYER_NAME], sssm[256];
    if (AI[playerid][aLevel] >= 4)
    {
        if (sscanf(params, "dd", ids, scope)) return SendClientMessage(playerid, 0xFF0000FF, ""NS" {FFFFFF}Èñïîëüçîâàíèå êîìàíäû:{FFA500} /setx [ID èãðîêà] [÷èñëî X óìíîæåíèÿ](0-25)!");
        if (IsPlayerConnected(ids))
        {
            if (scope > 0 && scope <= 25 || IsPlayerAdmin(playerid))
            {
                SendClientMessage(playerid, 0xFF0000FF, ""NS" {FFFFFF}Âû óñïåøíî èçìåíèëè èãðîêó X óìíîæèòåëü!");
                GetPlayerName(playerid, ipl, sizeof(ipl));
                GetPlayerName(ids, tpl, sizeof(tpl));
                PlayerInfo[ids][pCombo] = scope;
                format(sssm, sizeof(sssm), "Àäìèíèñòðàòîð %s óñòàíîâèë X%d óìíîæèòåëü èãðîêó %s", ipl, scope, tpl);
                SendClientMessageToAll(COLOR_GREEN, sssm);
                //OnPlayerSave(ids);
            }
        }
        else
        {
            SendClientMessage(playerid, 0xFF0000FF, ""NS" {FFFFFF}Ýòîãî èãðîêà íåò íà ñåðâåðå!");
        }

    }
    return 1;
}

/*
CMD:sex(playerid, params[])
{
    if(AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
	if(job[playerid]>0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
	if(Checkpoint[playerid] !=0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    new playerto, iplayer[MAX_PLAYER_NAME], strmb[256];
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
	if(sscanf(params, "d", playerto)) return SendClientMessage(playerid, COLOR_GREY, ""NS" {FFFFFF}×òîáû çàíÿòüñÿ ñåêñîì, ââåäèòå {FFA500}/sex [ID èãðîêà]");
	{
	    if(FloodStop[playerid] == 1) return SendClientMessage(playerid, COLOR_RED, ""NS" Âû íå ìîæåòå âîñïîëüçîâàòüñÿ ýòèì ñåé÷àñ!");
	    if(PlayerToPoint(2.0, playerto, X, Y, Z))
	    {
	        GetPlayerName(playerid, iplayer, sizeof(iplayer));
	        format(strmb, sizeof(strmb), "{FFFFFF}%s ïðåäëàãàåò Âàì çàíÿòüñÿ ñåêñîì. Âû ãîòîâû ïðèíÿòü ýòî ïðåäëîæåíèå?", iplayer);
			ShowPlayerDialog(playerto, 21007, DIALOG_STYLE_MSGBOX, "Ïðåäëîæåíèå î ñåêñå {FF0000}(18+)", strmb, "Ïðèíÿòü", "Îòêàçàòüñÿ");
			SendClientMessage(playerid, COLOR_GREEN, ""NS" {FFFFFF}Âû ïðåäëîæèëè çàíÿòüñÿ ñåêñîì");
			UniParam[playerto] = playerid;
	    }
	    else
	    {
	        SendClientMessage(playerid, COLOR_RED, ""NS" Èãðîê äîëæåí íàõîäèòüñÿ ðÿäîì ñ âàìè!");
	    }
	}
	return 1;
}
*/

flags:playanim(CMD_SPAWNED)
CMD:playanim(playerid, params[])
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" Äëÿ èñïîëüçîâàíèÿ ôóíêöèè âûéäèòå èç òðàíñïîðòà{FF0000}!");
        return 1;
    }
    if (sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_RED, ""NS" {FFFFFF}Ââåäèòå {FFA500}/playanim [ID]");
    if (params[0] < 0 || params[0] > 73) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Àíèìàöèè îò 0 äî 73{FF0000}!");
    SelectAnimation(playerid, params[0]);

    return 1;
}

flags:me(CMD_SPAWNED)
CMD:me(playerid, params[])
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    new text[144];
    new str[256];
    if (GetPVarInt(playerid, "mespam") > gettime()) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èñïîëüçîâàòü ýòó êîìàíäó ìîæíî ðàç â 4 ñåêóíäû");
    if (sscanf(params, "s[144]", text)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}/me [äåéñòâèå]");
    if (Muted[playerid] > gettime())
    {
        format(str, sizeof(str), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, str);
        return 1;
    }
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    foreach (Player, i)
    {
        if (PlayerToPoint(50.0, playerid, X, Y, Z))
        {
            if (PlayerToPoint(50.0, i, X, Y, Z))
            {
                format(str, sizeof(str), "%s %s", PlayerInfo[playerid][pName], text);
                SendClientMessage(i, 0xCCFF00FF, str);
                SetPlayerChatBubble(playerid, text, 0xCCFF00FF, 15.0, 5000);
            }
        }
    }
    SetPVarInt(playerid, "mespam", gettime() + 4);
    return 1;
}

flags:try(CMD_SPAWNED)
CMD:try(playerid, params[])
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    new text[144];
    new str[256];
    if (GetPVarInt(playerid, "tryspam") > gettime()) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èñïîëüçîâàòü ýòó êîìàíäó ìîæíî ðàç â 4 ñåêóíäû");
    if (sscanf(params, "s[144]", text)) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}/try [äåéñòâèå]");
    if (Muted[playerid] > gettime())
    {
        format(str, sizeof(str), ""NS" {FFFFFF}Ó Âàñ ìóò! Ïîäîæäèòå åù¸ %d ñåê.", Muted[playerid] - gettime());
        SendClientMessage(playerid, COLOR_VIOLET, str);
        return 1;
    }
    switch (random(2))
    {
        case 0: format(str, sizeof(str), "%s %s | {FF0000}Íåóäà÷íî", PlayerInfo[playerid][pName], text);
        case 1: format(str, sizeof(str), "%s %s | {00FF00}Óäà÷íî", PlayerInfo[playerid][pName], text);
        default:
            format(str, sizeof(str), "%s %s | {FF0000}Íåóäà÷íî", PlayerInfo[playerid][pName], text);
    }
    new Float:X, Float:Y, Float:Z;
    GetPlayerPos(playerid, X, Y, Z);
    foreach (Player, i)
    {
        if (PlayerToPoint(50.0, playerid, X, Y, Z))
        {
            if (PlayerToPoint(50.0, i, X, Y, Z))
            {
                //SetPlayerChatBubble(playerid, text, 0xCCFF00FF, 15.0, 5000);
                SendClientMessage(i, 0xCCFF00FF, str);

            }
        }
    }
    SetPVarInt(playerid, "tryspam", gettime() + 4);
    return 1;
}

flags:cmchat(CMD_LOGGED)
CMD:cmchat(playerid)
{
    for (new i = 0; i < 60; i++)
    {
        SendClientMessage(playerid, -1, " ");
    }
    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû î÷èñòèëè ñâîé ÷àò!");
    return 1;
}

flags:help(CMD_LOGGED)
CMD:help(playerid)
{
    ShowPlayerDialog(playerid, 900, DIALOG_STYLE_LIST, "Ïîìîùü ïî ñåðâåðó", "[1] Êîìàíäû ñåðâåðà\n[2] Ïîìîùü ïî ÷àòó ñåðâåðà\n[3] Ïðàâèëà ñåðâåðà\n[4] Èíôîðìàöèÿ î ñåðâåðå", "Âûáîð", "Îòìåíà");
    return 1;
}

flags:dmexit(CMD_SPAWNED)
CMD:dmexit(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (dmzone[playerid] != 0)
    {
        // if (!GetCbugAllowed(playerid))SetCbugAllowed(true, playerid);
        dmzone[playerid] = 0;
        SpawnPlayer(playerid);
        dmkills[playerid] = 0;
        dmdeath[playerid] = 0;
        if (GetPVarInt(playerid, "goodspawn") != 1)
        {
            SendClientMessage(playerid, COLOR_VIOLET, ""NS"{FFFFFF} Ðåæèì áåññìåðòèÿ àêòèâèðîâàí. Íàíåñèòå óðîí èãðîêó, ÷òîáû ñíÿòü åãî ñåáå!");
            SetPlayerHealth(playerid, 100);
            SetPlayerArmour(playerid, 100);
            SetPVarInt(playerid, "goodspawn", 1);
            new Float:x, Float:y, Float:z;
            GetPlayerPos(playerid, x, y, z);
            Streamer_UpdateEx(playerid, Float:x, Float:y, Float:z, 0, 0);
        }
    }
    return 1;
}

stock GetPlayerID(const Names[])
{
    foreach (new i:Player)
    {
        if (!strcmp(Names, PlayerInfo[i][pName])) return i;
    }
    return -1;
}

fpub:ClearAnimationsForPlayer(playerid)
{
    ClearAnimations(playerid);
    return 1;
}
fpub:AntiFlood(playerid)
{
    FloodStop[playerid] = 0;
}
public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
    return 1;
}

fpub:atab(playerid)
{
    if (cache_num_rows() > 0)
    {
        new fulldialog[3000], str[3000];
        fulldialog = "{FF0000}Óðîâåíü\t{CCFF00}Íèê\t{FFFF00}Ñòàòóñ\n\n";
        for (new i = 0; i < cache_num_rows(); i++)
        {
            new name[MAX_PLAYER_NAME];
            cache_get_value_name(i, "aname", name, MAX_PLAYER_NAME);
            //cache_get_field_content(i, "aname", name, ServerDB, MAX_PLAYER_NAME);
            new id = GetPlayerID(name);
            new admin;

            if (IsPlayerConnected(id) && gPlayerLogged[id] && AI[id][aLevel] > 0 && AI[playerid][aShad] == 0)
            {
                format(str, sizeof str, "{FF0000}%d\t{CCFF00}%s\t{FFFF00}ONLINE\n", AI[id][aLevel], name); //
            }
            else
            {
                //admin = cache_get_field_content_int(i, "alevel", ServerDB);
                cache_get_value_int(i, "alevel", admin);
                if (admin > 0)
                {
                    format(str, sizeof str, "{FF0000}%d\t{CCFF00}%s\t{FF0000}OFFLINE\n", admin, name);
                }
            }
            strcat(fulldialog, str);
        }
        ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_TABLIST_HEADERS, "Âñå àäìèíèñòðàòîðû ñåðâåðà", fulldialog, "ÎÊ", "");
    }
    return 1;
}

stock Teleport(playerid, Float:x, Float:y, Float:z, vw, int, bool:incar, Float:anglee, bool:freeze = true)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    tpdrift[playerid] = 1;
    if (!incar)
    {
        SetPlayerInterior(playerid, int);
        SetPlayerVirtualWorld(playerid, vw);
        SetPlayerPos(playerid, Float:x, Float:y, Float:z);
        SetPlayerFacingAngle(playerid, anglee);
    }
    else if (GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
        new VID = GetPlayerVehicleID(playerid);
        SetVehicleVirtualWorld(VID, vw) ;
        SetVehiclePos(VID, x, y, z);
        SetVehicleZAngle(VID, anglee);
    }
    else
    {
        SetPlayerInterior(playerid, int);
        SetPlayerVirtualWorld(playerid, vw);
        SetPlayerPos(playerid, Float:x, Float:y, Float:z);
        SetPlayerFacingAngle(playerid, anglee);
    }
    SetCameraBehindPlayer(playerid);

    if (freeze == true)
    {
        Streamer_UpdateEx(playerid, Float:x, Float:y, Float:z, vw, int);
        TogglePlayerControllable(playerid, false);
        SetTimerEx("Freeze1sec", 1000, false, "i", playerid);
    }
    foreach (Player, i)
    {
        if (AI[i][aSpectateID] == playerid)
        {
            StartSpectate(i, playerid);
        }
    }
    return 1;
}

public OnPlayerEditObject(playerid, playerobject, objectid, EDIT_RESPONSE:response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
    return 0;
}

flags:ainfo(CMD_ADMIN)
CMD:ainfo(playerid)
{
    new str[1024];
    format(str, sizeof(str), "Àäìèíèñòðàòîð %s [DATABASE ID %d]:\
	\n\nÓðîâåíü: %d\
	\nÄàòà âûäà÷è àäìèíêè: %s\
	\nÄàòà îêîí÷àíèÿ ñðîêà àäìèíêè: %s\
	\nÂûäàë: %s\
	\nÊîëëè÷åñòâî ëîãèðîâàíèé: %d\
	\nÎáùåå ÷èñëî êèêíóòûõ âàìè: %d\
	\nÎáùåå ÷èñëî çàáàíåíûõ âàìè: %d\
	\nÎáùåå ÷èñëî îòïðàâëåííûõ îòâåòîâ èãðîêàì: %d\
	\nÂðåìåíè ïðîâåäåíî â îíëàéíå íà àäìèíêå: %d",
           AI[playerid][aName], AI[playerid][db_ID],
           AI[playerid][aLevel],
           date("%dd/%mm/%yyyy", AI[playerid][aDGet]),
           date("%dd/%mm/%yyyy", AI[playerid][aDEnd]),
           AI[playerid][aMakeAdmin],
           AI[playerid][aLogCount],
           AI[playerid][aKickPlayers],
           AI[playerid][aBanPlayers],
           AI[playerid][aResPlayer],
           AI[playerid][aTimeOnline]);
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "Èíôî", str, "ÎÊ", "");
    return 1;
}

stock HexToInt(const string[])
{
    if (string[0] == 0) return 0;
    new i;
    new cur = 1;
    new res = 0;
    for (i = strlen(string); i > 0; i--)
    {
        if (string[i - 1] < 58) res = res + cur * (string[i - 1] - 48);
        else res = res + cur * (string[i - 1] - 65 + 10);
        cur = cur * 16;
    }
    return res;
}

// îñíîâíûå ôóíêöèè ñèñòåìû äîìîâ. Created  by Uporoty
fpub:LoadHouses()
{
    new time = GetTickCount();
    //cache_get_data(MAX_CREATED_HOUSE, fields);
    if (MAX_CREATED_HOUSE > MAX_CREATE_HOUSE) MAX_CREATED_HOUSE = MAX_CREATE_HOUSE;
    for (new hid; hid < cache_num_rows(); hid++)
    {
        cache_get_value_int(hid, "id", HouseInfo[hid][hID]);
        cache_get_value_bool(hid, "owned", HouseInfo[hid][hOwned]);
        cache_get_value_name(hid, "owner", HouseInfo[hid][hOwner], MAX_PLAYER_NAME);
        cache_get_value_bool(hid, "lock", HouseInfo[hid][hLocked]);
        cache_get_value_int(hid, "cost", HouseInfo[hid][hCost]);
        cache_get_value_int(hid, "klass", HouseInfo[hid][hKlass]);
        cache_get_value_int(hid, "int", HouseInfo[hid][hInt]);
        cache_get_value_float(hid, "enterx", HouseInfo[hid][hEnterCoord][0]);
        cache_get_value_float(hid, "entery", HouseInfo[hid][hEnterCoord][1]);
        cache_get_value_float(hid, "enterz", HouseInfo[hid][hEnterCoord][2]);

        HouseInfo[hid][hPickupID] = CreateDynamicPickup(1273, 1, HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 0, 0, -1, 30.0);
        HouseInfo[hid][hLabelID] = CreateDynamic3DTextLabel("Äîì äîáàâëÿåòñÿ...", -1, HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
        HouseInfo[hid][hMapIconID] = CreateDynamicMapIcon(HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 31, -1, 0, 0, -1);

        UpdateHouseInfo(hid);
    }
    for (new i, s = sizeof(gHousesSetting); i < s; i++) CreateDynamicPickup(19134, 1, gHousesSetting[i][g_hCoordX], gHousesSetting[i][g_hCoordY], gHousesSetting[i][g_hCoordZ], -1, gHousesSetting[i][g_hInt], -1, 15.0);
    printf("Äîìà óñïåøíî çàãðóæåíû. Âñåãî çàãðóæåíî %d äîìîâ. Ïîòðà÷åíî íà çàãðóçêó: %i ms", cache_num_rows(), GetTickCount() - time);
    MAX_CREATED_HOUSE = cache_num_rows();
    return 1;
}

stock CreateHouse(klass, cost, Float:x, Float:y, Float:z)
{
    if (MAX_CREATED_HOUSE >= MAX_CREATE_HOUSE) return -1;
    for (new i; i < MAX_CREATE_HOUSE; i++)
    {
        if (HouseInfo[i][hID]) continue;
        HouseInfo[i][hID] = -1;
        HouseInfo[i][hPickupID] = CreateDynamicPickup(1273, 1, x, y, z, 0, 0, -1, 30.0);
        HouseInfo[i][hLabelID] = CreateDynamic3DTextLabel("Äîì ñîçäà¸òñÿ, îæèäàéòå...", -1, x, y, z, 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
        HouseInfo[i][hMapIconID] = CreateDynamicMapIcon(x, y, z, 31, -1, 0, 0, -1);
        HouseInfo[i][hKlass] = klass;
        new inter[sizeof(gHousesSetting)] = {0};
        new f = 0;
        for (new k; k < sizeof(gHousesSetting); k++)
        {
            if (HouseInfo[i][hKlass] == gHousesSetting[k][g_hKlass])
            {
                inter[f] = gHousesSetting[k][g_hInt];
                f++;
            }
        }
        HouseInfo[i][hInt] = inter[random(f)];
        HouseInfo[i][hCost] = cost;
        HouseInfo[i][hEnterCoord][0] = x;
        HouseInfo[i][hEnterCoord][1] = y;
        HouseInfo[i][hEnterCoord][2] = z;

        mysql_tquery(ServerDB, "INSERT INTO `houses` (`int`) VALUES ('0')", "CreateHouseEx", "i", i);
        if (i >= MAX_CREATED_HOUSE) MAX_CREATED_HOUSE++;
        return 0;
    }
    return -1;
}
fpub:CreateHouseEx(hid)
{
    HouseInfo[hid][hID] = cache_insert_id();
    ClearHouse(hid);
    return 1;
}
SaveHouse(hid)
{
    if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1) return;

    new query[256];
    mysql_format(ServerDB, query, sizeof(query), "UPDATE `houses` SET `owned`='%d',`owner`='%s',`lock`='%d',`cost`='%d',`klass`='%d',`int`='%d',`enterx`='%.4f',`entery`='%.4f',`enterz`='%.4f' WHERE `id`='%d' LIMIT 1", HouseInfo[hid][hOwned], HouseInfo[hid][hOwner], HouseInfo[hid][hLocked], HouseInfo[hid][hCost], HouseInfo[hid][hKlass], HouseInfo[hid][hInt], HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], HouseInfo[hid][hID]);
    mysql_tquery(ServerDB, query, "", "");
}
UpdateHouseInfo(hid, bool:type = true)
{
    if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1) return;
    DestroyDynamicPickup(HouseInfo[hid][hPickupID]);
    DestroyDynamicMapIcon(HouseInfo[hid][hMapIconID]);
    if (type)
    {
        new str[156], strklass[3][3] = {" A", " B", " C"};
        if (!HouseInfo[hid][hOwned])
        {
            HouseInfo[hid][hPickupID] = CreateDynamicPickup(1273, 1, HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 0, 0, -1, 30.0);
            HouseInfo[hid][hMapIconID] = CreateDynamicMapIcon(HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 31, -1, 0, 0, -1);
            format(str, sizeof str, "{FFC125}Äîì {FFA500}¹ %d\n{FFC125}Ïðîäà¸òñÿ\n{FFC125}Êëàññ: {FFA500}%s\n{FFC125}Öåíà: {FFA500}%d$", hid + 1, strklass[HouseInfo[hid][hKlass] - 1], HouseInfo[hid][hCost]);
        }
        else
        {
            HouseInfo[hid][hPickupID] = CreateDynamicPickup(1272, 1, HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 0, 0, -1, 30.0);
            HouseInfo[hid][hMapIconID] = CreateDynamicMapIcon(HouseInfo[hid][hEnterCoord][0], HouseInfo[hid][hEnterCoord][1], HouseInfo[hid][hEnterCoord][2], 32, -1, 0, 0, -1);
            format(str, sizeof str, "{FFC125}Äîì {FFA500}¹ %d\n{FFC125}Âëàäåëåö: {FFA500}%s\n{FFC125}Êëàññ: {FFA500}%s\n{FFC125}Öåíà: {FFA500}%d$", hid + 1, HouseInfo[hid][hOwner], strklass[HouseInfo[hid][hKlass] - 1], HouseInfo[hid][hCost]);
        }
        UpdateDynamic3DTextLabelText(HouseInfo[hid][hLabelID], -1, str);
    }
    else DestroyDynamic3DTextLabel(HouseInfo[hid][hLabelID]);
}
ClearHouse(hid, bool:type = true)
{
    if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1) return;
    HouseInfo[hid][hOwned] = false;
    format(HouseInfo[hid][hOwner], MAX_PLAYER_NAME, "The State");
    HouseInfo[hid][hLocked] = true;
    UpdateHouseInfo(hid, type);
    if (type) SaveHouse(hid);
}
DestroyHouse(hid)
{
    if (!(0 <= hid < MAX_CREATE_HOUSE) || HouseInfo[hid][hID] < 1) return;
    if (hid == (MAX_CREATED_HOUSE - 1)) MAX_CREATED_HOUSE--;

    new query[100];
    mysql_format(ServerDB, query, sizeof(query), "DELETE FROM `houses` WHERE `id`='%d' LIMIT 1", HouseInfo[hid][hID]);
    mysql_tquery(ServerDB, query, "", "");

    ClearHouse(hid, false);
    HouseInfo[hid][hID] = 0;
}
EnterHouse(playerid, hid, bool:type = true)
{
    if (HouseInfo[hid][hLocked] && type) SendClientMessage(playerid, -1, "Äâåðè äîìà çàêðûòû!");
    else
    {
        SetPlayerVirtualWorld(playerid, HouseInfo[hid][hID]);
        /*SetPlayerInterior(playerid, gHousesSetting[HouseInfo[hid][hInt]][g_hInt]);
        SetPlayerPos(playerid, gHousesSetting[HouseInfo[hid][hInt]][g_hCoordX], gHousesSetting[HouseInfo[hid][hInt]][g_hCoordY], gHousesSetting[HouseInfo[hid][hInt]][g_hCoordZ]);*/

        Teleport(playerid, gHousesSetting[HouseInfo[hid][hInt]][g_hCoordX], gHousesSetting[HouseInfo[hid][hInt]][g_hCoordY], gHousesSetting[HouseInfo[hid][hInt]][g_hCoordZ], HouseInfo[hid][hID], gHousesSetting[HouseInfo[hid][hInt]][g_hInt], false, 0.0000, false);
    }
}
// The end functions of houses

fpub:MoneyBag() // Money Bag
{
    if (Timer[0] == 0)
    {
        new string[256];
        if (!MoneyBagFound)
        {
            format(string, sizeof(string), "[Treasure] {FFFFFF}Ñòàðóþ çàêëàäêó äî ñèõ ïîð íèêòî íå íàøåë, îíà íàõîäèòñÿ â{CCFF00} %s", MoneyBagLocation);
            SendClientMessageToAll(COLOR_VIOLET, string);
        }
        else if (MoneyBagFound)
        {
            MoneyBagFound = 0;
            new randombag = random(sizeof(MBSPAWN));
            MoneyBagPos[0] = MBSPAWN[randombag][XPOS];
            MoneyBagPos[1] = MBSPAWN[randombag][YPOS];
            MoneyBagPos[2] = MBSPAWN[randombag][ZPOS];
            format(MoneyBagLocation, sizeof(MoneyBagLocation), "%s", MBSPAWN[randombag][Position]);
            format(string, sizeof(string), "[Treasure] {FFFFFF}Íîâàÿ çàêëàäêà áûëà îñòàâëåíà â {CCFF00}%s!", MoneyBagLocation);
            SendClientMessageToAll(COLOR_VIOLET, string);
            new idpickup;
            switch (random(6))
            {
                case 0: idpickup=1575;
                case 1: idpickup=1576;
                case 2: idpickup=1577;
                case 3: idpickup=1578;
                case 4: idpickup=1579;
                case 5: idpickup=1580;
            }
            MoneyBagPickup = CreatePickup(idpickup, 2, MoneyBagPos[0], MoneyBagPos[1], MoneyBagPos[2], -1);
        }
    }
    return 1;
}

flags:mbstart(CMD_ADMIN)
CMD:mbstart(playerid)
{
    if (AI[playerid][aLevel] < 4) return 1;
    switch (Timer[0])
    {
        case 0:
        {
            Timer[0] = 1;
            KillTimer(Timer[1]);
            SendClientMessageToAll(COLOR_VIOLET, "[Treasure] {FFFFFF}Çàêëàäêè áûëè {FF0000}îòêëþ÷åíû {FFFFFF}àäìèíèñòðàöèåé ñåðâåðà!");
            MoneyBagFound = 0;
            return 1;
        }
        case 1:
        {
            Timer[0] = 0;
            Timer[1] = SetTimer("MoneyBag", MB_DELAY, true);
            MoneyBagFound = 1;
            SendClientMessage(playerid, COLOR_VIOLET, "[Treasure] {FFFFFF}Âû âêëþ÷èëè ðàñêèä çàêëàäîê!");
            MoneyBag();
            return 1;
        }
        default:
        {
            Timer[0] = 1;
            return 1;
        }
    }
    return 1;
}

flags:tpmb(CMD_ADMIN)
CMD:tpmb(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aLevel] >= 4)
    {
        SetPlayerPos(playerid, MoneyBagPos[0], MoneyBagPos[1] + 3, MoneyBagPos[2]);
        return SendClientMessage(playerid, COLOR_VIOLET, "[Treasure] {FFFFFF}Âû òåëåïîðòèðîâàëèñü ê {CCFF00}çàêëàäêå");
    }
    return 1;
}

flags:treasure(CMD_SPAWNED)
CMD:treasure(playerid)
{
    new string[144];
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (Timer[0] == 0) format(string, sizeof(string), "[Treasure] {FFFFFF}Çàêëàäêà îñòàâëåíà â {CCFF00}%s!", MoneyBagLocation);
    else format(string, sizeof(string), ""NS" {FF0000}Çàêëàäêè îòêëþ÷åíû àäìèíèñòðàöèåé!");
    SendClientMessage(playerid, COLOR_VIOLET, string);
    return 1;
}

flags:s(CMD_SPAWNED)
CMD:s(playerid)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (dmzone[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà óéäèòå ñ äì çîíû! {CCFF00}( /dmexit )");
    if (!gPlayerSpawned[playerid]) //èãðîê ÍÅ çàñïàâíèëñÿ
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 1;
    }
    if (dmzone[playerid] != 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Íåëüçÿ èñïîëüçîâàòü íà DM çîíå!");
        return 1;
    }
    GetPlayerPos(playerid, PlayerInfo[playerid][saveX], PlayerInfo[playerid][saveY], PlayerInfo[playerid][saveZ]);
    if (IsPlayerInAnyVehicle(playerid)) GetVehicleZAngle(GetPlayerVehicleID(playerid), PlayerInfo[playerid][saveA]);
    else GetPlayerFacingAngle(playerid, PlayerInfo[playerid][saveA]);
    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû ñîõðàíèëè òî÷êó!");
    PlayerInfo[playerid][saveVw] = GetPlayerVirtualWorld(playerid);
    PlayerInfo[playerid][saveInt] = GetPlayerInterior(playerid);
    return 1;
}

flags:t(CMD_SPAWNED)
CMD:t(playerid)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (job[playerid] > 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (dmzone[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà óéäèòå ñ äì çîíû! {CCFF00}( /dmexit )");
    if (!gPlayerSpawned[playerid]) //èãðîê ÍÅ çàñïàâíèëñÿ
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ íà÷àëà çàñïàâíèñü!");
        return 1;
    }
    if (dmzone[playerid] != 0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Íåëüçÿ èñïîëüçîâàòü íà DM çîíå!");
        return 1;
    }
    new Float:X, Float:Y, Float:Z, Float:A;
    X = PlayerInfo[playerid][saveX];
    Y = PlayerInfo[playerid][saveY];
    Z = PlayerInfo[playerid][saveZ];
    A = PlayerInfo[playerid][saveA];
    if (X == 0.0 && Y == 0.0 && Z == 0.0)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû åù¸ íå ñîõðàíÿëè ïîçèöèþ!");
        return 1;
    }

    Teleport(playerid, X, Y, Z + 1, PlayerInfo[playerid][saveVw], PlayerInfo[playerid][saveInt], true, A, false);
    SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû òåëåïîðòèðîâàëèñü íà ñîõðàí¸ííóþ òî÷êó!");
    return 1;
}

flags:about(CMD_SPAWNED)
cmd:about(playerid)
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, "{CCFF00}>>[Ïàñõàëêà]<<", "{FFFFFF}Ïîçäðàâëÿåì. Âû íàøëè ïàñõàëêó{FF0000}!\
	\n\n{FFFFFF}Îñíîâàòåëü ñåðâåðà: {FF0000}"GEN_D"\
	\n{FFFFFF}Ðàçðàáîò÷èê ìîäà: {FF0000}"DEVONE"", "ÎÊ", "");
    return 1;
}

new timeloadbus;
fpub:LoadBussines()
{
    timeloadbus = GetTickCount();
    for (new bid; bid < cache_num_rows(); bid++)
    {
        cache_get_value_int(bid, "ID", BI[bid][bID]);
        cache_get_value_int(bid, "Type", BI[bid][Type]);
        cache_get_value_int(bid, "Price", BI[bid][Price]);
        cache_get_value_float(bid, "X", BI[bid][xX]);
        cache_get_value_float(bid, "Y", BI[bid][yY]);
        cache_get_value_float(bid, "Z", BI[bid][zZ]);
        cache_get_value_int(bid, "BuyID", BI[bid][BuyID]);
        cache_get_value_int(bid, "accumulation", BI[bid][accumulation]);

        BI[bid][bAccum] = (BI[bid][Price] / 100) * 10;
        BI[bid][bAccumOffline] = (BI[bid][Price] / 100) * 1;

        if (BI[bid][BuyID] != 0)
        {
            new str[64];
            mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `players` WHERE `PID` = '%d' LIMIT 1", BI[bid][BuyID]);
            mysql_tquery(ServerDB, str, "GetBussinesOwnerName", "dd", BI[bid][BuyID], bid);
        }
        else
        {
            format(BI[bid][bOwner], MAX_PLAYER_NAME, "Íèêòî íå âëàäååò");
        }
    }

    if (cache_num_rows() != 0)
    {
        CreateBussinesOnMap(cache_num_rows());
    }
    else printf("Áèçíåñû óñïåøíî çàãðóæåíû. Âñåãî çàãðóæåíî 0 áèçîâ. Ïîòðà÷åíî íà çàãðóçêó: %i ms", GetTickCount() - timeloadbus);
    return 1;
}

fpub:GetBussinesOwnerName(iddb, idbus)
{
    new str[512];
    if (cache_num_rows() > 0)
    {
        cache_get_value_name(0, "PlayerName", BI[idbus][bOwner], MAX_PLAYER_NAME);
    }
    else
    {
        if (BI[idbus][BuyID] != 0)format(BI[idbus][bOwner], MAX_PLAYER_NAME, "INVALID_PLAYER");
        else format(BI[idbus][bOwner], MAX_PLAYER_NAME, "Íèêòî íå âëàäååò");
    }
    format(str, sizeof(str), "Áèçíåñ. ID: {CCFF00}%d\n{FFFFFF}Òèï áèçíåñà: {CCFF00}%s\n{FFFFFF}Öåíà: {CCFF00}$%d\n{FFFFFF}Äîõîä â ÷àñ: {CCFF00}$%d {FFFFFF}(åñëè âëàäåëåö OffLine: {CCFF00}$%d{FFFFFF})\nÂëàäåëåö: {CCFF00}%s", BI[idbus][bID], btipname[BI[idbus][Type]], BI[idbus][Price], BI[idbus][bAccum], BI[idbus][bAccumOffline], BI[idbus][bOwner]);
    UpdateDynamic3DTextLabelText(BI[idbus][bLabelID], -1, str);
    return 1;
}

stock CreateBussinesOnMap(colums)
{
    for (new i = 0; i < colums; i++)
    {
        new str[512];
        BI[i][bPickupID] = CreateDynamicPickup(1274, 1, BI[i][xX], BI[i][yY], BI[i][zZ], 0, 0, -1, 30.0);
        format(str, sizeof(str), "Áèçíåñ. ID: {CCFF00}%d\n{FFFFFF}Òèï áèçíåñà: {CCFF00}%s\n{FFFFFF}Öåíà: {CCFF00}%d\n{FFFFFF}Äîõîä â ÷àñ: {CCFF00}$%d {FFFFFF}(åñëè âëàäåëåö OffLine: {CCFF00}$%d{FFFFFF})\nÂëàäåëåö: {CCFF00}%s", BI[i][bID], btipname[BI[i][Type]], BI[i][Price],  BI[i][bAccum], BI[i][bAccumOffline], BI[i][bOwner]);
        BI[i][bLabelID] = CreateDynamic3DTextLabel(str, -1, BI[i][xX], BI[i][yY], BI[i][zZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
        BI[i][bMapIconID] = CreateDynamicMapIcon(BI[i][xX], BI[i][yY], BI[i][zZ], 52, -1, 0, 0, -1);
    }
    printf("Áèçíåñû óñïåøíî çàãðóæåíû. Âñåãî çàãðóæåíî %d áèçîâ. Ïîòðà÷åíî íà çàãðóçêó: %i ms", colums, GetTickCount() - timeloadbus);
    return 1;
}

flags:bushelp(CMD_ADMIN)
CMD:bushelp(playerid)
{
    if (AI[playerid][aLevel]  < 4) return 1;
    new string[2048];
    format(string, sizeof(string), "{FFFFFF}Òèïû áèçíåñîâ:\n");
    for (new i = 0; i < sizeof(btipname); i++)
    {
        format(string, sizeof(string), "{FFFFFF}%sID:{CCFF00}%d - %s{FFFFFF}. Ðåêîìåíäóåìàÿ öåíà: {CCFF00}$%d{FFFFFF}\n", string, i, btipname[i], recommended_cost_bus[i]);
    }
    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, ">>[ÏÎÌÎÙÜ ÏÎ ÑÎÇÄÀÍÈÞ ÁÈÇÍÅÑÀ]<<", string, "ÎÊ", "");
    return 1;
}

flags:cbus(CMD_ADMIN)
CMD:cbus(playerid, params[])
{
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (AI[playerid][aLevel] < 4) return 1;
    new type, cost;
    if (sscanf(params, "dd", type, cost)) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/cbus [èä òèïà áèçíåñà(/bushelp) (0-19)] [öåíà]");
    new i = 0;
    while (i < MAX_BUSSINES)
    {
        if (BI[i][bID] == 0)
        {
            break;
        }
        else i++;
    }
    if (i == MAX_BUSSINES)
    {
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Íà ñåðâåðå äîñòèãíóò ëèìèò ïî êîëëè÷åñòâó áèçíåñîâ íà êàðòå!");
        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Ïîïðîáóéòå óâåëè÷èòü åãî.");
    }
    if (type < 0 || type > 19) return SendClientMessage(playerid, COLOR_RED, "Òèï áèçíåñà îò 0 äî 19!");
    if (cost < 0) return SendClientMessage(playerid, COLOR_RED, "Öåíà íå ìîæåò áûòü ìåíüøå 0!");
    if (cost < recommended_cost_bus[type]) return SendClientMessage(playerid, COLOR_RED, "Öåíà íà ýòîò òèï áèçíåñà óêàçàíà ìåíüøå ìèíèìàëüíîé ðåêîìåíäóåìîé! Îáðàòèòåñü ê {CCFF00}/bushelp");

    new Float:xXx, Float:yYx, Float:zZx;
    GetPlayerPos(playerid, xXx, yYx, zZx);

    new query[512];
    mysql_format(ServerDB, query, sizeof(query), "INSERT INTO `bussines` (`Type`, `Price`, `X`, `Y`, `Z`, `BuyID`, `accumulation`) VALUES ('%d','%d','%f','%f','%f','0','0')", type, cost, xXx, yYx, zZx);
    mysql_tquery(ServerDB, query, "CreateBussines", "iifffii", i, playerid, xXx, yYx, zZx, cost, type);
    return 1;
}

fpub:CreateBussines(freeid, playerid, Float:xXx, Float:yYy, Float:zZz, cost, type)
{
    if (cache_insert_id() > 0)
    {
        BI[freeid][bID] = cache_insert_id();
        BI[freeid][Type] = type;
        BI[freeid][Price] = cost;
        BI[freeid][xX] = xXx;
        BI[freeid][yY] = yYy;
        BI[freeid][zZ] = zZz;
        BI[freeid][BuyID] = 0;
        BI[freeid][accumulation] = 0;
        format(BI[freeid][bOwner], MAX_PLAYER_NAME, "Íèêòî íå âëàäååò");
        BI[freeid][bAccum] = (BI[freeid][Price] / 100) * 10;
        BI[freeid][bAccumOffline] = (BI[freeid][Price] / 100) * 1;


        new str[512];
        BI[freeid][bPickupID] = CreateDynamicPickup(1274, 1, BI[freeid][xX], BI[freeid][yY], BI[freeid][zZ], 0, 0, -1, 30.0);
        format(str, sizeof(str), "Áèçíåñ. ID: {CCFF00}%d\n{FFFFFF}Òèï áèçíåñà: {CCFF00}%s\n{FFFFFF}Öåíà: {CCFF00}$%d\n{FFFFFF}Äîõîä â ÷àñ: {CCFF00}$%d {FFFFFF}(åñëè âëàäåëåö OffLine: {CCFF00}$%d{FFFFFF})\nÂëàäåëåö: {CCFF00}%s", BI[freeid][bID], btipname[BI[freeid][Type]], BI[freeid][Price],  BI[freeid][bAccum], BI[freeid][bAccumOffline], BI[freeid][bOwner]);
        BI[freeid][bLabelID] = CreateDynamic3DTextLabel(str, -1, BI[freeid][xX], BI[freeid][yY], BI[freeid][zZ], 15.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, 0, -1, 100.0);
        BI[freeid][bMapIconID] = CreateDynamicMapIcon(BI[freeid][xX], BI[freeid][yY], BI[freeid][zZ], 52, -1, 0, 0, -1);

        SendClientMessage(playerid, COLOR_VIOLET, ""NS" {CCFF00}Áèçíåñ ñîçäàí!");
    }
    else SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FF0000}Îøèáêà ñîçäàíèÿ áèçíåñà!");
    return 1;
}

stock UpdateBussines(id)
{
    new str[512];
    mysql_format(ServerDB, str, sizeof(str), "SELECT * FROM `players` WHERE `PID` = '%d' LIMIT 1", BI[id][BuyID]);
    mysql_tquery(ServerDB, str, "GetBussinesOwnerName", "dd", BI[id][BuyID], id);
    strdel(str, 0, sizeof(str));
    format(str, sizeof(str), "Áèçíåñ. ID: {CCFF00}%d\n{FFFFFF}Òèï áèçíåñà: {CCFF00}%s\n{FFFFFF}Öåíà: {CCFF00}$%d\n{FFFFFF}Äîõîä â ÷àñ: {CCFF00}%d {FFFFFF}(åñëè âëàäåëåö OffLine: {CCFF00}%d{FFFFFF})\nÂëàäåëåö: {CCFF00}%s", BI[id][bID], btipname[BI[id][Type]], BI[id][Price],  BI[id][bAccum], BI[id][bAccumOffline], BI[id][bOwner]);
    UpdateDynamic3DTextLabelText(BI[id][bLabelID], -1, str);
    return 1;
}

new bool:pds = false; //PayDay
stock PayDay(h, m)
{
    new str[256];
    new bool:idbussinesbuyer[MAX_PLAYERS] = {false};
    if (m == 0 && pds == false)
    {
        /////////////////////////âûäà÷à çï áèçàì
        new bool:on[MAX_BUSSINES] = {false};
        for (new i = 0; i < MAX_BUSSINES; i++)
        {
            if (BI[i][bID] > 0 && BI[i][BuyID] > 0)
            {
                foreach (Player, p)
                {
                    if (BI[i][BuyID] == PlayerInfo[p][pMID] && gPlayerLogged[p])
                    {
                        on[i] = true;
                        idbussinesbuyer[p] = true;
                    }
                }
                if (on[i] == true)
                {
                    //âûäà÷à ôóëë
                    BI[i][accumulation] += BI[i][bAccum];
                }
                else
                {
                    //âûäà÷à ïîëîâèíû îò ôóëë
                    BI[i][accumulation] += BI[i][bAccumOffline];
                }
                mysql_format(ServerDB, str, sizeof(str), "UPDATE `bussines` SET `accumulation`='%d' WHERE `ID`='%d'", BI[i][accumulation], BI[i][bID]);
                mysql_tquery(ServerDB, str, "", "");
                strdel(str, 0, sizeof(str));
            }
        }
        foreach (Player, p)
        {
            if (gPlayerLogged[p])
            {
                if (idbussinesbuyer[p] == true)
                {
                    SendClientMessage(p, 0xCCFF00FF, "==========================={FFFFFF}[PayDay]{CCFF00}===========================");
                    SendClientMessage(p, COLOR_VIOLET, ""NS" {FFFFFF}Ïðîèçâåäåíà òðàíçàêöèÿ ïåðåâîäà äåíåæíûõ ñðåäñòâ íà ñ÷åòà áèçíåñîâ");
                    SendClientMessage(p, 0xCCFF00FF, "==========================={FFFFFF}[PayDay]{CCFF00}===========================");
                    PlayerPlaySound(p, 1052, 0.0, 0.0, 10.0);
                    format(str, sizeof(str), "~w~%02d~g~:~w~%02d~n~~y~PayDay!", h, m);
                    GameTextForPlayer(p, str, 5000, 1);
                    strdel(str, 0, sizeof(str));
                }
            }
        }
        pds = true;
    }
    else if (m != 0 && pds == true)pds = false;
    return 1;
}

stock MoneyK(playerid, money)
{
    new str[64];
    SetPVarInt(playerid, "PlMon", GetPVarInt(playerid, "PlMon") + money);
    if (money > 0)
    {
        PlayerPlaySound(playerid, 1054, 0.0, 0.0, 10.0);
        format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~g~+$~w~%d", money);
    }
    else
    {
        PlayerPlaySound(playerid, 1055, 0.0, 0.0, 10.0);
        format(str, sizeof(str), "~n~~n~~n~~n~~n~~n~~n~~r~-$~w~%d", money * -1);
    }
    GameTextForPlayer(playerid, str, 1500, 5);
    return 1;
}

CMD:sellbus(playerid)
{
    return 1;
}

CMD:cancelbus(playerid)
{
    return 1;
}

flags:admh(CMD_ADMIN)
CMD:admh(playerid)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aLevel] < 1) return 1;
    Teleport(playerid, -2876.4460, 2685.8120, 273.1059, 0, 0, false, 68.1739);
    SendClientMessage(playerid, COLOR_VIOLET, "Äîáðî ïîæàëîâàòü â àäìèí ðàé!");
    return 1;
}

flags:setvm(CMD_ADMIN)
CMD:setvw(playerid, params[])
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (AI[playerid][aLevel] < 1) return 1;
    if (sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/setvw [âèðòóàëüíûé ìèð]");
    SetPlayerVirtualWorld(playerid, params[0]);
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    Streamer_UpdateEx(playerid, Float:x, Float:y, Float:z, params[0], 0);
    return 1;
}

flags:duel(CMD_SPAWNED)
CMD:duel(playerid, params[])
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    if (sscanf(params, "dd", params[0], params[1])) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/duel [ID èãðîêà] [ñòàâêà]");
    if (!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}ID íå íàéäåí");
    if (GetPVarInt(playerid, "PlMon") < Duelbet[playerid]) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Ó âàñ íåò ñòîëüêî äåíåã!");
    Duelbet[playerid] = params[1];
    if (Duel[playerid] >= 1) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû óæå íà äóýëè");
    if (Duelbet[playerid] < 1000 || Duelbet[playerid] > 1000000) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Öåíà ñòàâêè äîëæíî áûòü îò $1.000 äî $100.000");
    if (GetPVarInt(playerid, "PlMon") < Duelbet[playerid]) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Ó âàñ íåò ñòîëüêî äåíåã!");
    if (GetPVarInt(params[0], "PlMon") < Duelbet[playerid]) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Ó ïðîòèâíèêà íåò ñòîëüêî äåíåã!");
    if (Duel[params[0]] >= 1)
    {
        SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äàííûé èãðîê óæå íà äóýëè");
    }
    else
    {
        if (params[0] == playerid) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû óêàçàëè ñâîé ID!");
        Duelmaker[params[0]] = playerid;
        Duelopponent[playerid] = params[0];
        Gotrequest[params[0]] = 1;
        Maderequest[playerid] = 1;
        ShowPlayerDialog(playerid, DIALOG_DUELWEAPONS, DIALOG_STYLE_LIST, "Ïåðâîå îðóæèå", "{F0F8FF}Desert Eagle\n{F0F8FF}Shotgun\n{F0F8FF}Sawnoff Shotgun\n{F0F8FF}Combat Shotgun\n{F0F8FF}Micro SMG\n{F0F8FF}MP5\n{F0F8FF}AK-47\n{F0F8FF}M4\n{F0F8FF}Tec-9\n{F0F8FF}Country Rifle\n{F0F8FF}Sniper Rifle\n{F0F8FF}Colt\n{F0F8FF}Silenced 9mm", "Äàëüøå", "");
    }
    return 1;
}

flags:cancel(CMD_SPAWNED)
CMD:cancel(playerid)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    new PID = Duelmaker[playerid];
    if (Duel[playerid] == 0) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû íå ïðèãëàøåíû íà äóýëü!");
    if (Gotrequest[playerid] == 1)
        if (IsPlayerConnected(PID))
        {
            if (Duel[PID] == 1)
            {
                SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âàøà çàÿâêà áûëà îòêàçàíà!");
                Duel[PID] = 0;
                SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû îòêàçàëèñü îò äóýëè.");
                Duel[playerid] = 0;
                KillTimer(DuelEndTimer[playerid]);
                KillTimer(DuelEndTimer[PID]);
            }
        }
    return 1;
}

flags:accept(CMD_SPAWNED)
CMD:accept(playerid)
{
    if (Checkpoint[playerid] != 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Óâîëüòåñü ñ ðàáîòû!");
    if (AI[playerid][aSpectateID] != INVALID_PLAYER_ID) return 1;
    new PID = Duelmaker[playerid];
    new string[256];
    if (Duel[playerid] == 0) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âàñ íèêòî íå ïðèãëàøàë íà äóýëü!");
    if (Gotrequest[playerid] == 1)
        if (IsPlayerConnected(PID))
        {
            if (Duel[PID] == 1)
            {
                new Weaponname[32], Weaponname2[32];
                GetWeaponName(Duelweap1[PID], Weaponname, 32);
                GetWeaponName(Duelweap2[PID], Weaponname2, 32);
                format(string, sizeof(string), "[DUEL]: {CCFF00}%s {FFFFFF}vs {CCFF00}%s. {FFFFFF}Îðóæèå: {CCFF00}%s, %s {FFFFFF}Ñòàâêà: {CCFF00}$%d", PlayerInfo[playerid][pName], PlayerInfo[PID][pName], Weaponname, Weaponname2, Duelbet[PID]);
                SendClientMessageToAll(COLOR_VIOLET, string);
                SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âàøà çàÿâêà íà äóýëü áûëà îòïðàâëåíà.");
                SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû ïîäòâåðäèëè çàÿâêó.");

                ResetPlayerWeapons(playerid);
                SetCameraBehindPlayer(playerid);

                TogglePlayerControllable(playerid, false);
                TogglePlayerControllable(PID, false);
                SetPlayerFacingAngle(PID, 177.1250);
                SetPlayerPos(PID, -855.6653, 3024.7839, 5044.3223 + 2);
                SetPlayerFacingAngle(playerid, 3.4167);
                SetPlayerPos(playerid, -856.4213, 2977.8450, 5044.3223 + 2);
                SetPlayerVirtualWorld(playerid, playerid);
                SetPlayerVirtualWorld(PID, playerid);

                Duel[PID] = 3;
                Duelbet[playerid] = Duelbet[PID];
                Duel[playerid] = 2;
                PlayerDuelPrep(playerid);
                PlayerDuelPrep(PID);
                SetTimerEx("DuelStart", 5000, false, "i", PID);
                SetTimerEx("DuelStart", 5000, false, "i", playerid);
                GameTextForPlayer(PID, "~g~Ready, Steady", 5000, 4);
                GameTextForPlayer(playerid, "~g~Ready, Steady", 5000, 4);
                UnDuelend[PID] = SetTimerEx("UnnormalDuelend", 80000, false, "i", PID); //Here you can change the time after which the duel
                UnDuelend[playerid] = SetTimerEx("UnnormalDuelend", 80000, false, "i", playerid); //will end when noone was killed.(Or when one went afk)
            }
        }
    return 1;
}

stock PrepareDuelWeapon(playerid, WEAPON:weaponid)
{
    new PID = Duelopponent[playerid];
    if (Duel[PID] >= 1) return SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Èãðîê ðàíåå áûë íà äóýëå.");
    {
        Duelweap1[playerid] = weaponid;
        Duelweap1[PID] = weaponid;
        Duel[PID] = 1;
        Duel[playerid] = 1;
        Duelwins[PID] = 0;
        Duelwins[playerid] = 0;
        ShowPlayerDialog(playerid, DIALOG_DUELWEAPONSTWO, DIALOG_STYLE_LIST, "{009900}Âòîðîå îðóæèå", "{F0F8FF}Desert Eagle\n{F0F8FF}Shotgun\n{F0F8FF}Sawnoff Shotgun\n{F0F8FF}Combat Shotgun\n{F0F8FF}Micro SMG\n{F0F8FF}MP5\n{F0F8FF}AK-47\n{F0F8FF}M4\n{F0F8FF}Tec-9\n{F0F8FF}Country Rifle\n{F0F8FF}Sniper Rifle\n{F0F8FF}Colt\n{F0F8FF}Silenced 9mm", "Äàëåå", "Îòìåíà");
    }
    return 1;
}

stock PrepareDuelWeapon2(playerid, WEAPON:weaponid)
{
    new PID = Duelopponent[playerid];
    Duelweap2[playerid] = weaponid;
    Duelweap2[PID] = weaponid;
    SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû âûáðàëè îðóæèÿ äëÿ ïîåäèíêà");
    PrepareDuelRounds(playerid, 1);
    return 1;
}

stock EndDuel(playerid)
{
    new PID = Duelopponent[playerid];
    Duel[playerid] = 0;
    Duel[PID] = 0;
    Duelbet[playerid] = 0;
    Duelbet[PID] = 0;
    return 1;
}

stock PrepareDuelRounds(playerid, rounds)
{
    new PID = Duelopponent[playerid];
    new string[256], Weaponname[32], Weaponname2[32];
    Duelrounds[playerid] = rounds;
    Duelrounds[PID] = rounds;
    GetWeaponName(Duelweap1[playerid], Weaponname, 32);
    GetWeaponName(Duelweap2[playerid], Weaponname2, 32);
    format(string, sizeof(string), "[DUEL]: {FFFFFF}Ïðèãëàøåíèå îò {CCFF00}%s[%d]{FFFFFF}. Îðóæèå: {CCFF00}%s, %s {FFFFFF}Ñòàâêà: {CCFF00}%d", PlayerInfo[playerid][pName], playerid, Weaponname, Weaponname2, Duelbet[playerid]);
    SendClientMessage(PID, COLOR_VIOLET, string);
    SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âû ïðèíÿòû íà äóýëü.");
    SendClientMessage(PID, COLOR_VIOLET, "[DUEL]: {FFFFFF}Èñïîëüçóéòå {CCFF00}/accept {FFFFFF}èëè {CCFF00}/cancel {FFFFFF}äëÿ çàïðîñà íà ïîåäèíîê.");
    SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Âàø çàïðîñ îòïðàâëåí óñïåøíî.");
    DuelEndTimer[playerid] = SetTimerEx("DuelTimer", 30000, false, "i", playerid);
    DuelEndTimer[PID] = SetTimerEx("DuelTimer", 30000, false, "i", PID);
    return 1;
}

stock PlayerDuelPrep(playerid)
{
    new PID = Duelopponent[playerid];
    GivePlayerWeapon(playerid, Duelweap1[playerid], 2000);
    GivePlayerWeapon(playerid, Duelweap2[playerid], 2000);

    GivePlayerWeapon(PID, Duelweap1[playerid], 2000);
    GivePlayerWeapon(PID, Duelweap2[playerid], 2000);
    //PlayerInfo[playerid][pAdmlive] = 0;

    if (GetPVarInt(playerid, "goodspawn") == 1)
    {
        SetPVarInt(playerid, "goodspawn", 0);
    }

    if (GetPVarInt(PID, "goodspawn") == 1)
    {
        SetPVarInt(PID, "goodspawn", 0);
    }
    SetPlayerArmour(playerid, 100);
    SetPlayerHealth(playerid, 100);
    SetPlayerArmour(PID, 100);
    SetPlayerHealth(PID, 100);
    //WeaponBugDuel[playerid] = 1;
    return 1;
}

fpub:UnnormalDuelend(playerid)
{
    Maderequest[playerid] = 0;
    Gotrequest[playerid] = 0;
    SetPlayerVirtualWorld(playerid, 0);
    Duel[playerid] = 0;
    Duelrounds[playerid] = 0;
    SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Äóýëü äëèëàñü ñëèøêîì äîëãî, ïî ýòîìó ìû å¸ çàâåðøàåì!");
    //WeaponBugDuel[playerid] = 1;
    ResetPlayerWeapons(playerid);
    SpawnPlayer(playerid);
    return 1;
}

fpub:DuelStart(playerid)
{
    TogglePlayerControllable(playerid, true);
    GameTextForPlayer(playerid, "~b~GO GO GO", 3000, 4);
    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
    return 1;
}

fpub:DelayedDuelSpawn(playerid)
{
    if (Maderequest[playerid] == 1)
    {
        new string[256], Weaponname[32], Weaponname2[32];
        new PID = Duelopponent[playerid];
        GetWeaponName(Duelweap1[playerid], Weaponname, 32);
        GetWeaponName(Duelweap2[playerid], Weaponname2, 32);
        format(string, sizeof(string), "[DUEL]: {CCFF00}%s {FFFFFF}vs {CCFF00}%s. {FFFFFF}Îðóæèå: {CCFF00}%s, %s {FFFFFF}Ñòàâêà: {CCFF00}$%d", PlayerInfo[playerid][pName], PlayerInfo[PID][pName], Weaponname, Weaponname2, Duelbet[playerid]);
        SendClientMessageToAll(COLOR_VIOLET, string);

        TogglePlayerControllable(playerid, false);
        TogglePlayerControllable(PID, false);
        SetPlayerFacingAngle(PID, 177.1250);
        SetPlayerPos(PID, -855.6653, 3024.7839, 5044.3223 + 2);
        SetPlayerFacingAngle(playerid, 3.4167);
        SetPlayerPos(playerid, -856.4213, 2977.8450, 5044.3223 + 2);
        SetPlayerVirtualWorld(playerid, playerid);
        SetPlayerVirtualWorld(PID, playerid);

        PlayerDuelPrep(PID);
        PlayerDuelPrep(playerid);
        SetTimerEx("DuelStart", 5000, false, "i", PID);
        SetTimerEx("DuelStart", 5000, false, "i", playerid);
        GameTextForPlayer(PID, "~g~Ready, Steady", 5000, 4);
        GameTextForPlayer(playerid, "~g~Ready, Steady", 5000, 4);
        UnDuelend[PID] = SetTimerEx("UnnormalDuelend", 80000, false, "i", playerid); //Here you can change the time after which the duel
        UnDuelend[playerid] = SetTimerEx("UnnormalDuelend", 80000, false, "i", playerid); //will end when noone was killed.(Or when one went afk)
    }
    else if (Gotrequest[playerid] == 1)
    {
        new string[256], Weaponname[32], Weaponname2[32];
        new PID = Duelmaker[playerid];
        GetWeaponName(Duelweap1[playerid], Weaponname, 32);
        GetWeaponName(Duelweap2[playerid], Weaponname2, 32);
        format(string, sizeof(string), "[DUEL]: {CCFF00}%s {FFFFFF}vs {CCFF00}%s. {FFFFFF}Îðóæèå: {CCFF00}%s, %s {FFFFFF}Ñòàâêà: {CCFF00}$%d", PlayerInfo[playerid][pName], PlayerInfo[PID][pName], Weaponname, Weaponname2, Duelbet[PID]);
        SendClientMessageToAll(COLOR_VIOLET, string);

        TogglePlayerControllable(playerid, false);
        TogglePlayerControllable(PID, false);
        SetPlayerFacingAngle(PID, 177.1250);
        SetPlayerPos(PID, -855.6653, 3024.7839, 5044.3223 + 2);
        SetPlayerFacingAngle(playerid, 3.4167);
        SetPlayerPos(playerid, -856.4213, 2977.8450, 5044.3223 + 2);
        SetPlayerVirtualWorld(playerid, playerid);
        SetPlayerVirtualWorld(PID, playerid);

        PlayerDuelPrep(PID);
        PlayerDuelPrep(playerid);
        SetTimerEx("DuelStart", 5000, false, "i", PID);
        SetTimerEx("DuelStart", 5000, false, "i", playerid);
        GameTextForPlayer(PID, "~g~Ready, Steady", 5000, 4);
        GameTextForPlayer(playerid, "~g~Ready, Steady", 5000, 4);
        UnDuelend[PID] = SetTimerEx("UnnormalDuelend", 80000, false, "i", PID); //Here you can change the time after which the duel
        UnDuelend[playerid] = SetTimerEx("UnnormalDuelend", 80000, false, "i", playerid); //will end when noone was killed.(Or when one went afk)
    }
    return 1;
}

fpub:DuelTimer(playerid)
{
    if (Duel[playerid] < 2)
    {
        Duel[playerid] = 0;
        SendClientMessage(playerid, COLOR_VIOLET, "[DUEL]: {FFFFFF}Çàÿâêà íà äóýëü íå áûëà ðàññìîòðåíà â òå÷åíèè 30 ñåêóíä. Çàÿâêà óäàëåíà!");
    }
    return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
    if (AI[playerid][aLevel] > 0)
    {
        new Float:pos;
        if (MapAndreas_FindAverageZ(fX, fY, pos))
        {
            Teleport(playerid, fX, fY, pos + 2, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), true, 0, false);
        }
        else
        {
            Teleport(playerid, fX, fY, fZ + 2, GetPlayerVirtualWorld(playerid), GetPlayerInterior(playerid), true, 0, false);
        }
    }
    return 1;
}

stock SelectAnimation(const playerid, const animation)
{
    switch (animation)
    {
        case 0: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE1);
        case 1: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE2);
        case 2: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE3);
        case 3: SetPlayerSpecialAction(playerid, SPECIAL_ACTION_DANCE4);
        case 4: ApplyAnimation(playerid, "DANCING", "DAN_Left_A", 4.1, true, false, false, false, false);
        case 5: ApplyAnimation(playerid, "DANCING", "dnce_M_a", 4.1, true, false, false, false, false);
        case 6: ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.1, true, false, false, false, false);
        case 7: ApplyAnimation(playerid, "BEACH", "bather", 4.1, true, false, false, false, false);
        case 8: ApplyAnimation(playerid, "ped", "WALK_drunk", 4.1, true, true, true, false, false);
        case 9: ApplyAnimation(playerid, "ped", "Crouch_Roll_L", 4.1, true, true, true, false, false);
        case 10: ApplyAnimation(playerid, "ped", "endchat_03", 4.1, true, false, false, false, false);
        case 11: ApplyAnimation(playerid, "benchpress", "gym_bp_celebrate", 4.1, true, false, false, false, false);
        case 12: ApplyAnimation(playerid, "ped", "cower", 4.1, true, false, false, false, false);
        case 13: ApplyAnimation(playerid, "BOMBER", "BOM_Plant", 4.1, false, false, false, false, false);
        case 14: ApplyAnimation(playerid, "SHOP", "ROB_Shifty", 4.1, false, false, false, false, false);
        case 15: ApplyAnimation(playerid, "SHOP", "ROB_Loop_Threat", 4.1, true, false, false, false, false);
        case 16: ApplyAnimation(playerid, "COP_AMBIENT", "Coplook_loop", 4.1, true, false, false, false, false);
        case 17: ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 4.1, false, false, false, false, false);
        case 18: ApplyAnimation(playerid, "FOOD", "EAT_Burger", 4.1, false, false, false, false, false);
        case 19: ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.1, false, false, false, false, false);
        case 20: ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.1, false, false, false, false, false);
        case 21: ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.1, true, false, false, false, false);
        case 22: ApplyAnimation(playerid, "LOWRIDER", "M_smklean_loop", 4.1, true, false, false, false, false);
        case 23: ApplyAnimation(playerid, "LOWRIDER", "F_smklean_loop", 4.1, true, false, false, false, false);
        case 24: ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.1, true, false, false, false, false);
        case 25: ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.1, true, false, false, false, false);
        case 26: ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.1, true, false, false, false, false);
        case 27: ApplyAnimation(playerid, "DANCING", "DAN_Right_A", 4.1, true, false, false, false, false);
        case 28: ApplyAnimation(playerid, "BSKTBALL", "BBALL_def_loop", 4.1, true, false, false, false, false);
        case 29: ApplyAnimation(playerid, "MISC", "plyr_shkhead", 4.1, false, false, false, false, false);
        case 30: ApplyAnimation(playerid, "BSKTBALL", "BBALL_idle", 4.1, false, false, false, false, false);
        case 31: ApplyAnimation(playerid, "CAMERA", "camstnd_cmon", 4.1, true, false, false, false, false);
        case 32: ApplyAnimation(playerid, "SHOP", "SHP_Rob_HandsUP", 4.1, true, false, false, false, false);
        case 33: ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, true, false, false, false, false);
        case 34: ApplyAnimation(playerid, "CRACK", "crckidle4", 4.1, true, false, false, false, false);
        case 35: ApplyAnimation(playerid, "DEALER", "DEALER_IDLE", 4.1, true, false, false, false, false);
        case 36: ApplyAnimation(playerid, "GANGS", "leanIDLE", 4.1, true, false, false, false, false);
        case 37: ApplyAnimation(playerid, "GANGS", "shake_carSH", 4.1, false, false, false, false, false);
        case 38: ApplyAnimation(playerid, "GANGS", "smkcig_prtl", 4.1, false, false, false, false, false);
        case 39: ApplyAnimation(playerid, "BEACH", "ParkSit_W_loop", 4.1, true, false, false, false, false);
        case 40: ApplyAnimation(playerid, "INT_HOUSE", "LOU_Loop", 4.1, true, false, false, false, false);
        case 41: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Bored_Loop", 4.1, true, false, false, false, false);
        case 42: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Idle_Loop", 4.1, true, false, false, false, false);
        case 43: ApplyAnimation(playerid, "INT_OFFICE", "OFF_Sit_Type_Loop", 4.1, true, false, false, false, false);
        case 44: ApplyAnimation(playerid, "INT_SHOP", "shop_shelf", 4.1, true, false, false, false, false);
        case 45: ApplyAnimation(playerid, "JST_BUISNESS", "girl_02", 4.1, true, false, false, false, false);
        case 46: ApplyAnimation(playerid, "KISSING", "GF_StreetArgue_02", 4.1, false, false, false, false, false);
        case 47: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_01", 4.1, false, false, false, false, false);
        case 48: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_02", 4.1, false, false, false, false, false);
        case 49: ApplyAnimation(playerid, "KISSING", "Grlfrd_Kiss_03", 4.1, false, false, false, false, false);
        case 50: ApplyAnimation(playerid, "LOWRIDER", "RAP_B_Loop", 4.1, true, false, false, false, false);
        case 51: ApplyAnimation(playerid, "MEDIC", "CPR", 4.1, true, false, false, false, false);
        case 52: ApplyAnimation(playerid, "MISC", "bitchslap", 4.1, true, false, false, false, false);
        case 53: ApplyAnimation(playerid, "MISC", "bng_wndw", 4.1, true, false, false, false, false);
        case 54: ApplyAnimation(playerid, "MISC", "KAT_Throw_K", 4.1, false, false, false, false, false);
        case 55: ApplyAnimation(playerid, "MISC", "SEAT_LR", 4.1, true, false, false, false, false);
        case 56: ApplyAnimation(playerid, "ped", "SEAT_idle", 4.1, true, false, false, false, false);
        case 57: ApplyAnimation(playerid, "ON_LOOKERS", "lkup_loop", 4.1, true, false, false, false, false);
        case 58: ApplyAnimation(playerid, "ON_LOOKERS", "Pointup_loop", 4.1, true, false, false, false, false);
        case 59: ApplyAnimation(playerid, "ON_LOOKERS", "panic_loop", 4.1, true, false, false, false, false);
        case 60: ApplyAnimation(playerid, "ON_LOOKERS", "shout_02", 4.1, true, false, false, false, false);
        case 61: ApplyAnimation(playerid, "PAULNMAC", "Piss_loop", 4.1, true, false, false, false, false);
        case 62: ApplyAnimation(playerid, "GHANDS", "gsign1LH", 4.1, true, false, false, false, false);
        case 63: ApplyAnimation(playerid, "ped", "IDLE_taxi", 4.1, true, false, false, false, false);
        case 64: ApplyAnimation(playerid, "POLICE", "Door_Kick", 4.1, false, false, false, false, false);
        case 65: ApplyAnimation(playerid, "POLICE", "CopTraf_Stop", 4.1, true, false, false, false, false);
        case 66: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY_B", 4.1, true, false, false, false, false);
        case 67: ApplyAnimation(playerid, "LOWRIDER", "RAP_C_Loop", 4.1, true, false, false, false, false);
        case 68: ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.1, true, false, false, false, false);
        case 69: ApplyAnimation(playerid, "SWEET", "Sweet_injuredloop", 4.1, true, false, false, false, false);
        case 70: ApplyAnimation(playerid, "RIOT", "RIOT_ANGRY", 4.1, true, false, false, false, false);
        case 71: ApplyAnimation(playerid, "GHANDS", "gsign2", 4.1, true, false, false, false, false);
        case 72: ApplyAnimation(playerid, "GHANDS", "gsign4", 4.1, true, false, false, false, false);
        case 73: ApplyAnimation(playerid, "GHANDS", "gsign5", 4.1, true, false, false, false, false);
    }
    if (3 < animation < 74) SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ îñòàíîâêè àíèìàöèè ââåäèòå {CCFF00}/stopanim");
    else SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Äëÿ îñòàíîâêè àíèìàöèè íàæìèòå êíîïêó {CCFF00}' F '");
    return 1;
}

flags:stopanim(CMD_SPAWNED)
CMD:stopanim(playerid)
{
    ClearAnimations(playerid);
    SendClientMessage(playerid, COLOR_VIOLET, ""NS": {FFFFFF}Âû îñòàíîâèëè àíèìàöèþ{CCFF00}!");
    return 1;
}

#include "..\..\modules\commands.inc"
#include "..\..\modules\dialogs.inc"
#include "..\..\modules\functions.inc"

flags:club(CMD_SPAWNED)
CMD:club(playerid)
{
    Teleport(playerid, -2561.8328, -2682.8013, 805.7775, 150, 0, false, 86);
    return 1;
}

flags:verifyclan(CMD_ADMIN)
CMD:verifyclan(playerid, params[])
{
    if (AI[playerid][aLevel] < 3) return 1;
    if (sscanf(params, "d", params[0])) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/verifyclan [èä èãðîêà]");
    if (!IsPlayerConnected(params[0])) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå â ñåòè{FF0000}!");
    if (PlayerInfo[params[0]][pGang] == 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå â êëàíå{FF0000}!");
    if (PlayerInfo[params[0]][pGangLvl] < 6) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Èãðîê íå âëàäåëåö êëàíà{FF0000}!");
    if (GangInfo[PlayerInfo[params[0]][pGang]][gVerifyCapt]) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Êëàí óæå âåðåôèöèðîâàí{FF0000}!");
    GangInfo[PlayerInfo[params[0]][pGang]][gVerifyCapt] = true;
    new str[128];
    mysql_format(ServerDB, str, sizeof(str), "UPDATE `gangs` SET `gVerifyCapt`='%d' WHERE `gID`='%d' LIMIT 1", GangInfo[PlayerInfo[params[0]][pGang]][gVerifyCapt], PlayerInfo[params[0]][pGang]);
    mysql_tquery(ServerDB, str, "", "");
    format(str, sizeof(str), "[Clan]: {FFFFFF}Àäìèí {CCFF00}%s {FFFFFF}âåðèôèöèðîâàë âàø êëàí{CCFF00}!", PlayerInfo[playerid][pName]);
    SendClientMessage(params[0], COLOR_VIOLET, str);
    format(str, sizeof(str), "[A]: {FFFFFF}Àäìèí {CCFF00}%s[%d] {FFFFFF}âåðèôèöèðîâàë êëàí èãðîêà {CCFF00}%s[%d]", PlayerInfo[playerid][pName], playerid, PlayerInfo[params[0]][pName], params[0]);
    SendAdminMessage(COLOR_RED, str);
    return 1;
}

flags:g(CMD_GANG)
cmd:g(playerid, params[])
{
    new chat[256], text[144];
    if (PlayerInfo[playerid][pGang] <= 0) return SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Âû íå â êëàíå{FF0000}!");
    if (sscanf(params, "s[144]", text)) return SendClientMessage(playerid, COLOR_VIOLET, "USE: {FFFFFF}/g [ñîîáùåíèå]");
    format(chat, sizeof(chat), "[GC] %s %s[%d]: {FFFFFF}%s", GangInfo[PlayerInfo[playerid][pGang]][gName], PlayerInfo[playerid][pName], playerid, text);
    new c = 0;
    foreach (Player, i)
    {
        if (PlayerInfo[playerid][pGang] == PlayerInfo[i][pGang])
        {
            c++;
        }
    }
    if (c <= 1) SendClientMessage(playerid, COLOR_VIOLET, ""NS" {FFFFFF}Íåò îíëàéí ó÷àñòíèêîâ âàøåãî êëàíà{FF0000}!");
    foreach (Player, i)
    {
        if (c > 1 && PlayerInfo[playerid][pGang] == PlayerInfo[i][pGang])SendClientMessage(i, GetPlayerColor(playerid), chat);
    }
    return 1;
}

stock fire_stock(playerid)
{
    new rand = random(sizeof(checkpoint_fire));

    SetPlayerRaceCheckpoint(playerid, CP_TYPE_GROUND_EMPTY, checkpoint_fire[rand][0], checkpoint_fire[rand][1], checkpoint_fire[rand][2], 0.0, 0.0, 0.0, 10.0);
    object_fire[playerid] = CreateObject(18691, checkpoint_fire[rand][0], checkpoint_fire[rand][1], checkpoint_fire[rand][2], 0.0, 0.0, 0.0);

    completion_fire[playerid] = 0;
    SetPVarInt(playerid, "chekpoint_fire", 1);
}

new AC_Flood_Timer[MAX_PLAYERS] = {0};
new bool:AC_Flood[MAX_PLAYERS] = {false};
fpub:OnCheatDetected(playerid, const ip_address[], type, code)
{
    new string[128];
    switch (code)
    {
        case 0:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}AirBreak (onfoot) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 1:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}AirBreak (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 2:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Teleport hack (onfoot) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 3:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Teleport hack (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 4:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Teleport hack (into/between vehicles) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 5: return 1; //Òåëåïîðò íåçàíÿòûõ àâòî (àíòè÷èò â ëþáîì ñëó÷àå âåðí¸ò å¸ íà ïðåæíåå ìåñòî, íàêàçàíèå ëó÷øå íå äåëàòü)
        case 6:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Teleport hack (pickups) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 7:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}FlyHack (onfoot) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 8:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}FlyHack (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 9:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}SpeedHack (onfoot) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 10:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Warning]{FFFFFF} Èãðîê %s[%d] Âîçìîæíî èñïîëüçóåò SpeedHack (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 12:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}SpeedHack (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 15:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Weapon hack #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 16:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Warning]{FFFFFF} Èãðîê %s[%d] Âîçìîæíî èñïîëüçóåò Ammo hack (add) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 17:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Ammo hack (infinite) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 18:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Special actions hack #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 19:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}GodMode from bullets (onfoot) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 20:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}GodMode from bullets (in vehicle) #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 21:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Invisible hack #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 22:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}lagcomp-spoof #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 23: return 1;
        case 25:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Quick turn #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 26:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Rapid fire #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 27:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}FakeSpawn #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 28:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}FakeKill #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 29:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Pro Aim #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 31:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}CarShot #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 32: return ClearAnimations(playerid, SYNC_ALL);
        case 33: return 1;
        case 34:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}AFK Ghost #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 35:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Full Aiming #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 36..40: return 1;
        case 41:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò: {FFCC00}Invalid Version SAMP #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 43..47:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò: {FFCC00}êðàøåð èãðîêîâ #%d", PlayerInfo[playerid][pName], playerid, code);
            return 1;
        }
        case 48:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Flood protection connects to one slot #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 49:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Flood callback functions #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 50:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}Flood change seat #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 51:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}DDOS #%d", PlayerInfo[playerid][pName], playerid, code);
        }
        case 52:
        {
            if (AC_Flood[playerid] == true) return 1;
            format(string, sizeof(string), "[Nex-AC] {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû: {FFCC00}NOP's #%d", PlayerInfo[playerid][pName], playerid, code);
        }
    }
    if (AC_Flood[playerid] == true) return 1;
    //SendAdminMessage(COLOR_RED, string);
    foreach (Player, i)
    {
        if (AI[i][aLevel] > 0 && AI[i][aReadCheat] == true)
        {
            SendClientMessage(i, COLOR_RED, string);
        }
    }
    AC_Flood[playerid] = true;
    AC_Flood_Timer[playerid] = SetTimerEx("ClearFloodBool", 10000, false, "i", playerid);
    return 1;
}

stock AntiCheatSendMessageFromAdmin(playerid, type, subtype)
{
    new str[256];
    if (AC_Flood[playerid] == true) return 1;
    format(str, sizeof(str), "[RakCheat]: {FFCC00}%s[%d] {FFFFFF}âîçìîæíî èñïîëüçóåò ÷èòû (êîä {CCFF00}%03d{FFCC00} (%d){FFFFFF}).", PlayerInfo[playerid][pName], playerid, type, subtype);
    //SendAdminMessage(COLOR_RED, str);
    foreach (Player, i)
    {
        if (AI[i][aLevel] > 0 && AI[i][aReadCheat] == true)
        {
            SendClientMessage(i, COLOR_RED, str);
        }
    }
    AC_Flood[playerid] = true;
    AC_Flood_Timer[playerid] = SetTimerEx("ClearFloodBool", 10000, false, "i", playerid);
    return 1;
}

new RPC_PickedUpPickup = 131;
public OnIncomingRPC(playerid, rpcid, BitStream:bs)
{
    //	new str[256];
    if (IsPlayerConnected(playerid))
    {
        if (rpcid == RPC_PickedUpPickup)
        {
            //format(str, sizeof(str), "[RakNet]: RPCID: %d by %d", rpcid, playerid);
            //SendClientMessageToAll(-1, str);

        }
    }
    return 1;
}

fpub:ClearFloodBool(playerid)
{
    KillTimer(AC_Flood_Timer[playerid]);
    AC_Flood[playerid] = false;
    return 1;
}

stock GetVehicleName(carid)
{
    new car[256];
    switch (carid)
    {
        case 400: car = "LandStalker";
        case 401: car = "Bravura";
        case 402: car = "Buffalo";
        case 403: car = "Linerunner";
        case 404: car = "Perenniel";
        case 405: car = "Sentinel";
        case 406: car = "Dumper";
        case 407: car = "Firetruck";
        case 408: car = "Trashmaster";
        case 409: car = "Stretch";
        case 410: car = "Manana";
        case 411: car = "Infernus";
        case 412: car = "Voodoo";
        case 413: car = "Pony";
        case 414: car = "Mule";
        case 415: car = "Cheetah";
        case 416: car = "Ambulance";
        case 417: car = "Leviathan";
        case 418: car = "Moonbeam";
        case 419: car = "Esperanto";
        case 420: car = "Taxi";
        case 421: car = "Washington";
        case 422: car = "Bobcat";
        case 423: car = "Mr Whoopee";
        case 424: car = "BF Injection";
        case 425: car = "Hunter";
        case 426: car = "Premier";
        case 427: car = "Enforcer";
        case 428: car = "Securicar";
        case 429: car = "Banshee";
        case 430: car = "Predator";
        case 431: car = "Bus";
        case 432: car = "Rhino";
        case 433: car = "Barracks";
        case 434: car = "Hotknife";
        case 435: car = "Article Trailer";
        case 436: car = "Previon";
        case 437: car = "Coach";
        case 438: car = "Cabbie";
        case 439: car = "Stallion";
        case 440: car = "Rumpo";
        case 441: car = "RC Bandit";
        case 442: car = "Romero";
        case 443: car = "Packer";
        case 444: car = "Monster";
        case 445: car = "Admiral";
        case 446: car = "Squallo";
        case 447: car = "Seasparrow";
        case 448: car = "Pizzaboy";
        case 449: car = "Tram";
        case 450: car = "Article Trailer 2";
        case 451: car = "Turismo";
        case 452: car = "Speeder";
        case 453: car = "Reefer";
        case 454: car = "Tropic";
        case 455: car = "Flatbed";
        case 456: car = "Yankee";
        case 457: car = "Caddy";
        case 458: car = "Solairr";
        case 459: car = "Berkley's RC Van";
        case 460: car = "Skimmer";
        case 461: car = "PCJ-600";
        case 462: car = "Faggio";
        case 463: car = "Freeway";
        case 464: car = "RC Baron";
        case 465: car = "RC Raider";
        case 466: car = "Glendale";
        case 467: car = "Oceanic";
        case 468: car = "Sanchez";
        case 469: car = "Sparrow";
        case 470: car = "Patriot";
        case 471: car = "Quad";
        case 472: car = "Coastguard";
        case 473: car = "Dinghy";
        case 474: car = "Hermes";
        case 475: car = "Sabre";
        case 476: car = "Rustler";
        case 477: car = "ZR-350";
        case 478: car = "Walton";
        case 479: car = "Regina";
        case 480: car = "Comet";
        case 481: car = "BMX";
        case 482: car = "Burrito";
        case 483: car = "Camper";
        case 484: car = "Marquis";
        case 485: car = "Baggage";
        case 486: car = "Dozer";
        case 487: car = "Maverick";
        case 488: car = "SAN News Maverick";
        case 489: car = "Rancher";
        case 490: car = "FBI Rancher";
        case 491: car = "Virgo";
        case 492: car = "Greenwood";
        case 493: car = "Jetmax";
        case 494: car = "Hotring Racer";
        case 495: car = "Sandking";
        case 496: car = "Blista Compact";
        case 497: car = "Police Maverick";
        case 498: car = "Boxville";
        case 499: car = "Benson";
        case 500: car = "Mesa";
        case 501: car = "RC Goblin";
        case 502: car = "Hotring Racer";
        case 503: car = "Hotring Racer";
        case 504: car = "Bloodring Banger";
        case 505: car = "Rancher";
        case 506: car = "Super GT";
        case 507: car = "Elegant";
        case 508: car = "Journey";
        case 509: car = "Bike";
        case 510: car = "Mountain Bike";
        case 511: car = "Beagle";
        case 512: car = "Cropduster";
        case 513: car = "Stuntplane";
        case 514: car = "Tanker";
        case 515: car = "Roadtrain";
        case 516: car = "Nebula";
        case 517: car = "Majestice";
        case 518: car = "Buccaneer";
        case 519: car = "Shamal";
        case 520: car = "Hydra";
        case 521: car = "FCR-900";
        case 522: car = "NRG-500";
        case 523: car = "HPV1000";
        case 524: car = "Cement Truck";
        case 525: car = "Towtruck";
        case 526: car = "Fortune";
        case 527: car = "Cadrona";
        case 528: car = "FBI Truck";
        case 529: car = "Willard";
        case 530: car = "Forklift";
        case 531: car = "Tractor";
        case 532: car = "Combine Harvester";
        case 533: car = "Feltzer";
        case 534: car = "Remington";
        case 535: car = "Slamvan";
        case 536: car = "Blade";
        case 537: car = "Freight";
        case 538: car = "Brownstreak";
        case 539: car = "Vortex";
        case 540: car = "Vincent";
        case 541: car = "Bullet";
        case 542: car = "Clover";
        case 543: car = "Sadler";
        case 544: car = "Firetruck LA";
        case 545: car = "Hustler";
        case 546: car = "Intruder";
        case 547: car = "Primo";
        case 548: car = "Cargobob";
        case 549: car = "Tampa";
        case 550: car = "Sunrise";
        case 551: car = "Merit";
        case 552: car = "Utility Van";
        case 553: car = "Nevada";
        case 554: car = "Yosemite";
        case 555: car = "Windsor";
        case 556: car = "Monster \"A\"";
        case 557: car = "Monster \"B\"";
        case 558: car = "Uranus";
        case 559: car = "Jester";
        case 560: car = "Sultan";
        case 561: car = "Stratum";
        case 562: car = "Elegy";
        case 563: car = "Raindance";
        case 564: car = "RC Tiger";
        case 565: car = "Flash";
        case 566: car = "Tahoma";
        case 567: car = "Savanna";
        case 568: car = "Bandito";
        case 569: car = "Freight Flat Trailer";
        case 570: car = "Streak Trailer";
        case 571: car = "Kart";
        case 572: car = "Mower";
        case 573: car = "Dune";
        case 574: car = "Sweeper";
        case 575: car = "Broadway";
        case 576: car = "Tornado";
        case 577: car = "AT400";
        case 578: car = "DFT-30";
        case 579: car = "Huntley";
        case 580: car = "Stafford";
        case 581: car = "BF-400";
        case 582: car = "Newsvan";
        case 583: car = "Tug";
        case 584: car = "Petrol Trailer";
        case 585: car = "Emperor";
        case 586: car = "Wayfarer";
        case 587: car = "Euros";
        case 588: car = "Hotdog";
        case 589: car = "Club";
        case 590: car = "Freight Box Trailer";
        case 591: car = "Article Trailer 3";
        case 592: car = "Andromada";
        case 593: car = "Dodo";
        case 594: car = "RC Cam";
        case 595: car = "Launch";
        case 596: car = "Police Car (LSPD)";
        case 597: car = "Police Car (SFPD)";
        case 598: car = "Police Car (LVPD)";
        case 599: car = "Police Ranger";
        case 600: car = "Picador";
        case 601: car = "S.W.A.T.";
        case 602: car = "Alpha";
        case 603: car = "Phoenix";
        case 604: car = "Glendale Shit";
        case 605: car = "Sadler Shit";
        case 606: car = "Baggage Trailer A";
        case 607: car = "Baggage Trailer B";
        case 608: car = "Tug Stairs Trailer";
        case 609: car = "Boxville";
        case 610: car = "Farm Trailer";
        case 611: car = "Utility Trailer";
        default:
            car = "Unknown";
    }
    return car;
}

flags:leaders(CMD_SPAWNED)
CMD:leaders(playerid)
{
    new str[2048];
    format(str, sizeof(str), "{00FFFF}OnLine ëèäåðû ãðóïïû:{FFFFFF}\n");

    new c = 0;
    for (new i = 0; i < MAX_PLAYERS; i++)
    {
        if (IsPlayerConnected(i) && PlayerInfo[i][pGang] > 0 && PlayerInfo[i][pGangLvl] >= 6)
        {
            c++;
            format(str, sizeof(str), "%s{CCFF00}%s[%d] | {FFFF00}%s\n", str, PlayerInfo[i][pName], i, GangInfo[PlayerInfo[i][pGang]][gName]);
        }
    }

    if (c == 0)
    {
        format(str, sizeof(str), "%s{FF0000}Íà ñåðâåðå íåò îíëàéí ëèäåðîâ ãðóïï!", str);
    }

    ShowPlayerDialog(playerid, DIALOG_ZERO, DIALOG_STYLE_MSGBOX, ">>[OnLine ëèäåðû]<<", str, "Çàêðûòü", "");
    return 1;
}

flags:test_cmd(CMD_ADMIN)
CMD:test_cmd(playerid)
{
    if (AI[playerid][aLevel] < 4) return 1;
    else SendClientMessage(playerid, COLOR_PURPLE, "Ïðîâåðêà ïðîéäåíà!");
    return 1;
}
alias:test_cmd("tcmd")